-keep class java.util.function.Consumer
-keep class j$.util.Iterator { *; }
-keep class j$.util.DesugarTimeZone {
    java.util.TimeZone getTimeZone(java.lang.String);
}
-keep class j$.util.Iterator$-CC {
    void $default$forEachRemaining(java.util.Iterator, j$.util.function.Consumer);
}
-keep class j$.util.Iterator$-EL {
    void forEachRemaining(java.util.Iterator, j$.util.function.Consumer);
}
-keep class j$.util.Map$-EL {
    java.lang.Object putIfAbsent(java.util.Map, java.lang.Object, java.lang.Object);
}
-keep class j$.util.concurrent.ConcurrentHashMap {
    void <init>();
    void <init>(int, float);
    void <init>(int, float, int);
    java.lang.Object get(java.lang.Object);
    java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object);
}
-keep class j$.util.function.BiConsumer$-CC {
    j$.util.function.BiConsumer $default$andThen(j$.util.function.BiConsumer, j$.util.function.BiConsumer);
}
-keep class j$.util.function.BiConsumer { *; }
-keep class j$.util.function.Consumer$-CC {
    j$.util.function.Consumer $default$andThen(j$.util.function.Consumer, j$.util.function.Consumer);
}
-keep class j$.util.function.Consumer$VivifiedWrapper {
    j$.util.function.Consumer convert(java.util.function.Consumer);
}
-keep class j$.util.function.Consumer { *; }
-keep class j$.util.function.Function$-CC {
    j$.util.function.Function $default$andThen(j$.util.function.Function, j$.util.function.Function);
    j$.util.function.Function $default$compose(j$.util.function.Function, j$.util.function.Function);
}
-keep class j$.util.function.Function { *; }
-keep class j$.util.function.Supplier { *; }
-keep class j$.util.function.UnaryOperator { *; }
