# compiler: R8
# compiler_version: 3.3.83
# min_api: 19
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.0"}
# pg_map_id: 3c41446
# pg_map_hash: SHA-256 3c414461e17f324ee0da427240669d400deb10b45e882884b9288bd4ef936d40
android.app.NotificationChannel -> android.app.NotificationChannel:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(java.lang.String,java.lang.CharSequence,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void setDescription(java.lang.String) -> setDescription
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.Outline -> android.graphics.Outline:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void setRoundRect(int,int,int,int,float) -> setRoundRect
      # {"id":"com.android.tools.r8.synthesized"}
android.os.BaseBundle -> android.os.BaseBundle:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
android.service.quicksettings.Tile -> android.service.quicksettings.Tile:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence getLabel() -> getLabel
      # {"id":"com.android.tools.r8.synthesized"}
    int getState() -> getState
      # {"id":"com.android.tools.r8.synthesized"}
    void setLabel(java.lang.CharSequence) -> setLabel
      # {"id":"com.android.tools.r8.synthesized"}
    void setState(int) -> setState
      # {"id":"com.android.tools.r8.synthesized"}
    void updateTile() -> updateTile
      # {"id":"com.android.tools.r8.synthesized"}
android.service.quicksettings.TileService -> android.service.quicksettings.TileService:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.service.quicksettings.Tile getQsTile() -> getQsTile
      # {"id":"com.android.tools.r8.synthesized"}
    boolean isLocked() -> isLocked
      # {"id":"com.android.tools.r8.synthesized"}
    void onDestroy() -> onDestroy
      # {"id":"com.android.tools.r8.synthesized"}
    void onStartListening() -> onStartListening
      # {"id":"com.android.tools.r8.synthesized"}
    void onStopListening() -> onStopListening
      # {"id":"com.android.tools.r8.synthesized"}
    void unlockAndRun(java.lang.Runnable) -> unlockAndRun
      # {"id":"com.android.tools.r8.synthesized"}
android.view.ViewOutlineProvider -> android.view.ViewOutlineProvider:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
com.android.dex.Annotation -> a.a:
    com.android.dex.EncodedValue encodedAnnotation -> c
    byte visibility -> b
    com.android.dex.Dex dex -> a
    int compareTo(com.android.dex.Annotation) -> a
    com.android.dex.EncodedValueReader getReader() -> b
    int getTypeIndex() -> c
    byte getVisibility() -> d
    void writeTo(com.android.dex.Dex$Section) -> e
com.android.dex.CallSiteId -> a.b:
    int offset -> b
    com.android.dex.Dex dex -> a
    int compareTo(com.android.dex.CallSiteId) -> a
    int getCallSiteOffset() -> b
    void writeTo(com.android.dex.Dex$Section) -> c
com.android.dex.ClassData -> a.c:
    com.android.dex.ClassData$Method[] virtualMethods -> d
    com.android.dex.ClassData$Method[] directMethods -> c
    com.android.dex.ClassData$Field[] instanceFields -> b
    com.android.dex.ClassData$Field[] staticFields -> a
    com.android.dex.ClassData$Method[] getDirectMethods() -> a
    com.android.dex.ClassData$Field[] getInstanceFields() -> b
    com.android.dex.ClassData$Field[] getStaticFields() -> c
    com.android.dex.ClassData$Method[] getVirtualMethods() -> d
com.android.dex.ClassData$Field -> a.c$a:
    int accessFlags -> b
    int fieldIndex -> a
    int getAccessFlags() -> a
    int getFieldIndex() -> b
com.android.dex.ClassData$Method -> a.c$b:
    int accessFlags -> b
    int codeOffset -> c
    int methodIndex -> a
    int getAccessFlags() -> a
    int getCodeOffset() -> b
    int getMethodIndex() -> c
com.android.dex.ClassDef -> a.d:
    int staticValuesOffset -> j
    int annotationsOffset -> h
    int classDataOffset -> i
    int interfacesOffset -> f
    int sourceFileIndex -> g
    int accessFlags -> d
    int supertypeIndex -> e
    int offset -> b
    int typeIndex -> c
    com.android.dex.Dex buffer -> a
    int getAccessFlags() -> a
    int getAnnotationsOffset() -> b
    int getClassDataOffset() -> c
    short[] getInterfaces() -> d
    int getInterfacesOffset() -> e
    int getOffset() -> f
    int getSourceFileIndex() -> g
    int getStaticValuesOffset() -> h
    int getSupertypeIndex() -> i
    int getTypeIndex() -> j
com.android.dex.Code -> a.e:
    com.android.dex.Code$CatchHandler[] catchHandlers -> g
    com.android.dex.Code$Try[] tries -> f
    int debugInfoOffset -> d
    int insSize -> b
    int outsSize -> c
    int registersSize -> a
    short[] instructions -> e
    com.android.dex.Code$CatchHandler[] getCatchHandlers() -> a
    int getDebugInfoOffset() -> b
    int getInsSize() -> c
    short[] getInstructions() -> d
    int getOutsSize() -> e
    int getRegistersSize() -> f
    com.android.dex.Code$Try[] getTries() -> g
com.android.dex.Code$CatchHandler -> a.e$a:
    int[] addresses -> b
    int offset -> d
    int[] typeIndexes -> a
    int catchAllAddress -> c
    int[] getAddresses() -> a
    int getCatchAllAddress() -> b
    int getOffset() -> c
    int[] getTypeIndexes() -> d
com.android.dex.Code$Try -> a.e$b:
    int instructionCount -> b
    int catchHandlerIndex -> c
    int startAddress -> a
    int getCatchHandlerIndex() -> a
    int getInstructionCount() -> b
    int getStartAddress() -> c
com.android.dex.Dex -> a.f:
    short[] EMPTY_SHORT_ARRAY -> j
    com.android.dex.Dex$ProtoIdTable protoIds -> g
    com.android.dex.Dex$StringTable strings -> d
    com.android.dex.Dex$FieldIdTable fieldIds -> h
    com.android.dex.Dex$TypeIndexToDescriptorTable typeNames -> f
    com.android.dex.TableOfContents tableOfContents -> b
    com.android.dex.Dex$TypeIndexToDescriptorIndexTable typeIds -> e
    java.nio.ByteBuffer data -> a
    int nextSectionStart -> c
    com.android.dex.Dex$MethodIdTable methodIds -> i
    com.android.dex.TableOfContents access$1000(com.android.dex.Dex) -> a
    void access$1100(int,int) -> b
    com.android.dex.Dex$StringTable access$1200(com.android.dex.Dex) -> c
    com.android.dex.Dex$Section appendSection(int,java.lang.String) -> d
    void checkBounds(int,int) -> e
    java.lang.Iterable classDefs() -> f
    int computeChecksum() -> g
    byte[] computeSignature() -> h
    int descriptorIndexFromTypeIndex(int) -> i
    java.util.List fieldIds() -> j
    byte[] getBytes() -> k
    int getLength() -> l
    int getNextSectionStart() -> m
    com.android.dex.TableOfContents getTableOfContents() -> n
    void loadFrom(java.io.InputStream) -> o
    java.util.List methodIds() -> p
    com.android.dex.Dex$Section open(int) -> q
    java.util.List protoIds() -> r
    com.android.dex.ClassData readClassData(com.android.dex.ClassDef) -> s
    com.android.dex.Code readCode(com.android.dex.ClassData$Method) -> t
    com.android.dex.TypeList readTypeList(int) -> u
    java.util.List strings() -> v
    java.util.List typeNames() -> w
    void writeHashes() -> x
    void writeTo(java.io.File) -> y
    void writeTo(java.io.OutputStream) -> z
com.android.dex.Dex$1 -> a.f$a:
com.android.dex.Dex$ClassDefIterable -> a.f$b:
    com.android.dex.Dex this$0 -> a
com.android.dex.Dex$ClassDefIterator -> a.f$c:
    com.android.dex.Dex$Section in -> a
    int count -> b
    com.android.dex.Dex this$0 -> c
    com.android.dex.ClassDef next() -> a
    void forEachRemaining($-vivified-$.java.util.function.Consumer) -> forEachRemaining
      # {"id":"com.android.tools.r8.synthesized"}
    void forEachRemaining(java.util.function.Consumer) -> forEachRemaining
      # {"id":"com.android.tools.r8.synthesized"}
com.android.dex.Dex$FieldIdTable -> a.f$d:
    com.android.dex.Dex this$0 -> a
    com.android.dex.FieldId get(int) -> a
com.android.dex.Dex$MethodIdTable -> a.f$e:
    com.android.dex.Dex this$0 -> a
    com.android.dex.MethodId get(int) -> a
com.android.dex.Dex$ProtoIdTable -> a.f$f:
    com.android.dex.Dex this$0 -> a
    com.android.dex.ProtoId get(int) -> a
com.android.dex.Dex$Section -> a.f$g:
    java.lang.String name -> a
    java.nio.ByteBuffer data -> b
    com.android.dex.Dex this$0 -> d
    int initialPosition -> c
    com.android.dex.ClassDef readClassDef() -> A
    com.android.dex.Code readCode() -> B
    com.android.dex.EncodedValue readEncodedArray() -> C
    com.android.dex.FieldId readFieldId() -> D
    com.android.dex.ClassData$Field[] readFields(int) -> E
    int readInt() -> F
    com.android.dex.MethodHandle readMethodHandle() -> G
    com.android.dex.MethodId readMethodId() -> H
    com.android.dex.ClassData$Method[] readMethods(int) -> I
    com.android.dex.ProtoId readProtoId() -> J
    short readShort() -> K
    short[] readShortArray(int) -> L
    int readSleb128() -> M
    java.lang.String readString() -> N
    com.android.dex.Code$Try[] readTries(int,com.android.dex.Code$CatchHandler[]) -> O
    com.android.dex.TypeList readTypeList() -> P
    int readUleb128() -> Q
    int readUleb128p1() -> R
    int readUnsignedShort() -> S
    void skip(int) -> T
    int used() -> U
    void write(short[]) -> V
    void writeShort(short) -> W
    void writeSleb128(int) -> X
    void writeStringData(java.lang.String) -> Y
    void writeTypeList(com.android.dex.TypeList) -> Z
    void writeUleb128(int) -> a0
    void writeUleb128p1(int) -> b0
    void writeUnsignedShort(int) -> c0
    com.android.dex.ClassData access$800(com.android.dex.Dex$Section) -> m
    com.android.dex.Code access$900(com.android.dex.Dex$Section) -> n
    void alignToFourBytes() -> o
    void alignToFourBytesWithZeroFill() -> p
    void assertFourByteAligned() -> q
    int findCatchHandlerIndex(com.android.dex.Code$CatchHandler[],int) -> r
    byte[] getBytesFrom(int) -> s
    int getPosition() -> t
    com.android.dex.Annotation readAnnotation() -> u
    byte[] readByteArray(int) -> v
    com.android.dex.CallSiteId readCallSiteId() -> w
    com.android.dex.Code$CatchHandler readCatchHandler(int) -> x
    com.android.dex.Code$CatchHandler[] readCatchHandlers() -> y
    com.android.dex.ClassData readClassData() -> z
com.android.dex.Dex$StringTable -> a.f$h:
    com.android.dex.Dex this$0 -> a
    java.lang.String get(int) -> a
com.android.dex.Dex$TypeIndexToDescriptorIndexTable -> a.f$i:
    com.android.dex.Dex this$0 -> a
    java.lang.Integer get(int) -> a
com.android.dex.Dex$TypeIndexToDescriptorTable -> a.f$j:
    com.android.dex.Dex this$0 -> a
    java.lang.String get(int) -> a
com.android.dex.DexException -> a.g:
com.android.dex.DexFormat -> a.h:
    java.lang.String apiToMagic(int) -> a
    boolean isSupportedDexMagic(byte[]) -> b
    int magicToApi(byte[]) -> c
com.android.dex.DexIndexOverflowException -> a.i:
com.android.dex.EncodedValue -> a.j:
    byte[] data -> a
    com.android.dex.util.ByteInput asByteInput() -> a
    int compareTo(com.android.dex.EncodedValue) -> b
    void writeTo(com.android.dex.Dex$Section) -> c
com.android.dex.EncodedValueCodec -> a.k:
    int readSignedInt(com.android.dex.util.ByteInput,int) -> a
    long readSignedLong(com.android.dex.util.ByteInput,int) -> b
    int readUnsignedInt(com.android.dex.util.ByteInput,int,boolean) -> c
    long readUnsignedLong(com.android.dex.util.ByteInput,int,boolean) -> d
    void writeRightZeroExtendedValue(com.android.dex.util.ByteOutput,int,long) -> e
    void writeSignedIntegralValue(com.android.dex.util.ByteOutput,int,long) -> f
    void writeUnsignedIntegralValue(com.android.dex.util.ByteOutput,int,long) -> g
com.android.dex.EncodedValueReader -> a.l:
    com.android.dex.util.ByteInput in -> a
    int arg -> d
    int type -> b
    int annotationType -> c
    void checkType(int) -> a
    int getAnnotationType() -> b
    int peek() -> c
    int readAnnotation() -> d
    int readAnnotationName() -> e
    int readArray() -> f
    boolean readBoolean() -> g
    byte readByte() -> h
    char readChar() -> i
    double readDouble() -> j
    int readEnum() -> k
    int readField() -> l
    float readFloat() -> m
    int readInt() -> n
    long readLong() -> o
    int readMethod() -> p
    int readMethodHandle() -> q
    int readMethodType() -> r
    void readNull() -> s
    short readShort() -> t
    int readString() -> u
    int readType() -> v
    void skipValue() -> w
com.android.dex.FieldId -> a.m:
    int nameIndex -> d
    int declaringClassIndex -> b
    int typeIndex -> c
    com.android.dex.Dex dex -> a
    int compareTo(com.android.dex.FieldId) -> a
    int getDeclaringClassIndex() -> b
    int getNameIndex() -> c
    int getTypeIndex() -> d
    void writeTo(com.android.dex.Dex$Section) -> e
com.android.dex.Leb128 -> a.n:
    int readSignedLeb128(com.android.dex.util.ByteInput) -> a
    int readUnsignedLeb128(com.android.dex.util.ByteInput) -> b
    int unsignedLeb128Size(int) -> c
    void writeSignedLeb128(com.android.dex.util.ByteOutput,int) -> d
    void writeUnsignedLeb128(com.android.dex.util.ByteOutput,int) -> e
com.android.dex.MethodHandle -> a.o:
    com.android.dex.MethodHandle$MethodHandleType methodHandleType -> b
    int fieldOrMethodId -> d
    int unused2 -> e
    int unused1 -> c
    com.android.dex.Dex dex -> a
    int compareTo(com.android.dex.MethodHandle) -> a
    int getFieldOrMethodId() -> b
    com.android.dex.MethodHandle$MethodHandleType getMethodHandleType() -> c
    int getUnused1() -> d
    int getUnused2() -> e
    void writeTo(com.android.dex.Dex$Section) -> f
com.android.dex.MethodHandle$1 -> a.o$a:
    int[] $SwitchMap$com$android$dex$MethodHandle$MethodHandleType -> a
com.android.dex.MethodHandle$MethodHandleType -> a.o$b:
    com.android.dex.MethodHandle$MethodHandleType METHOD_HANDLE_TYPE_STATIC_GET -> c
    com.android.dex.MethodHandle$MethodHandleType METHOD_HANDLE_TYPE_STATIC_PUT -> b
    com.android.dex.MethodHandle$MethodHandleType METHOD_HANDLE_TYPE_INVOKE_INSTANCE -> g
    com.android.dex.MethodHandle$MethodHandleType METHOD_HANDLE_TYPE_INVOKE_STATIC -> f
    com.android.dex.MethodHandle$MethodHandleType METHOD_HANDLE_TYPE_INSTANCE_GET -> e
    com.android.dex.MethodHandle$MethodHandleType METHOD_HANDLE_TYPE_INSTANCE_PUT -> d
    com.android.dex.MethodHandle$MethodHandleType[] $VALUES -> k
    com.android.dex.MethodHandle$MethodHandleType METHOD_HANDLE_TYPE_INVOKE_INTERFACE -> j
    com.android.dex.MethodHandle$MethodHandleType METHOD_HANDLE_TYPE_INVOKE_CONSTRUCTOR -> i
    int value -> a
    com.android.dex.MethodHandle$MethodHandleType METHOD_HANDLE_TYPE_INVOKE_DIRECT -> h
    int access$000(com.android.dex.MethodHandle$MethodHandleType) -> a
    com.android.dex.MethodHandle$MethodHandleType fromValue(int) -> b
    boolean isField() -> c
com.android.dex.MethodId -> a.p:
    int nameIndex -> d
    int declaringClassIndex -> b
    int protoIndex -> c
    com.android.dex.Dex dex -> a
    int compareTo(com.android.dex.MethodId) -> a
    int getDeclaringClassIndex() -> b
    int getNameIndex() -> c
    int getProtoIndex() -> d
    void writeTo(com.android.dex.Dex$Section) -> e
com.android.dex.Mutf8 -> a.q:
    long countBytes(java.lang.String,boolean) -> a
    java.lang.String decode(com.android.dex.util.ByteInput,char[]) -> b
    void encode(byte[],int,java.lang.String) -> c
    byte[] encode(java.lang.String) -> d
com.android.dex.ProtoId -> a.r:
    int parametersOffset -> d
    int shortyIndex -> b
    int returnTypeIndex -> c
    com.android.dex.Dex dex -> a
    int compareTo(com.android.dex.ProtoId) -> a
    int getParametersOffset() -> b
    int getReturnTypeIndex() -> c
    int getShortyIndex() -> d
    void writeTo(com.android.dex.Dex$Section) -> e
com.android.dex.TableOfContents -> a.s:
    com.android.dex.TableOfContents$Section stringDatas -> p
    com.android.dex.TableOfContents$Section classDatas -> n
    com.android.dex.TableOfContents$Section annotationsDirectories -> t
    int dataOff -> C
    com.android.dex.TableOfContents$Section annotations -> r
    int linkOff -> A
    com.android.dex.TableOfContents$Section callSiteIds -> h
    com.android.dex.TableOfContents$Section methodIds -> f
    com.android.dex.TableOfContents$Section annotationSetRefLists -> l
    com.android.dex.TableOfContents$Section mapList -> j
    int fileSize -> y
    int checksum -> w
    com.android.dex.TableOfContents$Section[] sections -> u
    com.android.dex.TableOfContents$Section protoIds -> d
    com.android.dex.TableOfContents$Section stringIds -> b
    byte[] signature -> x
    com.android.dex.TableOfContents$Section debugInfos -> q
    com.android.dex.TableOfContents$Section codes -> o
    int dataSize -> B
    com.android.dex.TableOfContents$Section encodedArrays -> s
    com.android.dex.TableOfContents$Section methodHandles -> i
    com.android.dex.TableOfContents$Section classDefs -> g
    int linkSize -> z
    com.android.dex.TableOfContents$Section annotationSets -> m
    com.android.dex.TableOfContents$Section typeLists -> k
    int apiLevel -> v
    com.android.dex.TableOfContents$Section header -> a
    com.android.dex.TableOfContents$Section fieldIds -> e
    com.android.dex.TableOfContents$Section typeIds -> c
    void computeSizesFromOffsets() -> a
    com.android.dex.TableOfContents$Section getSection(short) -> b
    void readFrom(com.android.dex.Dex) -> c
    void readHeader(com.android.dex.Dex$Section) -> d
    void readMap(com.android.dex.Dex$Section) -> e
    void writeHeader(com.android.dex.Dex$Section,int) -> f
    void writeMap(com.android.dex.Dex$Section) -> g
com.android.dex.TableOfContents$Section -> a.s$a:
    int byteCount -> d
    int size -> b
    int off -> c
    short type -> a
    int compareTo(com.android.dex.TableOfContents$Section) -> a
    boolean exists() -> b
com.android.dex.TypeList -> a.t:
    com.android.dex.TypeList EMPTY -> c
    short[] types -> b
    com.android.dex.Dex dex -> a
    int compareTo(com.android.dex.TypeList) -> a
    short[] getTypes() -> b
com.android.dex.util.ByteArrayByteInput -> b.a:
    byte[] bytes -> a
    int position -> b
com.android.dex.util.ByteInput -> b.b:
com.android.dex.util.ByteOutput -> b.c:
com.android.dex.util.ExceptionWithContext -> b.d:
    java.lang.StringBuffer context -> a
    void addContext(java.lang.String) -> a
    com.android.dex.util.ExceptionWithContext withContext(java.lang.Throwable,java.lang.String) -> b
com.android.dex.util.FileUtils -> b.e:
    boolean hasArchiveSuffix(java.lang.String) -> a
com.android.dex.util.Unsigned -> b.f:
    int compare(int,int) -> a
    int compare(short,short) -> b
com.android.dx.cf.attrib.AttAnnotationDefault -> c.a:
    com.android.dx.rop.cst.Constant value -> b
    int byteLength -> c
    com.android.dx.rop.cst.Constant getValue() -> a
    int byteLength() -> b
com.android.dx.cf.attrib.AttBootstrapMethods -> c.b:
    com.android.dx.cf.code.BootstrapMethodsList bootstrapMethods -> b
    int byteLength -> c
    com.android.dx.cf.code.BootstrapMethodsList getBootstrapMethods() -> a
    int byteLength() -> b
com.android.dx.cf.attrib.AttCode -> c.c:
    com.android.dx.cf.code.ByteCatchList catches -> e
    int maxStack -> b
    int maxLocals -> c
    com.android.dx.cf.code.BytecodeArray code -> d
    com.android.dx.cf.iface.AttributeList attributes -> f
    com.android.dx.cf.iface.AttributeList getAttributes() -> a
    int byteLength() -> b
    com.android.dx.cf.code.ByteCatchList getCatches() -> c
    com.android.dx.cf.code.BytecodeArray getCode() -> d
    int getMaxLocals() -> e
    int getMaxStack() -> f
com.android.dx.cf.attrib.AttConstantValue -> c.d:
    com.android.dx.rop.cst.TypedConstant constantValue -> b
    com.android.dx.rop.cst.TypedConstant getConstantValue() -> a
    int byteLength() -> b
com.android.dx.cf.attrib.AttDeprecated -> c.e:
    int byteLength() -> b
com.android.dx.cf.attrib.AttEnclosingMethod -> c.f:
    com.android.dx.rop.cst.CstNat method -> c
    com.android.dx.rop.cst.CstType type -> b
    com.android.dx.rop.cst.CstType getEnclosingClass() -> a
    int byteLength() -> b
    com.android.dx.rop.cst.CstNat getMethod() -> c
com.android.dx.cf.attrib.AttExceptions -> c.g:
    com.android.dx.rop.type.TypeList exceptions -> b
    com.android.dx.rop.type.TypeList getExceptions() -> a
    int byteLength() -> b
com.android.dx.cf.attrib.AttInnerClasses -> c.h:
    com.android.dx.cf.attrib.InnerClassList innerClasses -> b
    com.android.dx.cf.attrib.InnerClassList getInnerClasses() -> a
    int byteLength() -> b
com.android.dx.cf.attrib.AttLineNumberTable -> c.i:
    com.android.dx.cf.code.LineNumberList lineNumbers -> b
    com.android.dx.cf.code.LineNumberList getLineNumbers() -> a
    int byteLength() -> b
com.android.dx.cf.attrib.AttLocalVariableTable -> c.j:
com.android.dx.cf.attrib.AttLocalVariableTypeTable -> c.k:
com.android.dx.cf.attrib.AttRuntimeInvisibleAnnotations -> c.l:
com.android.dx.cf.attrib.AttRuntimeInvisibleParameterAnnotations -> c.m:
com.android.dx.cf.attrib.AttRuntimeVisibleAnnotations -> c.n:
com.android.dx.cf.attrib.AttRuntimeVisibleParameterAnnotations -> c.o:
com.android.dx.cf.attrib.AttSignature -> c.p:
    com.android.dx.rop.cst.CstString signature -> b
    com.android.dx.rop.cst.CstString getSignature() -> a
    int byteLength() -> b
com.android.dx.cf.attrib.AttSourceDebugExtension -> c.q:
    com.android.dx.rop.cst.CstString smapString -> b
    com.android.dx.rop.cst.CstString getSmapString() -> a
    int byteLength() -> b
com.android.dx.cf.attrib.AttSourceFile -> c.r:
    com.android.dx.rop.cst.CstString sourceFile -> b
    com.android.dx.rop.cst.CstString getSourceFile() -> a
    int byteLength() -> b
com.android.dx.cf.attrib.AttSynthetic -> c.s:
    int byteLength() -> b
com.android.dx.cf.attrib.BaseAnnotations -> c.t:
    int byteLength -> c
    com.android.dx.rop.annotation.Annotations annotations -> b
    com.android.dx.rop.annotation.Annotations getAnnotations() -> a
    int byteLength() -> b
com.android.dx.cf.attrib.BaseAttribute -> c.u:
    java.lang.String name -> a
com.android.dx.cf.attrib.BaseLocalVariables -> c.v:
    com.android.dx.cf.code.LocalVariableList localVariables -> b
    com.android.dx.cf.code.LocalVariableList getLocalVariables() -> a
    int byteLength() -> b
com.android.dx.cf.attrib.BaseParameterAnnotations -> c.w:
    com.android.dx.rop.annotation.AnnotationsList parameterAnnotations -> b
    int byteLength -> c
    com.android.dx.rop.annotation.AnnotationsList getParameterAnnotations() -> a
    int byteLength() -> b
com.android.dx.cf.attrib.InnerClassList -> c.x:
    void set(int,com.android.dx.rop.cst.CstType,com.android.dx.rop.cst.CstType,com.android.dx.rop.cst.CstString,int) -> A
    com.android.dx.cf.attrib.InnerClassList$Item get(int) -> z
com.android.dx.cf.attrib.InnerClassList$Item -> c.x$a:
    com.android.dx.rop.cst.CstString innerName -> c
    int accessFlags -> d
    com.android.dx.rop.cst.CstType innerClass -> a
    com.android.dx.rop.cst.CstType outerClass -> b
    int getAccessFlags() -> a
    com.android.dx.rop.cst.CstType getInnerClass() -> b
    com.android.dx.rop.cst.CstString getInnerName() -> c
    com.android.dx.rop.cst.CstType getOuterClass() -> d
com.android.dx.cf.attrib.RawAttribute -> c.y:
    com.android.dx.util.ByteArray data -> b
    com.android.dx.rop.cst.ConstantPool pool -> c
    int byteLength() -> b
com.android.dx.cf.code.BaseMachine -> d.a:
    int resultCount -> n
    com.android.dx.rop.type.TypeBearer[] args -> b
    com.android.dx.rop.cst.Constant auxCst -> f
    int localIndex -> j
    boolean localInfo -> k
    com.android.dx.rop.type.Type auxType -> d
    int auxTarget -> g
    com.android.dx.cf.code.SwitchList auxCases -> h
    int auxInt -> e
    com.android.dx.rop.code.RegisterSpec localTarget -> l
    int argCount -> c
    java.util.ArrayList auxInitValues -> i
    com.android.dx.rop.type.Prototype prototype -> a
    com.android.dx.rop.type.TypeBearer[] results -> m
    int getLocalIndex() -> A
    com.android.dx.rop.code.RegisterSpec getLocalTarget(boolean) -> B
    com.android.dx.rop.type.TypeBearer result(int) -> C
    int resultCount() -> D
    void setResult(com.android.dx.rop.type.TypeBearer) -> E
    void storeResults(com.android.dx.cf.code.Frame) -> F
    void throwLocalMismatch(com.android.dx.rop.type.TypeBearer,com.android.dx.rop.type.TypeBearer) -> G
    void popArgs(com.android.dx.cf.code.Frame,com.android.dx.rop.type.Type) -> a
    void clearArgs() -> b
    void localArg(com.android.dx.cf.code.Frame,int) -> c
    void popArgs(com.android.dx.cf.code.Frame,com.android.dx.rop.type.Prototype) -> d
    void popArgs(com.android.dx.cf.code.Frame,com.android.dx.rop.type.Type,com.android.dx.rop.type.Type) -> e
    void auxInitValues(java.util.ArrayList) -> f
    void localInfo(boolean) -> g
    void auxTargetArg(int) -> h
    void popArgs(com.android.dx.cf.code.Frame,com.android.dx.rop.type.Type,com.android.dx.rop.type.Type,com.android.dx.rop.type.Type) -> i
    void localTarget(int,com.android.dx.rop.type.Type,com.android.dx.rop.code.LocalItem) -> j
    void auxSwitchArg(com.android.dx.cf.code.SwitchList) -> k
    void auxIntArg(int) -> m
    void auxCstArg(com.android.dx.rop.cst.Constant) -> n
    void auxType(com.android.dx.rop.type.Type) -> o
    void popArgs(com.android.dx.cf.code.Frame,int) -> p
    void addResult(com.android.dx.rop.type.TypeBearer) -> q
    com.android.dx.rop.type.TypeBearer arg(int) -> r
    int argCount() -> s
    void clearResult() -> t
    com.android.dx.cf.code.SwitchList getAuxCases() -> u
    com.android.dx.rop.cst.Constant getAuxCst() -> v
    int getAuxInt() -> w
    int getAuxTarget() -> x
    com.android.dx.rop.type.Type getAuxType() -> y
    java.util.ArrayList getInitValues() -> z
com.android.dx.cf.code.BasicBlocker -> d.b:
    com.android.dx.cf.code.ConcreteMethod method -> a
    int[] workSet -> b
    int[] liveSet -> c
    int[] blockSet -> d
    com.android.dx.util.IntList[] targetLists -> e
    int previousOffset -> g
    com.android.dx.cf.code.ByteCatchList[] catchLists -> f
    void visitBranch(int,int,int,int) -> a
    void setPreviousOffset(int) -> b
    void visitLocal(int,int,int,int,com.android.dx.rop.type.Type,int) -> c
    void visitSwitch(int,int,int,com.android.dx.cf.code.SwitchList,int) -> d
    void visitNoArgs(int,int,int,com.android.dx.rop.type.Type) -> e
    void visitInvalid(int,int,int) -> f
    void visitNewarray(int,int,com.android.dx.rop.cst.CstType,java.util.ArrayList) -> g
    int getPreviousOffset() -> h
    void visitConstant(int,int,int,com.android.dx.rop.cst.Constant,int) -> i
    void addWorkIfNecessary(int,boolean) -> j
    void doit() -> k
    com.android.dx.cf.code.ByteBlockList getBlockList() -> l
    com.android.dx.cf.code.ByteBlockList identifyBlocks(com.android.dx.cf.code.ConcreteMethod) -> m
    void visitCommon(int,int,boolean) -> n
    void visitThrowing(int,int,boolean) -> o
com.android.dx.cf.code.BootstrapMethodArgumentsList -> d.c:
    void set(int,com.android.dx.rop.cst.Constant) -> z
com.android.dx.cf.code.BootstrapMethodsList -> d.d:
    com.android.dx.cf.code.BootstrapMethodsList EMPTY -> c
    void set(int,com.android.dx.cf.code.BootstrapMethodsList$Item) -> A
    void set(int,com.android.dx.rop.cst.CstType,com.android.dx.rop.cst.CstMethodHandle,com.android.dx.cf.code.BootstrapMethodArgumentsList) -> B
    com.android.dx.cf.code.BootstrapMethodsList$Item get(int) -> z
com.android.dx.cf.code.BootstrapMethodsList$Item -> d.d$a:
    com.android.dx.cf.code.BootstrapMethodArgumentsList bootstrapMethodArgumentsList -> a
    com.android.dx.rop.cst.CstMethodHandle bootstrapMethodHandle -> b
    com.android.dx.rop.cst.CstType declaringClass -> c
    com.android.dx.cf.code.BootstrapMethodArgumentsList getBootstrapMethodArguments() -> a
    com.android.dx.rop.cst.CstMethodHandle getBootstrapMethodHandle() -> b
com.android.dx.cf.code.ByteBlock -> d.e:
    com.android.dx.cf.code.ByteCatchList catches -> e
    int start -> b
    int end -> c
    com.android.dx.util.IntList successors -> d
    int label -> a
    int getLabel() -> a
    com.android.dx.cf.code.ByteCatchList getCatches() -> b
    int getEnd() -> c
    int getStart() -> d
    com.android.dx.util.IntList getSuccessors() -> e
com.android.dx.cf.code.ByteBlockList -> d.f:
    com.android.dx.cf.code.ByteBlock get(int) -> F
    com.android.dx.cf.code.ByteBlock labelToBlock(int) -> G
    void set(int,com.android.dx.cf.code.ByteBlock) -> H
com.android.dx.cf.code.ByteCatchList -> d.g:
    com.android.dx.cf.code.ByteCatchList EMPTY -> c
    com.android.dx.cf.code.ByteCatchList listFor(int) -> A
    void set(int,int,int,int,com.android.dx.rop.cst.CstType) -> B
    void set(int,com.android.dx.cf.code.ByteCatchList$Item) -> C
    com.android.dx.rop.type.TypeList toRopCatchList() -> D
    com.android.dx.util.IntList toTargetList(int) -> E
    boolean typeNotFound(com.android.dx.cf.code.ByteCatchList$Item,com.android.dx.cf.code.ByteCatchList$Item[],int) -> F
    int byteLength() -> b
    com.android.dx.cf.code.ByteCatchList$Item get(int) -> z
com.android.dx.cf.code.ByteCatchList$Item -> d.g$a:
    com.android.dx.rop.cst.CstType exceptionClass -> d
    int endPc -> b
    int handlerPc -> c
    int startPc -> a
    boolean covers(int) -> a
    int getEndPc() -> b
    com.android.dx.rop.cst.CstType getExceptionClass() -> c
    int getHandlerPc() -> d
    int getStartPc() -> e
com.android.dx.cf.code.ByteOps -> d.h:
    int[] OPCODE_INFO -> a
    java.lang.String[] OPCODE_NAMES -> b
    int opInfo(int) -> a
    java.lang.String opName(int) -> b
com.android.dx.cf.code.BytecodeArray -> d.i:
    com.android.dx.rop.cst.ConstantPool pool -> b
    com.android.dx.cf.code.BytecodeArray$Visitor EMPTY_VISITOR -> c
    com.android.dx.util.ByteArray bytes -> a
    int byteLength() -> a
    void forEach(com.android.dx.cf.code.BytecodeArray$Visitor) -> b
    com.android.dx.util.ByteArray getBytes() -> c
    int parseInstruction(int,com.android.dx.cf.code.BytecodeArray$Visitor) -> d
    int parseLookupswitch(int,com.android.dx.cf.code.BytecodeArray$Visitor) -> e
    int parseNewarray(int,com.android.dx.cf.code.BytecodeArray$Visitor) -> f
    int parseTableswitch(int,com.android.dx.cf.code.BytecodeArray$Visitor) -> g
    int parseWide(int,com.android.dx.cf.code.BytecodeArray$Visitor) -> h
    void processWorkSet(int[],com.android.dx.cf.code.BytecodeArray$Visitor) -> i
    int size() -> j
com.android.dx.cf.code.BytecodeArray$BaseVisitor -> d.i$a:
    int previousOffset -> a
    void visitBranch(int,int,int,int) -> a
    void setPreviousOffset(int) -> b
    void visitLocal(int,int,int,int,com.android.dx.rop.type.Type,int) -> c
    void visitSwitch(int,int,int,com.android.dx.cf.code.SwitchList,int) -> d
    void visitNoArgs(int,int,int,com.android.dx.rop.type.Type) -> e
    void visitInvalid(int,int,int) -> f
    void visitNewarray(int,int,com.android.dx.rop.cst.CstType,java.util.ArrayList) -> g
    int getPreviousOffset() -> h
    void visitConstant(int,int,int,com.android.dx.rop.cst.Constant,int) -> i
com.android.dx.cf.code.BytecodeArray$ConstantParserVisitor -> d.i$b:
    com.android.dx.rop.cst.Constant cst -> b
    int value -> d
    com.android.dx.cf.code.BytecodeArray this$0 -> e
    int length -> c
    void visitBranch(int,int,int,int) -> a
    void setPreviousOffset(int) -> b
    void visitLocal(int,int,int,int,com.android.dx.rop.type.Type,int) -> c
    void visitSwitch(int,int,int,com.android.dx.cf.code.SwitchList,int) -> d
    void visitNoArgs(int,int,int,com.android.dx.rop.type.Type) -> e
    void visitInvalid(int,int,int) -> f
    void visitNewarray(int,int,com.android.dx.rop.cst.CstType,java.util.ArrayList) -> g
    int getPreviousOffset() -> h
    void visitConstant(int,int,int,com.android.dx.rop.cst.Constant,int) -> i
    void clear() -> j
com.android.dx.cf.code.BytecodeArray$Visitor -> d.i$c:
    void visitBranch(int,int,int,int) -> a
    void setPreviousOffset(int) -> b
    void visitLocal(int,int,int,int,com.android.dx.rop.type.Type,int) -> c
    void visitSwitch(int,int,int,com.android.dx.cf.code.SwitchList,int) -> d
    void visitNoArgs(int,int,int,com.android.dx.rop.type.Type) -> e
    void visitInvalid(int,int,int) -> f
    void visitNewarray(int,int,com.android.dx.rop.cst.CstType,java.util.ArrayList) -> g
    int getPreviousOffset() -> h
    void visitConstant(int,int,int,com.android.dx.rop.cst.Constant,int) -> i
com.android.dx.cf.code.ConcreteMethod -> d.j:
    com.android.dx.cf.iface.Method method -> a
    com.android.dx.cf.code.LineNumberList lineNumbers -> d
    com.android.dx.cf.code.LocalVariableList localVariables -> e
    com.android.dx.cf.iface.ClassFile classFile -> b
    com.android.dx.cf.attrib.AttCode attCode -> c
    int getAccessFlags() -> a
    com.android.dx.rop.type.Prototype getEffectiveDescriptor() -> b
    com.android.dx.rop.cst.CstNat getNat() -> c
    com.android.dx.rop.cst.CstType getDefiningClass() -> d
    com.android.dx.rop.cst.CstString getDescriptor() -> f
    com.android.dx.cf.code.ByteCatchList getCatches() -> g
    com.android.dx.cf.code.BytecodeArray getCode() -> h
    com.android.dx.cf.code.LocalVariableList getLocalVariables() -> i
    int getMaxLocals() -> j
    int getMaxStack() -> k
    com.android.dx.rop.cst.CstString getSourceFile() -> l
    boolean isDefaultOrStaticInterfaceMethod() -> m
    boolean isStaticMethod() -> n
    com.android.dx.rop.code.SourcePosition makeSourcePosistion(int) -> o
com.android.dx.cf.code.ExecutionStack -> d.k:
    com.android.dx.rop.type.TypeBearer[] stack -> b
    boolean[] local -> c
    int stackPtr -> d
    com.android.dx.rop.type.TypeBearer pop() -> A
    void push(com.android.dx.rop.type.TypeBearer) -> B
    void setLocal() -> C
    java.lang.String stackElementString(com.android.dx.rop.type.TypeBearer) -> D
    com.android.dx.rop.type.TypeBearer throwSimException(java.lang.String) -> E
    void annotate(com.android.dex.util.ExceptionWithContext) -> r
    void change(int,com.android.dx.rop.type.TypeBearer) -> s
    void clear() -> t
    com.android.dx.cf.code.ExecutionStack copy() -> u
    void makeInitialized(com.android.dx.rop.type.Type) -> v
    com.android.dx.cf.code.ExecutionStack merge(com.android.dx.cf.code.ExecutionStack) -> w
    com.android.dx.rop.type.TypeBearer peek(int) -> x
    boolean peekLocal(int) -> y
    com.android.dx.rop.type.Type peekType(int) -> z
com.android.dx.cf.code.Frame -> d.l:
    com.android.dx.cf.code.LocalsArray locals -> a
    com.android.dx.cf.code.ExecutionStack stack -> b
    com.android.dx.util.IntList subroutines -> c
    com.android.dx.cf.code.LocalsArray adjustLocalsForSubroutines(com.android.dx.cf.code.LocalsArray,com.android.dx.util.IntList) -> a
    void annotate(com.android.dex.util.ExceptionWithContext) -> b
    com.android.dx.cf.code.Frame copy() -> c
    com.android.dx.cf.code.LocalsArray getLocals() -> d
    com.android.dx.cf.code.ExecutionStack getStack() -> e
    com.android.dx.util.IntList getSubroutines() -> f
    void initializeWithParameters(com.android.dx.rop.type.StdTypeList) -> g
    com.android.dx.cf.code.Frame makeExceptionHandlerStartFrame(com.android.dx.rop.cst.CstType) -> h
    void makeInitialized(com.android.dx.rop.type.Type) -> i
    com.android.dx.cf.code.Frame makeNewSubroutineStartFrame(int,int) -> j
    com.android.dx.util.IntList mergeSubroutineLists(com.android.dx.util.IntList) -> k
    com.android.dx.cf.code.Frame mergeWith(com.android.dx.cf.code.Frame) -> l
    com.android.dx.cf.code.Frame mergeWithSubroutineCaller(com.android.dx.cf.code.Frame,int,int) -> m
    void setImmutable() -> n
    com.android.dx.cf.code.Frame subFrameForLabel(int,int) -> o
com.android.dx.cf.code.LineNumberList -> d.m:
    com.android.dx.cf.code.LineNumberList EMPTY -> c
    com.android.dx.cf.code.LineNumberList$Item get(int) -> A
    int pcToLine(int) -> B
    void set(int,int,int) -> C
    void set(int,com.android.dx.cf.code.LineNumberList$Item) -> D
    com.android.dx.cf.code.LineNumberList concat(com.android.dx.cf.code.LineNumberList,com.android.dx.cf.code.LineNumberList) -> z
com.android.dx.cf.code.LineNumberList$Item -> d.m$a:
    int lineNumber -> b
    int startPc -> a
    int getLineNumber() -> a
    int getStartPc() -> b
com.android.dx.cf.code.LocalVariableList -> d.n:
    com.android.dx.cf.code.LocalVariableList EMPTY -> c
    com.android.dx.cf.code.LocalVariableList$Item get(int) -> A
    com.android.dx.cf.code.LocalVariableList$Item itemToLocal(com.android.dx.cf.code.LocalVariableList$Item) -> B
    com.android.dx.cf.code.LocalVariableList mergeDescriptorsAndSignatures(com.android.dx.cf.code.LocalVariableList,com.android.dx.cf.code.LocalVariableList) -> C
    com.android.dx.cf.code.LocalVariableList$Item pcAndIndexToLocal(int,int) -> D
    void set(int,int,int,com.android.dx.rop.cst.CstString,com.android.dx.rop.cst.CstString,com.android.dx.rop.cst.CstString,int) -> E
    void set(int,com.android.dx.cf.code.LocalVariableList$Item) -> F
    com.android.dx.cf.code.LocalVariableList concat(com.android.dx.cf.code.LocalVariableList,com.android.dx.cf.code.LocalVariableList) -> z
com.android.dx.cf.code.LocalVariableList$Item -> d.n$a:
    com.android.dx.rop.cst.CstString name -> c
    int index -> f
    com.android.dx.rop.cst.CstString descriptor -> d
    com.android.dx.rop.cst.CstString signature -> e
    int length -> b
    int startPc -> a
    com.android.dx.rop.cst.CstString access$000(com.android.dx.cf.code.LocalVariableList$Item) -> a
    com.android.dx.rop.code.LocalItem getLocalItem() -> b
    com.android.dx.rop.cst.CstString getSignature() -> c
    com.android.dx.rop.type.Type getType() -> d
    boolean matchesAllButType(com.android.dx.cf.code.LocalVariableList$Item) -> e
    boolean matchesPcAndIndex(int,int) -> f
    com.android.dx.cf.code.LocalVariableList$Item withSignature(com.android.dx.rop.cst.CstString) -> g
com.android.dx.cf.code.LocalsArray -> d.o:
    void annotate(com.android.dex.util.ExceptionWithContext) -> r
    com.android.dx.cf.code.LocalsArray copy() -> s
    com.android.dx.rop.type.TypeBearer get(int) -> t
    com.android.dx.cf.code.OneLocalsArray getPrimary() -> u
    void makeInitialized(com.android.dx.rop.type.Type) -> v
    com.android.dx.cf.code.LocalsArray merge(com.android.dx.cf.code.LocalsArray) -> w
    com.android.dx.cf.code.LocalsArraySet mergeWithSubroutineCaller(com.android.dx.cf.code.LocalsArray,int) -> x
    void set(int,com.android.dx.rop.type.TypeBearer) -> y
    void set(com.android.dx.rop.code.RegisterSpec) -> z
com.android.dx.cf.code.LocalsArraySet -> d.p:
    com.android.dx.cf.code.OneLocalsArray primary -> b
    java.util.ArrayList secondaries -> c
    int getMaxLocals() -> A
    com.android.dx.cf.code.LocalsArray getSecondaryForLabel(int) -> B
    com.android.dx.cf.code.LocalsArraySet merge(com.android.dx.cf.code.LocalsArray) -> C
    com.android.dx.cf.code.LocalsArraySet mergeWithOne(com.android.dx.cf.code.OneLocalsArray) -> D
    com.android.dx.cf.code.LocalsArraySet mergeWithSet(com.android.dx.cf.code.LocalsArraySet) -> E
    com.android.dx.cf.code.LocalsArray subArrayForLabel(int) -> F
    java.lang.String toHuman() -> i
    void setImmutable() -> o
    void annotate(com.android.dex.util.ExceptionWithContext) -> r
    com.android.dx.cf.code.LocalsArray copy() -> s
    com.android.dx.rop.type.TypeBearer get(int) -> t
    com.android.dx.cf.code.OneLocalsArray getPrimary() -> u
    void makeInitialized(com.android.dx.rop.type.Type) -> v
    com.android.dx.cf.code.LocalsArray merge(com.android.dx.cf.code.LocalsArray) -> w
    com.android.dx.cf.code.LocalsArraySet mergeWithSubroutineCaller(com.android.dx.cf.code.LocalsArray,int) -> x
    void set(int,com.android.dx.rop.type.TypeBearer) -> y
    void set(com.android.dx.rop.code.RegisterSpec) -> z
com.android.dx.cf.code.Machine -> d.q:
    void popArgs(com.android.dx.cf.code.Frame,com.android.dx.rop.type.Type) -> a
    void clearArgs() -> b
    void localArg(com.android.dx.cf.code.Frame,int) -> c
    void popArgs(com.android.dx.cf.code.Frame,com.android.dx.rop.type.Prototype) -> d
    void popArgs(com.android.dx.cf.code.Frame,com.android.dx.rop.type.Type,com.android.dx.rop.type.Type) -> e
    void auxInitValues(java.util.ArrayList) -> f
    void localInfo(boolean) -> g
    void auxTargetArg(int) -> h
    void popArgs(com.android.dx.cf.code.Frame,com.android.dx.rop.type.Type,com.android.dx.rop.type.Type,com.android.dx.rop.type.Type) -> i
    void localTarget(int,com.android.dx.rop.type.Type,com.android.dx.rop.code.LocalItem) -> j
    void auxSwitchArg(com.android.dx.cf.code.SwitchList) -> k
    void run(com.android.dx.cf.code.Frame,int,int) -> l
    void auxIntArg(int) -> m
    void auxCstArg(com.android.dx.rop.cst.Constant) -> n
    void auxType(com.android.dx.rop.type.Type) -> o
    void popArgs(com.android.dx.cf.code.Frame,int) -> p
com.android.dx.cf.code.Merger -> d.r:
    boolean isPossiblyAssignableFrom(com.android.dx.rop.type.TypeBearer,com.android.dx.rop.type.TypeBearer) -> a
    com.android.dx.cf.code.OneLocalsArray mergeLocals(com.android.dx.cf.code.OneLocalsArray,com.android.dx.cf.code.OneLocalsArray) -> b
    com.android.dx.cf.code.ExecutionStack mergeStack(com.android.dx.cf.code.ExecutionStack,com.android.dx.cf.code.ExecutionStack) -> c
    com.android.dx.rop.type.TypeBearer mergeType(com.android.dx.rop.type.TypeBearer,com.android.dx.rop.type.TypeBearer) -> d
com.android.dx.cf.code.OneLocalsArray -> d.s:
    com.android.dx.rop.type.TypeBearer[] locals -> b
    com.android.dx.cf.code.OneLocalsArray copy() -> A
    int getMaxLocals() -> B
    com.android.dx.rop.type.TypeBearer getOrNull(int) -> C
    void invalidate(int) -> D
    com.android.dx.cf.code.OneLocalsArray merge(com.android.dx.cf.code.OneLocalsArray) -> E
    com.android.dx.rop.type.TypeBearer throwSimException(int,java.lang.String) -> F
    java.lang.String toHuman() -> i
    void annotate(com.android.dex.util.ExceptionWithContext) -> r
    com.android.dx.cf.code.LocalsArray copy() -> s
    com.android.dx.rop.type.TypeBearer get(int) -> t
    com.android.dx.cf.code.OneLocalsArray getPrimary() -> u
    void makeInitialized(com.android.dx.rop.type.Type) -> v
    com.android.dx.cf.code.LocalsArray merge(com.android.dx.cf.code.LocalsArray) -> w
    com.android.dx.cf.code.LocalsArraySet mergeWithSubroutineCaller(com.android.dx.cf.code.LocalsArray,int) -> x
    void set(int,com.android.dx.rop.type.TypeBearer) -> y
    void set(com.android.dx.rop.code.RegisterSpec) -> z
com.android.dx.cf.code.ReturnAddress -> d.t:
    int subroutineAddress -> a
    int getSubroutineAddress() -> a
    com.android.dx.rop.type.Type getType() -> g
    boolean isConstant() -> h
    java.lang.String toHuman() -> i
    int getBasicFrameType() -> j
    int getBasicType() -> l
    com.android.dx.rop.type.TypeBearer getFrameType() -> m
com.android.dx.cf.code.Ropper -> d.u:
    boolean hasSubroutines -> m
    com.android.dx.cf.code.ConcreteMethod method -> a
    boolean synchNeedsExceptionHandler -> k
    int maxLabel -> d
    com.android.dx.cf.code.Ropper$CatchInfo[] catchInfos -> j
    int maxLocals -> c
    com.android.dx.cf.code.RopperMachine machine -> e
    com.android.dx.cf.code.Ropper$ExceptionSetupLabelAllocator exceptionSetupLabelAllocator -> n
    com.android.dx.cf.code.Frame[] startFrames -> g
    com.android.dx.cf.code.Ropper$Subroutine[] subroutines -> l
    java.util.ArrayList resultSubroutines -> i
    com.android.dx.cf.code.Simulator sim -> f
    java.util.ArrayList result -> h
    com.android.dx.cf.code.ByteBlockList blocks -> b
    int getMinimumUnreservedLabel() -> A
    int getNormalRegCount() -> B
    com.android.dx.rop.code.RopMethod getRopMethod() -> C
    int getSpecialLabel(int) -> D
    com.android.dx.rop.code.RegisterSpec getSynchReg() -> E
    void inlineSubroutines() -> F
    boolean isStatic() -> G
    boolean isSubroutineCaller(com.android.dx.rop.code.BasicBlock) -> H
    boolean isSynchronized() -> I
    com.android.dx.rop.code.BasicBlock labelToBlock(int) -> J
    int labelToResultIndex(int) -> K
    void mergeAndWorkAsNecessary(int,int,com.android.dx.cf.code.Ropper$Subroutine,com.android.dx.cf.code.Frame,int[]) -> L
    void processBlock(com.android.dx.cf.code.ByteBlock,com.android.dx.cf.code.Frame,int[]) -> M
    void removeBlockAndSpecialSuccessors(int) -> N
    void setFirstFrame() -> O
    com.android.dx.cf.code.Ropper$Subroutine subroutineFromRetBlock(int) -> P
    com.android.dx.cf.code.Ropper$ExceptionSetupLabelAllocator access$000(com.android.dx.cf.code.Ropper) -> a
    int access$100(com.android.dx.cf.code.Ropper) -> b
    com.android.dx.rop.code.InsnList access$1100(com.android.dx.cf.code.Ropper,com.android.dx.rop.code.InsnList) -> c
    void access$1200(com.android.dx.cf.code.Ropper,com.android.dx.rop.code.BasicBlock,com.android.dx.util.IntList) -> d
    boolean access$202(com.android.dx.cf.code.Ropper,boolean) -> e
    com.android.dx.rop.code.BasicBlock access$300(com.android.dx.cf.code.Ropper,int) -> f
    void access$400(com.android.dx.cf.code.Ropper,int,int,com.android.dx.cf.code.Ropper$Subroutine,com.android.dx.cf.code.Frame,int[]) -> g
    boolean access$600(com.android.dx.cf.code.Ropper,com.android.dx.rop.code.BasicBlock) -> h
    com.android.dx.cf.code.ConcreteMethod access$700(com.android.dx.cf.code.Ropper) -> i
    boolean access$800(com.android.dx.cf.code.Ropper,com.android.dx.rop.code.BasicBlock,com.android.dx.util.IntList) -> j
    com.android.dx.cf.code.Ropper$Subroutine access$900(com.android.dx.cf.code.Ropper,int) -> k
    void addBlock(com.android.dx.rop.code.BasicBlock,com.android.dx.util.IntList) -> l
    void addExceptionSetupBlocks() -> m
    boolean addOrReplaceBlock(com.android.dx.rop.code.BasicBlock,com.android.dx.util.IntList) -> n
    boolean addOrReplaceBlockNoDelete(com.android.dx.rop.code.BasicBlock,com.android.dx.util.IntList) -> o
    void addReturnBlock() -> p
    void addSetupBlocks() -> q
    void addSynchExceptionHandlerBlock() -> r
    com.android.dx.rop.code.RopMethod convert(com.android.dx.cf.code.ConcreteMethod,com.android.dx.rop.code.TranslationAdvice,com.android.dx.cf.iface.MethodList,com.android.dx.dex.DexOptions) -> s
    void deleteUnreachableBlocks() -> t
    void doit() -> u
    com.android.dx.rop.code.InsnList filterMoveReturnAddressInsns(com.android.dx.rop.code.InsnList) -> v
    void forEachNonSubBlockDepthFirst(int,com.android.dx.rop.code.BasicBlock$Visitor) -> w
    void forEachNonSubBlockDepthFirst0(com.android.dx.rop.code.BasicBlock,com.android.dx.rop.code.BasicBlock$Visitor,java.util.BitSet) -> x
    int getAvailableLabel() -> y
    int getFirstTempStackReg() -> z
com.android.dx.cf.code.Ropper$1 -> d.u$a:
    com.android.dx.cf.code.Ropper this$0 -> b
    com.android.dx.util.IntList val$reachableSubroutineCallerLabels -> a
    void visitBlock(com.android.dx.rop.code.BasicBlock) -> a
com.android.dx.cf.code.Ropper$2 -> d.u$b:
    com.android.dx.cf.code.Ropper this$0 -> b
    com.android.dx.util.IntList val$reachableLabels -> a
    void visitBlock(com.android.dx.rop.code.BasicBlock) -> a
com.android.dx.cf.code.Ropper$CatchInfo -> d.u$c:
    java.util.Map setups -> a
    com.android.dx.cf.code.Ropper this$0 -> b
    com.android.dx.cf.code.Ropper$ExceptionHandlerSetup getSetup(com.android.dx.rop.type.Type) -> a
    java.util.Collection getSetups() -> b
com.android.dx.cf.code.Ropper$ExceptionHandlerSetup -> d.u$d:
    com.android.dx.rop.type.Type caughtType -> a
    int label -> b
    com.android.dx.rop.type.Type getCaughtType() -> a
    int getLabel() -> b
com.android.dx.cf.code.Ropper$ExceptionSetupLabelAllocator -> d.u$e:
    com.android.dx.cf.code.Ropper this$0 -> c
    int maxSetupLabel -> b
    int getNextLabel() -> a
com.android.dx.cf.code.Ropper$LabelAllocator -> d.u$f:
    int nextAvailableLabel -> a
    int getNextLabel() -> a
com.android.dx.cf.code.Ropper$Subroutine -> d.u$g:
    com.android.dx.cf.code.Ropper this$0 -> d
    java.util.BitSet callerBlocks -> a
    java.util.BitSet retBlocks -> b
    int startBlock -> c
    int access$1000(com.android.dx.cf.code.Ropper$Subroutine) -> a
    java.util.BitSet access$1300(com.android.dx.cf.code.Ropper$Subroutine) -> b
    void addCallerBlock(int) -> c
    void addRetBlock(int) -> d
    int getStartBlock() -> e
    com.android.dx.util.IntList getSuccessors() -> f
    void mergeToSuccessors(com.android.dx.cf.code.Frame,int[]) -> g
com.android.dx.cf.code.Ropper$SubroutineInliner -> d.u$h:
    java.util.HashMap origLabelToCopiedLabel -> a
    java.util.ArrayList labelToSubroutines -> f
    int subroutineSuccessor -> d
    com.android.dx.cf.code.Ropper this$0 -> g
    java.util.BitSet workList -> b
    int subroutineStart -> c
    com.android.dx.cf.code.Ropper$LabelAllocator labelAllocator -> e
    void copyBlock(int,int) -> a
    void inlineSubroutineCalledFrom(com.android.dx.rop.code.BasicBlock) -> b
    boolean involvedInSubroutine(int,int) -> c
    int mapOrAllocateLabel(int) -> d
com.android.dx.cf.code.RopperMachine -> d.v:
    com.android.dx.rop.cst.CstMethodRef MULTIANEWARRAY_METHOD -> F
    com.android.dx.cf.code.Ropper ropper -> o
    com.android.dx.rop.code.SourcePosition returnPosition -> D
    boolean catchesUsed -> v
    boolean returns -> w
    com.android.dx.cf.code.ConcreteMethod method -> p
    com.android.dx.rop.cst.CstType ARRAY_REFLECT_TYPE -> E
    com.android.dx.rop.code.TranslationAdvice advice -> r
    com.android.dx.rop.type.TypeList catches -> u
    boolean hasJsr -> z
    int primarySuccessorIndex -> x
    int extraBlockCount -> y
    com.android.dx.cf.code.ReturnAddress returnAddress -> B
    com.android.dx.rop.code.Rop returnOp -> C
    java.util.ArrayList insns -> t
    boolean blockCanThrow -> A
    int maxLocals -> s
    com.android.dx.cf.iface.MethodList methods -> q
    boolean canThrow() -> H
    int getExtraBlockCount() -> I
    java.util.ArrayList getInsns() -> J
    int getPrimarySuccessorIndex() -> K
    com.android.dx.cf.code.ReturnAddress getReturnAddress() -> L
    com.android.dx.rop.code.Rop getReturnOp() -> M
    com.android.dx.rop.code.SourcePosition getReturnPosition() -> N
    com.android.dx.rop.code.RegisterSpecList getSources(int,int) -> O
    boolean hasJsr() -> P
    boolean hasRet() -> Q
    int jopToRopOpcode(int,com.android.dx.rop.cst.Constant) -> R
    com.android.dx.rop.code.Insn makeInvokePolymorphicInsn(com.android.dx.rop.code.Rop,com.android.dx.rop.code.SourcePosition,com.android.dx.rop.code.RegisterSpecList,com.android.dx.rop.type.TypeList,com.android.dx.rop.cst.Constant) -> S
    boolean returns() -> T
    void startBlock(com.android.dx.rop.type.TypeList) -> U
    void updateReturnOp(com.android.dx.rop.code.Rop,com.android.dx.rop.code.SourcePosition) -> V
    boolean wereCatchesUsed() -> W
    void run(com.android.dx.cf.code.Frame,int,int) -> l
com.android.dx.cf.code.SimException -> d.w:
com.android.dx.cf.code.Simulator -> d.x:
    com.android.dx.cf.code.LocalVariableList localVariables -> d
    com.android.dx.cf.code.Machine machine -> a
    com.android.dx.cf.code.Simulator$SimVisitor visitor -> e
    com.android.dx.dex.DexOptions dexOptions -> f
    com.android.dx.cf.code.ConcreteMethod method -> c
    com.android.dx.cf.code.BytecodeArray code -> b
    com.android.dx.cf.code.Machine access$000(com.android.dx.cf.code.Simulator) -> a
    com.android.dx.cf.code.SimException access$100() -> b
    void access$200(com.android.dx.cf.code.Simulator,java.lang.String) -> c
    com.android.dx.rop.type.Type access$300(com.android.dx.rop.type.Type,com.android.dx.rop.type.Type) -> d
    com.android.dx.cf.code.LocalVariableList access$400(com.android.dx.cf.code.Simulator) -> e
    void access$500(com.android.dx.cf.code.Simulator,int,com.android.dx.rop.cst.CstMethodRef) -> f
    void access$600(com.android.dx.cf.code.Simulator,int) -> g
    void access$700(com.android.dx.cf.code.Simulator,int) -> h
    void access$800(com.android.dx.cf.code.Simulator,com.android.dx.rop.cst.Constant) -> i
    void checkConstMethodHandleSupported(com.android.dx.rop.cst.Constant) -> j
    void checkInterfaceMethodDeclaration(com.android.dx.cf.code.ConcreteMethod) -> k
    void checkInvokeDynamicSupported(int) -> l
    void checkInvokeInterfaceSupported(int,com.android.dx.rop.cst.CstMethodRef) -> m
    void checkInvokeSignaturePolymorphic(int) -> n
    void fail(java.lang.String) -> o
    com.android.dx.cf.code.SimException illegalTos() -> p
    com.android.dx.rop.type.Type requiredArrayTypeFor(com.android.dx.rop.type.Type,com.android.dx.rop.type.Type) -> q
    void simulate(com.android.dx.cf.code.ByteBlock,com.android.dx.cf.code.Frame) -> r
    void warn(java.lang.String) -> s
com.android.dx.cf.code.Simulator$SimVisitor -> d.x$a:
    com.android.dx.cf.code.Simulator this$0 -> d
    com.android.dx.cf.code.Machine machine -> a
    com.android.dx.cf.code.Frame frame -> b
    int previousOffset -> c
    void visitBranch(int,int,int,int) -> a
    void setPreviousOffset(int) -> b
    void visitLocal(int,int,int,int,com.android.dx.rop.type.Type,int) -> c
    void visitSwitch(int,int,int,com.android.dx.cf.code.SwitchList,int) -> d
    void visitNoArgs(int,int,int,com.android.dx.rop.type.Type) -> e
    void visitInvalid(int,int,int) -> f
    void visitNewarray(int,int,com.android.dx.rop.cst.CstType,java.util.ArrayList) -> g
    int getPreviousOffset() -> h
    void visitConstant(int,int,int,com.android.dx.rop.cst.Constant,int) -> i
    void checkReturnType(com.android.dx.rop.type.Type) -> j
    void setFrame(com.android.dx.cf.code.Frame) -> k
com.android.dx.cf.code.SwitchList -> d.y:
    com.android.dx.util.IntList targets -> c
    int size -> d
    com.android.dx.util.IntList values -> b
    void setImmutable() -> o
    void add(int,int) -> r
    int getDefaultTarget() -> s
    int getTarget(int) -> t
    com.android.dx.util.IntList getTargets() -> u
    int getValue(int) -> v
    com.android.dx.util.IntList getValues() -> w
    void removeSuperfluousDefaults() -> x
    void setDefaultTarget(int) -> y
com.android.dx.cf.code.ValueAwareMachine -> d.z:
    void run(com.android.dx.cf.code.Frame,int,int) -> l
com.android.dx.cf.cst.ConstantPoolParser -> e.a:
    com.android.dx.cf.iface.ParseObserver observer -> e
    int[] offsets -> c
    int endOffset -> d
    com.android.dx.rop.cst.StdConstantPool pool -> b
    com.android.dx.util.ByteArray bytes -> a
    void determineOffsets() -> a
    int getEndOffset() -> b
    int getMethodHandleTypeForKind(int) -> c
    com.android.dx.rop.cst.StdConstantPool getPool() -> d
    void parse() -> e
    com.android.dx.rop.cst.Constant parse0(int,java.util.BitSet) -> f
    void parseIfNecessary() -> g
    com.android.dx.rop.cst.CstString parseUtf8(int) -> h
    void setObserver(com.android.dx.cf.iface.ParseObserver) -> i
com.android.dx.cf.direct.AnnotationParser -> f.a:
    com.android.dx.util.ByteArray$MyDataInputStream input -> e
    int parseCursor -> f
    com.android.dx.cf.direct.DirectClassFile cf -> a
    com.android.dx.util.ByteArray bytes -> c
    com.android.dx.rop.cst.ConstantPool pool -> b
    com.android.dx.cf.iface.ParseObserver observer -> d
    void changeIndent(int) -> a
    com.android.dx.rop.annotation.Annotation parseAnnotation(com.android.dx.rop.annotation.AnnotationVisibility) -> b
    com.android.dx.rop.annotation.Annotations parseAnnotationAttribute(com.android.dx.rop.annotation.AnnotationVisibility) -> c
    com.android.dx.rop.annotation.Annotations parseAnnotations(com.android.dx.rop.annotation.AnnotationVisibility) -> d
    com.android.dx.rop.annotation.AnnotationsList parseAnnotationsList(com.android.dx.rop.annotation.AnnotationVisibility) -> e
    com.android.dx.rop.cst.Constant parseConstant() -> f
    com.android.dx.rop.annotation.NameValuePair parseElement() -> g
    com.android.dx.rop.annotation.AnnotationsList parseParameterAttribute(com.android.dx.rop.annotation.AnnotationVisibility) -> h
    com.android.dx.rop.cst.Constant parseValue() -> i
    com.android.dx.rop.cst.Constant parseValueAttribute() -> j
    void parsed(int,java.lang.String) -> k
    void requireLength(int) -> l
com.android.dx.cf.direct.AttributeFactory -> f.b:
    com.android.dx.cf.iface.Attribute parse(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> a
    com.android.dx.cf.iface.Attribute parse0(com.android.dx.cf.direct.DirectClassFile,int,java.lang.String,int,int,com.android.dx.cf.iface.ParseObserver) -> b
com.android.dx.cf.direct.AttributeListParser -> f.c:
    com.android.dx.cf.iface.ParseObserver observer -> g
    com.android.dx.cf.direct.AttributeFactory attributeFactory -> d
    int endOffset -> f
    com.android.dx.cf.iface.StdAttributeList list -> e
    com.android.dx.cf.direct.DirectClassFile cf -> a
    int context -> b
    int offset -> c
    int getEndOffset() -> a
    com.android.dx.cf.iface.StdAttributeList getList() -> b
    void parse() -> c
    void parseIfNecessary() -> d
    void setObserver(com.android.dx.cf.iface.ParseObserver) -> e
com.android.dx.cf.direct.CodeObserver -> f.d:
    com.android.dx.cf.iface.ParseObserver observer -> b
    com.android.dx.util.ByteArray bytes -> a
    void visitBranch(int,int,int,int) -> a
    void setPreviousOffset(int) -> b
    void visitLocal(int,int,int,int,com.android.dx.rop.type.Type,int) -> c
    void visitSwitch(int,int,int,com.android.dx.cf.code.SwitchList,int) -> d
    void visitNoArgs(int,int,int,com.android.dx.rop.type.Type) -> e
    void visitInvalid(int,int,int) -> f
    void visitNewarray(int,int,com.android.dx.rop.cst.CstType,java.util.ArrayList) -> g
    int getPreviousOffset() -> h
    void visitConstant(int,int,int,com.android.dx.rop.cst.Constant,int) -> i
    java.lang.String header(int) -> j
    void visitLiteralDouble(int,int,int,long) -> k
    void visitLiteralFloat(int,int,int,int) -> l
    void visitLiteralInt(int,int,int,int) -> m
    void visitLiteralLong(int,int,int,long) -> n
com.android.dx.cf.direct.DirectClassFile -> f.e:
    com.android.dx.rop.type.TypeList interfaces -> h
    com.android.dx.cf.iface.ParseObserver observer -> m
    int accessFlags -> e
    com.android.dx.cf.iface.FieldList fields -> i
    com.android.dx.rop.cst.CstType superClass -> g
    com.android.dx.rop.cst.CstType thisClass -> f
    com.android.dx.cf.iface.MethodList methods -> j
    java.lang.String filePath -> a
    com.android.dx.util.ByteArray bytes -> b
    boolean strictParse -> c
    com.android.dx.rop.cst.StdConstantPool pool -> d
    com.android.dx.cf.iface.StdAttributeList attributes -> k
    com.android.dx.cf.direct.AttributeFactory attributeFactory -> l
    int getAccessFlags() -> a
    com.android.dx.rop.cst.CstString getSourceFile() -> b
    com.android.dx.cf.iface.AttributeList getAttributes() -> c
    com.android.dx.cf.code.BootstrapMethodsList getBootstrapMethods() -> d
    com.android.dx.util.ByteArray getBytes() -> e
    com.android.dx.rop.cst.ConstantPool getConstantPool() -> f
    com.android.dx.cf.iface.FieldList getFields() -> g
    java.lang.String getFilePath() -> h
    com.android.dx.rop.type.TypeList getInterfaces() -> i
    int getMagic() -> j
    int getMagic0() -> k
    int getMajorVersion0() -> l
    com.android.dx.cf.iface.MethodList getMethods() -> m
    int getMinorVersion0() -> n
    com.android.dx.rop.cst.CstType getSuperclass() -> o
    com.android.dx.rop.cst.CstType getThisClass() -> p
    boolean isGoodMagic(int) -> q
    boolean isGoodVersion(int,int) -> r
    com.android.dx.rop.type.TypeList makeTypeList(int,int) -> s
    void parse() -> t
    void parse0() -> u
    void parseToEndIfNecessary() -> v
    void parseToInterfacesIfNecessary() -> w
    void setAttributeFactory(com.android.dx.cf.direct.AttributeFactory) -> x
    java.lang.String stringOrNone(java.lang.Object) -> y
com.android.dx.cf.direct.DirectClassFile$DcfTypeList -> f.e$a:
    int size -> b
    com.android.dx.rop.cst.StdConstantPool pool -> c
    com.android.dx.util.ByteArray bytes -> a
    boolean isMutable() -> a
    com.android.dx.rop.type.TypeList withAddedType(com.android.dx.rop.type.Type) -> e
com.android.dx.cf.direct.FieldListParser -> f.f:
    com.android.dx.cf.iface.StdFieldList fields -> g
    int getAttributeContext() -> a
    java.lang.String humanAccessFlags(int) -> e
    java.lang.String humanName() -> f
    com.android.dx.cf.iface.Member set(int,int,com.android.dx.rop.cst.CstNat,com.android.dx.cf.iface.AttributeList) -> i
    com.android.dx.cf.iface.StdFieldList getList() -> k
com.android.dx.cf.direct.MemberListParser -> f.g:
    com.android.dx.cf.iface.ParseObserver observer -> f
    com.android.dx.cf.direct.AttributeFactory attributeFactory -> d
    int endOffset -> e
    com.android.dx.cf.direct.DirectClassFile cf -> a
    int offset -> c
    com.android.dx.rop.cst.CstType definer -> b
    int getAttributeContext() -> a
    int getCount() -> b
    com.android.dx.rop.cst.CstType getDefiner() -> c
    int getEndOffset() -> d
    java.lang.String humanAccessFlags(int) -> e
    java.lang.String humanName() -> f
    void parse() -> g
    void parseIfNecessary() -> h
    com.android.dx.cf.iface.Member set(int,int,com.android.dx.rop.cst.CstNat,com.android.dx.cf.iface.AttributeList) -> i
    void setObserver(com.android.dx.cf.iface.ParseObserver) -> j
com.android.dx.cf.direct.MethodListParser -> f.h:
    com.android.dx.cf.iface.StdMethodList methods -> g
    int getAttributeContext() -> a
    java.lang.String humanAccessFlags(int) -> e
    java.lang.String humanName() -> f
    com.android.dx.cf.iface.Member set(int,int,com.android.dx.rop.cst.CstNat,com.android.dx.cf.iface.AttributeList) -> i
    com.android.dx.cf.iface.StdMethodList getList() -> k
com.android.dx.cf.direct.StdAttributeFactory -> f.i:
    com.android.dx.cf.direct.StdAttributeFactory THE_ONE -> a
    com.android.dx.cf.iface.Attribute parse0(com.android.dx.cf.direct.DirectClassFile,int,java.lang.String,int,int,com.android.dx.cf.iface.ParseObserver) -> b
    com.android.dx.cf.iface.Attribute annotationDefault(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> c
    com.android.dx.cf.iface.Attribute bootstrapMethods(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> d
    com.android.dx.cf.iface.Attribute code(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> e
    com.android.dx.cf.iface.Attribute constantValue(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> f
    com.android.dx.cf.iface.Attribute deprecated(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> g
    com.android.dx.cf.iface.Attribute enclosingMethod(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> h
    com.android.dx.cf.iface.Attribute exceptions(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> i
    com.android.dx.cf.iface.Attribute innerClasses(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> j
    com.android.dx.cf.iface.Attribute lineNumberTable(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> k
    com.android.dx.cf.iface.Attribute localVariableTable(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> l
    com.android.dx.cf.iface.Attribute localVariableTypeTable(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> m
    com.android.dx.cf.code.BootstrapMethodsList parseBootstrapMethods(com.android.dx.util.ByteArray,com.android.dx.rop.cst.ConstantPool,com.android.dx.rop.cst.CstType,int,int,int,com.android.dx.cf.iface.ParseObserver) -> n
    com.android.dx.cf.code.LocalVariableList parseLocalVariables(com.android.dx.util.ByteArray,com.android.dx.rop.cst.ConstantPool,com.android.dx.cf.iface.ParseObserver,int,boolean) -> o
    com.android.dx.cf.iface.Attribute runtimeInvisibleAnnotations(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> p
    com.android.dx.cf.iface.Attribute runtimeInvisibleParameterAnnotations(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> q
    com.android.dx.cf.iface.Attribute runtimeVisibleAnnotations(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> r
    com.android.dx.cf.iface.Attribute runtimeVisibleParameterAnnotations(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> s
    com.android.dx.cf.iface.Attribute signature(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> t
    com.android.dx.cf.iface.Attribute sourceDebugExtension(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> u
    com.android.dx.cf.iface.Attribute sourceFile(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> v
    com.android.dx.cf.iface.Attribute synthetic(com.android.dx.cf.direct.DirectClassFile,int,int,com.android.dx.cf.iface.ParseObserver) -> w
    com.android.dx.cf.iface.Attribute throwBadLength(int) -> x
    com.android.dx.cf.iface.Attribute throwSeverelyTruncated() -> y
    com.android.dx.cf.iface.Attribute throwTruncated() -> z
com.android.dx.cf.iface.Attribute -> g.a:
    int byteLength() -> b
com.android.dx.cf.iface.AttributeList -> g.b:
    boolean isMutable() -> a
    int byteLength() -> b
    com.android.dx.cf.iface.Attribute findFirst(java.lang.String) -> d
    com.android.dx.cf.iface.Attribute findNext(com.android.dx.cf.iface.Attribute) -> f
com.android.dx.cf.iface.ClassFile -> g.c:
    int getAccessFlags() -> a
    com.android.dx.rop.cst.CstString getSourceFile() -> b
com.android.dx.cf.iface.Field -> g.d:
    com.android.dx.rop.cst.TypedConstant getConstantValue() -> e
com.android.dx.cf.iface.FieldList -> g.e:
com.android.dx.cf.iface.Member -> g.f:
    int getAccessFlags() -> a
    com.android.dx.rop.cst.CstNat getNat() -> c
    com.android.dx.rop.cst.CstType getDefiningClass() -> d
    com.android.dx.rop.cst.CstString getDescriptor() -> f
com.android.dx.cf.iface.Method -> g.g:
    com.android.dx.rop.type.Prototype getEffectiveDescriptor() -> b
com.android.dx.cf.iface.MethodList -> g.h:
com.android.dx.cf.iface.ParseException -> g.i:
com.android.dx.cf.iface.ParseObserver -> g.j:
    void changeIndent(int) -> a
    void parsed(com.android.dx.util.ByteArray,int,int,java.lang.String) -> b
    void endParsingMember(com.android.dx.util.ByteArray,int,java.lang.String,java.lang.String,com.android.dx.cf.iface.Member) -> c
    void startParsingMember(com.android.dx.util.ByteArray,int,java.lang.String,java.lang.String) -> d
com.android.dx.cf.iface.StdAttributeList -> g.k:
    void set(int,com.android.dx.cf.iface.Attribute) -> A
    int byteLength() -> b
    com.android.dx.cf.iface.Attribute findFirst(java.lang.String) -> d
    com.android.dx.cf.iface.Attribute findNext(com.android.dx.cf.iface.Attribute) -> f
    com.android.dx.cf.iface.Attribute get(int) -> z
com.android.dx.cf.iface.StdField -> g.l:
    com.android.dx.rop.cst.TypedConstant getConstantValue() -> e
com.android.dx.cf.iface.StdFieldList -> g.m:
    void set(int,com.android.dx.cf.iface.Field) -> z
com.android.dx.cf.iface.StdMember -> g.n:
    com.android.dx.rop.cst.CstNat nat -> c
    com.android.dx.cf.iface.AttributeList attributes -> d
    com.android.dx.rop.cst.CstType definingClass -> a
    int accessFlags -> b
    int getAccessFlags() -> a
    com.android.dx.rop.cst.CstNat getNat() -> c
    com.android.dx.rop.cst.CstType getDefiningClass() -> d
    com.android.dx.rop.cst.CstString getDescriptor() -> f
com.android.dx.cf.iface.StdMethod -> g.o:
    com.android.dx.rop.type.Prototype effectiveDescriptor -> e
    com.android.dx.rop.type.Prototype getEffectiveDescriptor() -> b
com.android.dx.cf.iface.StdMethodList -> g.p:
    void set(int,com.android.dx.cf.iface.Method) -> z
com.android.dx.command.dexer.DxContext -> h.a:
    com.android.dx.dex.cf.OptimizerOptions optimizerOptions -> b
    java.io.PrintStream err -> d
    com.android.dx.dex.cf.CodeStatistics codeStatistics -> a
    java.io.PrintStream noop -> e
    java.io.PrintStream out -> c
com.android.dx.command.dexer.DxContext$1 -> h.a$a:
    com.android.dx.command.dexer.DxContext this$0 -> a
com.android.dx.dex.DexOptions -> i.a:
    boolean ALIGN_64BIT_REGS_IN_OUTPUT_FINISHER -> a
    int minSdkVersion -> b
    java.io.PrintStream err -> e
    boolean forceJumbo -> c
    boolean allowAllInterfaceMethodInvokes -> d
    boolean apiIsSupported(int) -> a
    java.lang.String getMagic() -> b
com.android.dx.dex.cf.AttributeTranslator -> j.a:
    com.android.dx.rop.annotation.Annotations getAnnotations(com.android.dx.cf.iface.AttributeList) -> a
    com.android.dx.rop.annotation.Annotations getAnnotations0(com.android.dx.cf.iface.AttributeList) -> b
    com.android.dx.rop.annotation.Annotations getClassAnnotations(com.android.dx.cf.direct.DirectClassFile,com.android.dx.dex.cf.CfOptions) -> c
    com.android.dx.rop.type.TypeList getExceptions(com.android.dx.cf.iface.Method) -> d
    com.android.dx.rop.annotation.Annotations getMethodAnnotations(com.android.dx.cf.iface.Method) -> e
    com.android.dx.rop.annotation.AnnotationsList getParameterAnnotations(com.android.dx.cf.iface.Method) -> f
    com.android.dx.rop.annotation.Annotation getSignature(com.android.dx.cf.iface.AttributeList) -> g
    com.android.dx.rop.annotation.Annotation getSourceDebugExtension(com.android.dx.cf.iface.AttributeList) -> h
    com.android.dx.rop.annotation.Annotation translateAnnotationDefaults(com.android.dx.cf.direct.DirectClassFile) -> i
    com.android.dx.rop.annotation.Annotation translateEnclosingMethod(com.android.dx.cf.iface.AttributeList) -> j
    com.android.dx.rop.annotation.Annotations translateInnerClasses(com.android.dx.rop.cst.CstType,com.android.dx.cf.iface.AttributeList,boolean) -> k
com.android.dx.dex.cf.CfOptions -> j.b:
    java.lang.String dontOptimizeListFile -> f
    java.io.PrintStream warn -> h
    boolean statistics -> g
    boolean localInfo -> b
    boolean strictNameCheck -> c
    java.lang.String optimizeListFile -> e
    int positionInfo -> a
    boolean optimize -> d
com.android.dx.dex.cf.CfTranslator -> j.c:
    com.android.dx.rop.cst.TypedConstant coerceConstant(com.android.dx.rop.cst.TypedConstant,com.android.dx.rop.type.Type) -> a
    void processFields(com.android.dx.cf.direct.DirectClassFile,com.android.dx.dex.file.ClassDefItem,com.android.dx.dex.file.DexFile) -> b
    void processMethods(com.android.dx.command.dexer.DxContext,com.android.dx.cf.direct.DirectClassFile,com.android.dx.dex.cf.CfOptions,com.android.dx.dex.DexOptions,com.android.dx.dex.file.ClassDefItem,com.android.dx.dex.file.DexFile) -> c
    com.android.dx.dex.file.ClassDefItem translate(com.android.dx.command.dexer.DxContext,com.android.dx.cf.direct.DirectClassFile,byte[],com.android.dx.dex.cf.CfOptions,com.android.dx.dex.DexOptions,com.android.dx.dex.file.DexFile) -> d
    com.android.dx.dex.file.ClassDefItem translate0(com.android.dx.command.dexer.DxContext,com.android.dx.cf.direct.DirectClassFile,byte[],com.android.dx.dex.cf.CfOptions,com.android.dx.dex.DexOptions,com.android.dx.dex.file.DexFile) -> e
    void updateDexStatistics(com.android.dx.command.dexer.DxContext,com.android.dx.dex.cf.CfOptions,com.android.dx.dex.DexOptions,com.android.dx.rop.code.RopMethod,com.android.dx.rop.code.RopMethod,com.android.dx.rop.code.LocalVariableInfo,int,int) -> f
com.android.dx.dex.cf.CfTranslator$1 -> j.c$a:
    int getIndex(com.android.dx.rop.cst.Constant) -> a
com.android.dx.dex.cf.CodeStatistics -> j.d:
    int dexRunningTotalInsns -> f
    int runningOriginalBytes -> g
    int dexRunningDeltaRegisters -> d
    int dexRunningDeltaInsns -> e
    int runningDeltaInsns -> b
    int runningTotalInsns -> c
    int runningDeltaRegisters -> a
    void updateDexStatistics(com.android.dx.dex.code.DalvCode,com.android.dx.dex.code.DalvCode) -> a
    void updateOriginalByteCount(int) -> b
    void updateRopStatistics(com.android.dx.rop.code.RopMethod,com.android.dx.rop.code.RopMethod) -> c
com.android.dx.dex.cf.OptimizerOptions -> j.e:
    java.util.HashSet dontOptimizeList -> b
    java.util.HashSet optimizeList -> a
    boolean optimizeListsLoaded -> c
    void loadOptimizeLists(java.lang.String,java.lang.String) -> a
    java.util.HashSet loadStringsFromFile(java.lang.String) -> b
    boolean shouldOptimize(java.lang.String) -> c
com.android.dx.dex.code.ArrayData -> k.a:
    com.android.dx.dex.code.CodeAddress user -> e
    com.android.dx.rop.cst.Constant arrayType -> g
    int elemWidth -> h
    int initLength -> i
    java.util.ArrayList values -> f
    java.lang.String argString() -> a
    int codeSize() -> b
    java.lang.String listingString0(boolean) -> s
    com.android.dx.dex.code.DalvInsn withRegisters(com.android.dx.rop.code.RegisterSpecList) -> y
    void writeTo(com.android.dx.util.AnnotatedOutput) -> z
com.android.dx.dex.code.BlockAddresses -> k.b:
    com.android.dx.dex.code.CodeAddress[] ends -> c
    com.android.dx.dex.code.CodeAddress[] lasts -> b
    com.android.dx.dex.code.CodeAddress[] starts -> a
    com.android.dx.dex.code.CodeAddress getEnd(com.android.dx.rop.code.BasicBlock) -> a
    com.android.dx.dex.code.CodeAddress getLast(com.android.dx.rop.code.BasicBlock) -> b
    com.android.dx.dex.code.CodeAddress getStart(int) -> c
    com.android.dx.dex.code.CodeAddress getStart(com.android.dx.rop.code.BasicBlock) -> d
    void setupArrays(com.android.dx.rop.code.RopMethod) -> e
com.android.dx.dex.code.CatchBuilder -> k.c:
    java.util.HashSet getCatchTypes() -> a
    boolean hasAnyCatches() -> b
com.android.dx.dex.code.CatchHandlerList -> k.d:
    com.android.dx.dex.code.CatchHandlerList EMPTY -> c
    int compareTo(com.android.dx.dex.code.CatchHandlerList) -> A
    com.android.dx.dex.code.CatchHandlerList$Entry get(int) -> B
    void set(int,com.android.dx.rop.cst.CstType,int) -> C
    java.lang.String toHuman(java.lang.String,java.lang.String) -> D
    java.lang.String toHuman() -> i
    boolean catchesAll() -> z
com.android.dx.dex.code.CatchHandlerList$Entry -> k.d$a:
    com.android.dx.rop.cst.CstType exceptionType -> a
    int handler -> b
    int compareTo(com.android.dx.dex.code.CatchHandlerList$Entry) -> a
    com.android.dx.rop.cst.CstType getExceptionType() -> b
    int getHandler() -> c
com.android.dx.dex.code.CatchTable -> k.e:
    com.android.dx.dex.code.CatchTable EMPTY -> c
    com.android.dx.dex.code.CatchTable$Entry get(int) -> A
    void set(int,com.android.dx.dex.code.CatchTable$Entry) -> B
    int compareTo(com.android.dx.dex.code.CatchTable) -> z
com.android.dx.dex.code.CatchTable$Entry -> k.e$a:
    com.android.dx.dex.code.CatchHandlerList handlers -> c
    int end -> b
    int start -> a
    int compareTo(com.android.dx.dex.code.CatchTable$Entry) -> a
    int getEnd() -> b
    com.android.dx.dex.code.CatchHandlerList getHandlers() -> c
    int getStart() -> d
com.android.dx.dex.code.CodeAddress -> k.f:
    boolean bindsClosely -> e
    boolean getBindsClosely() -> A
    java.lang.String argString() -> a
    java.lang.String listingString0(boolean) -> s
    com.android.dx.dex.code.DalvInsn withRegisters(com.android.dx.rop.code.RegisterSpecList) -> y
com.android.dx.dex.code.CstInsn -> k.g:
    com.android.dx.rop.cst.Constant constant -> e
    int index -> f
    int classIndex -> g
    com.android.dx.rop.cst.Constant getConstant() -> A
    int getIndex() -> B
    boolean hasIndex() -> C
    void setClassIndex(int) -> D
    void setIndex(int) -> E
    java.lang.String argString() -> a
    java.lang.String cstComment() -> c
    java.lang.String cstString() -> d
    com.android.dx.dex.code.DalvInsn withOpcode(com.android.dx.dex.code.Dop) -> w
    com.android.dx.dex.code.DalvInsn withRegisters(com.android.dx.rop.code.RegisterSpecList) -> y
com.android.dx.dex.code.DalvCode -> k.h:
    com.android.dx.dex.code.CatchTable catches -> d
    com.android.dx.dex.code.OutputFinisher unprocessedInsns -> b
    com.android.dx.dex.code.CatchBuilder unprocessedCatches -> c
    com.android.dx.dex.code.PositionList positions -> e
    int positionInfo -> a
    com.android.dx.dex.code.LocalList locals -> f
    com.android.dx.dex.code.DalvInsnList insns -> g
    void assignIndices(com.android.dx.dex.code.DalvCode$AssignIndicesCallback) -> a
    void finishProcessingIfNecessary() -> b
    java.util.HashSet getCatchTypes() -> c
    com.android.dx.dex.code.CatchTable getCatches() -> d
    java.util.HashSet getInsnConstants() -> e
    com.android.dx.dex.code.DalvInsnList getInsns() -> f
    com.android.dx.dex.code.LocalList getLocals() -> g
    com.android.dx.dex.code.PositionList getPositions() -> h
    boolean hasAnyCatches() -> i
    boolean hasLocals() -> j
    boolean hasPositions() -> k
com.android.dx.dex.code.DalvCode$AssignIndicesCallback -> k.h$a:
    int getIndex(com.android.dx.rop.cst.Constant) -> a
com.android.dx.dex.code.DalvInsn -> k.i:
    com.android.dx.dex.code.Dop opcode -> b
    com.android.dx.rop.code.SourcePosition position -> c
    com.android.dx.rop.code.RegisterSpecList registers -> d
    int address -> a
    java.lang.String argString() -> a
    int codeSize() -> b
    java.lang.String cstComment() -> c
    java.lang.String cstString() -> d
    com.android.dx.dex.code.DalvInsn expandedPrefix(java.util.BitSet) -> e
    com.android.dx.dex.code.DalvInsn expandedSuffix(java.util.BitSet) -> f
    com.android.dx.dex.code.DalvInsn expandedVersion(java.util.BitSet) -> g
    int getAddress() -> h
    com.android.dx.dex.code.DalvInsn getLowRegVersion() -> i
    int getMinimumRegisterRequirement(java.util.BitSet) -> j
    int getNextAddress() -> k
    com.android.dx.dex.code.Dop getOpcode() -> l
    com.android.dx.rop.code.SourcePosition getPosition() -> m
    com.android.dx.rop.code.RegisterSpecList getRegisters() -> n
    boolean hasAddress() -> o
    boolean hasResult() -> p
    java.lang.String identifierString() -> q
    java.lang.String listingString(java.lang.String,int,boolean) -> r
    java.lang.String listingString0(boolean) -> s
    com.android.dx.dex.code.SimpleInsn makeMove(com.android.dx.rop.code.SourcePosition,com.android.dx.rop.code.RegisterSpec,com.android.dx.rop.code.RegisterSpec) -> t
    void setAddress(int) -> u
    com.android.dx.dex.code.DalvInsn withMapper(com.android.dx.ssa.RegisterMapper) -> v
    com.android.dx.dex.code.DalvInsn withOpcode(com.android.dx.dex.code.Dop) -> w
    com.android.dx.dex.code.DalvInsn withRegisterOffset(int) -> x
    com.android.dx.dex.code.DalvInsn withRegisters(com.android.dx.rop.code.RegisterSpecList) -> y
    void writeTo(com.android.dx.util.AnnotatedOutput) -> z
com.android.dx.dex.code.DalvInsnList -> k.j:
    int regCount -> c
    com.android.dx.dex.code.DalvInsn get(int) -> A
    int getOutsSize() -> B
    int getRegistersSize() -> C
    com.android.dx.dex.code.DalvInsnList makeImmutable(java.util.ArrayList,int) -> D
    void set(int,com.android.dx.dex.code.DalvInsn) -> E
    void writeTo(com.android.dx.util.AnnotatedOutput) -> F
    int codeSize() -> z
com.android.dx.dex.code.Dop -> k.k:
    com.android.dx.dex.code.InsnFormat format -> d
    boolean hasResult -> e
    int family -> b
    int nextOpcode -> c
    int opcode -> a
    int getFamily() -> a
    com.android.dx.dex.code.InsnFormat getFormat() -> b
    java.lang.String getName() -> c
    int getNextOpcode() -> d
    int getOpcode() -> e
    com.android.dx.dex.code.Dop getOppositeTest() -> f
    boolean hasResult() -> g
com.android.dx.dex.code.Dops -> k.l:
    com.android.dx.dex.code.Dop AGET_CHAR -> r0
    com.android.dx.dex.code.Dop USHR_INT -> R1
    com.android.dx.dex.code.Dop AND_INT_2ADDR -> s2
    com.android.dx.dex.code.Dop IF_GEZ -> j0
    com.android.dx.dex.code.Dop MUL_INT -> J1
    com.android.dx.dex.code.Dop MUL_DOUBLE -> k2
    com.android.dx.dex.code.Dop RETURN -> r
    com.android.dx.dex.code.Dop DIV_LONG_2ADDR -> B2
    com.android.dx.dex.code.Dop RSUB_INT_LIT8 -> c3
    com.android.dx.dex.code.Dop IGET -> A0
    com.android.dx.dex.code.Dop SPUT_SHORT -> b1
    com.android.dx.dex.code.Dop APUT_SHORT -> z0
    com.android.dx.dex.code.Dop XOR_LONG -> Z1
    com.android.dx.dex.code.Dop GOTO -> Q
    com.android.dx.dex.code.Dop SPECIAL_FORMAT -> b
    com.android.dx.dex.code.Dop DIV_DOUBLE_2ADDR -> R2
    com.android.dx.dex.code.Dop SGET_OBJECT -> Q0
    com.android.dx.dex.code.Dop NEG_DOUBLE -> r1
    com.android.dx.dex.code.Dop SHR_INT_LIT8 -> k3
    com.android.dx.dex.code.Dop ADD_FLOAT_2ADDR -> J2
    com.android.dx.dex.code.Dop IPUT_WIDE -> I0
    com.android.dx.dex.code.Dop INVOKE_DIRECT_RANGE -> j1
    com.android.dx.dex.code.Dop CONST_WIDE -> A
    com.android.dx.dex.code.Dop GOTO_16 -> R
    com.android.dx.dex.code.Dop RETURN_WIDE -> s
    com.android.dx.dex.code.Dop FLOAT_TO_DOUBLE -> A1
    com.android.dx.dex.code.Dop SHR_LONG -> b2
    com.android.dx.dex.code.Dop IF_EQ -> a0
    com.android.dx.dex.code.Dop OR_INT_LIT16 -> Z2
    com.android.dx.dex.code.Dop SPUT_BOOLEAN -> Y0
    com.android.dx.dex.code.Dop FLOAT_TO_LONG -> z1
    com.android.dx.dex.code.Dop CONST_WIDE_HIGH16 -> B
    com.android.dx.dex.code.Dop REM_INT_2ADDR -> r2
    com.android.dx.dex.code.Dop NOP -> c
    com.android.dx.dex.code.Dop SHR_INT -> Q1
    com.android.dx.dex.code.Dop AGET_BYTE -> q0
    com.android.dx.dex.code.Dop SUB_DOUBLE -> j2
    com.android.dx.dex.code.Dop SUB_INT -> I1
    com.android.dx.dex.code.Dop IF_LTZ -> i0
    com.android.dx.dex.code.Dop MUL_LONG_2ADDR -> A2
    com.android.dx.dex.code.Dop ADD_INT_LIT8 -> b3
    com.android.dx.dex.code.Dop GOTO_32 -> S
    com.android.dx.dex.code.Dop SPUT_CHAR -> a1
    com.android.dx.dex.code.Dop RETURN_OBJECT -> t
    com.android.dx.dex.code.Dop SUB_LONG_2ADDR -> z2
    com.android.dx.dex.code.Dop OR_LONG -> Y1
    com.android.dx.dex.code.Dop APUT_CHAR -> y0
    com.android.dx.dex.code.Dop NEG_FLOAT -> q1
    com.android.dx.dex.code.Dop MUL_DOUBLE_2ADDR -> Q2
    com.android.dx.dex.code.Dop CONST_STRING -> C
    com.android.dx.dex.code.Dop SGET_WIDE -> P0
    com.android.dx.dex.code.Dop CONST_METHOD_TYPE -> r3
    com.android.dx.dex.code.Dop MOVE -> d
    com.android.dx.dex.code.Dop INVOKE_SUPER_RANGE -> i1
    com.android.dx.dex.code.Dop USHR_LONG_2ADDR -> I2
    com.android.dx.dex.code.Dop IPUT -> H0
    com.android.dx.dex.code.Dop SHL_INT_LIT8 -> j3
    com.android.dx.dex.code.Dop SHL_LONG -> a2
    com.android.dx.dex.code.Dop PACKED_SWITCH -> T
    com.android.dx.dex.code.Dop CONST_4 -> u
    com.android.dx.dex.code.Dop FLOAT_TO_INT -> y1
    com.android.dx.dex.code.Dop AND_INT_LIT16 -> Y2
    com.android.dx.dex.code.Dop SPUT_OBJECT -> X0
    com.android.dx.dex.code.Dop APUT -> t0
    com.android.dx.dex.code.Dop SUB_LONG -> T1
    com.android.dx.dex.code.Dop XOR_INT_2ADDR -> u2
    com.android.dx.dex.code.Dop IF_LEZ -> l0
    com.android.dx.dex.code.Dop REM_INT -> L1
    com.android.dx.dex.code.Dop REM_DOUBLE -> m2
    com.android.dx.dex.code.Dop AND_LONG_2ADDR -> D2
    com.android.dx.dex.code.Dop DIV_INT_LIT8 -> e3
    com.android.dx.dex.code.Dop IGET_OBJECT -> C0
    com.android.dx.dex.code.Dop INVOKE_SUPER -> d1
    com.android.dx.dex.code.Dop FILLED_NEW_ARRAY -> M
    com.android.dx.dex.code.Dop MOVE_RESULT_WIDE -> n
    com.android.dx.dex.code.Dop ADD_INT_LIT16 -> T2
    com.android.dx.dex.code.Dop SGET_BYTE -> S0
    com.android.dx.dex.code.Dop INT_TO_FLOAT -> t1
    com.android.dx.dex.code.Dop INVOKE_POLYMORPHIC -> m3
    com.android.dx.dex.code.Dop MUL_FLOAT_2ADDR -> L2
    com.android.dx.dex.code.Dop IPUT_BOOLEAN -> K0
    com.android.dx.dex.code.Dop INVOKE_INTERFACE_RANGE -> l1
    com.android.dx.dex.code.Dop DOUBLE_TO_LONG -> C1
    com.android.dx.dex.code.Dop ADD_FLOAT -> d2
    com.android.dx.dex.code.Dop IF_LT -> c0
    com.android.dx.dex.code.Dop FILLED_NEW_ARRAY_RANGE -> N
    com.android.dx.dex.code.Dop MOVE_RESULT_OBJECT -> o
    com.android.dx.dex.code.Dop OR_INT_2ADDR -> t2
    com.android.dx.dex.code.Dop ADD_LONG -> S1
    com.android.dx.dex.code.Dop AGET_SHORT -> s0
    com.android.dx.dex.code.Dop DIV_DOUBLE -> l2
    com.android.dx.dex.code.Dop DIV_INT -> K1
    com.android.dx.dex.code.Dop IF_GTZ -> k0
    com.android.dx.dex.code.Dop REM_LONG_2ADDR -> C2
    com.android.dx.dex.code.Dop MUL_INT_LIT8 -> d3
    com.android.dx.dex.code.Dop IGET_WIDE -> B0
    com.android.dx.dex.code.Dop INVOKE_VIRTUAL -> c1
    com.android.dx.dex.code.Dop FILL_ARRAY_DATA -> O
    com.android.dx.dex.code.Dop MOVE_EXCEPTION -> p
    com.android.dx.dex.code.Dop INT_TO_LONG -> s1
    com.android.dx.dex.code.Dop REM_DOUBLE_2ADDR -> S2
    com.android.dx.dex.code.Dop SGET_BOOLEAN -> R0
    com.android.dx.dex.code.Dop INVOKE_STATIC_RANGE -> k1
    com.android.dx.dex.code.Dop SUB_FLOAT_2ADDR -> K2
    com.android.dx.dex.code.Dop IPUT_OBJECT -> J0
    com.android.dx.dex.code.Dop USHR_INT_LIT8 -> l3
    com.android.dx.dex.code.Dop DOUBLE_TO_INT -> B1
    com.android.dx.dex.code.Dop USHR_LONG -> c2
    com.android.dx.dex.code.Dop IF_NE -> b0
    com.android.dx.dex.code.Dop SPUT_BYTE -> Z0
    com.android.dx.dex.code.Dop THROW -> P
    com.android.dx.dex.code.Dop RETURN_VOID -> q
    com.android.dx.dex.code.Dop CHECK_CAST -> H
    com.android.dx.dex.code.Dop APUT_OBJECT -> v0
    com.android.dx.dex.code.Dop DIV_LONG -> V1
    com.android.dx.dex.code.Dop MOVE_WIDE_16 -> i
    com.android.dx.dex.code.Dop SHR_INT_2ADDR -> w2
    com.android.dx.dex.code.Dop CONST_WIDE_32 -> z
    com.android.dx.dex.code.Dop AGET_WIDE -> n0
    com.android.dx.dex.code.Dop OR_INT -> N1
    com.android.dx.dex.code.Dop SUB_INT_2ADDR -> o2
    com.android.dx.dex.code.Dop AND_INT_LIT8 -> g3
    com.android.dx.dex.code.Dop XOR_LONG_2ADDR -> F2
    com.android.dx.dex.code.Dop IGET_BYTE -> E0
    com.android.dx.dex.code.Dop CMPG_DOUBLE -> Y
    com.android.dx.dex.code.Dop INVOKE_STATIC -> f1
    com.android.dx.dex.code.Dop MOVE_OBJECT -> j
    com.android.dx.dex.code.Dop MUL_INT_LIT16 -> V2
    com.android.dx.dex.code.Dop SGET_SHORT -> U0
    com.android.dx.dex.code.Dop INSTANCE_OF -> I
    com.android.dx.dex.code.Dop LONG_TO_INT -> v1
    com.android.dx.dex.code.Dop CMP_LONG -> Z
    com.android.dx.dex.code.Dop INVOKE_CUSTOM -> o3
    com.android.dx.dex.code.Dop REM_FLOAT_2ADDR -> N2
    com.android.dx.dex.code.Dop IPUT_CHAR -> M0
    com.android.dx.dex.code.Dop NOT_INT -> n1
    com.android.dx.dex.code.Dop MUL_FLOAT -> f2
    com.android.dx.dex.code.Dop[] DOPS -> a
    com.android.dx.dex.code.Dop INT_TO_BYTE -> E1
    com.android.dx.dex.code.Dop IF_GT -> e0
    com.android.dx.dex.code.Dop ARRAY_LENGTH -> J
    com.android.dx.dex.code.Dop MOVE_OBJECT_FROM16 -> k
    com.android.dx.dex.code.Dop SHL_INT_2ADDR -> v2
    com.android.dx.dex.code.Dop MUL_LONG -> U1
    com.android.dx.dex.code.Dop APUT_WIDE -> u0
    com.android.dx.dex.code.Dop ADD_INT_2ADDR -> n2
    com.android.dx.dex.code.Dop AND_INT -> M1
    com.android.dx.dex.code.Dop AGET -> m0
    com.android.dx.dex.code.Dop OR_LONG_2ADDR -> E2
    com.android.dx.dex.code.Dop IGET_BOOLEAN -> D0
    com.android.dx.dex.code.Dop INVOKE_DIRECT -> e1
    com.android.dx.dex.code.Dop REM_INT_LIT8 -> f3
    com.android.dx.dex.code.Dop NEW_INSTANCE -> K
    com.android.dx.dex.code.Dop MOVE_OBJECT_16 -> l
    com.android.dx.dex.code.Dop INT_TO_DOUBLE -> u1
    com.android.dx.dex.code.Dop RSUB_INT -> U2
    com.android.dx.dex.code.Dop SGET_CHAR -> T0
    com.android.dx.dex.code.Dop NEG_INT -> m1
    com.android.dx.dex.code.Dop DIV_FLOAT_2ADDR -> M2
    com.android.dx.dex.code.Dop IPUT_BYTE -> L0
    com.android.dx.dex.code.Dop INVOKE_POLYMORPHIC_RANGE -> n3
    com.android.dx.dex.code.Dop DOUBLE_TO_FLOAT -> D1
    com.android.dx.dex.code.Dop SUB_FLOAT -> e2
    com.android.dx.dex.code.Dop IF_GE -> d0
    com.android.dx.dex.code.Dop NEW_ARRAY -> L
    com.android.dx.dex.code.Dop MOVE_RESULT -> m
    com.android.dx.dex.code.Dop AGET_BOOLEAN -> p0
    com.android.dx.dex.code.Dop SHL_INT -> P1
    com.android.dx.dex.code.Dop DIV_INT_2ADDR -> q2
    com.android.dx.dex.code.Dop CONST_STRING_JUMBO -> D
    com.android.dx.dex.code.Dop MOVE_FROM16 -> e
    com.android.dx.dex.code.Dop IF_NEZ -> h0
    com.android.dx.dex.code.Dop ADD_INT -> H1
    com.android.dx.dex.code.Dop ADD_DOUBLE -> i2
    com.android.dx.dex.code.Dop SPARSE_SWITCH -> U
    com.android.dx.dex.code.Dop CONST_16 -> v
    com.android.dx.dex.code.Dop XOR_INT_LIT8 -> i3
    com.android.dx.dex.code.Dop SHR_LONG_2ADDR -> H2
    com.android.dx.dex.code.Dop APUT_BYTE -> x0
    com.android.dx.dex.code.Dop AND_LONG -> X1
    com.android.dx.dex.code.Dop ADD_LONG_2ADDR -> y2
    com.android.dx.dex.code.Dop XOR_INT_LIT16 -> a3
    com.android.dx.dex.code.Dop SGET -> O0
    com.android.dx.dex.code.Dop NOT_LONG -> p1
    com.android.dx.dex.code.Dop CONST_CLASS -> E
    com.android.dx.dex.code.Dop MOVE_16 -> f
    com.android.dx.dex.code.Dop REM_INT_LIT16 -> X2
    com.android.dx.dex.code.Dop IGET_SHORT -> G0
    com.android.dx.dex.code.Dop INVOKE_VIRTUAL_RANGE -> h1
    com.android.dx.dex.code.Dop CONST_METHOD_HANDLE -> q3
    com.android.dx.dex.code.Dop SUB_DOUBLE_2ADDR -> P2
    com.android.dx.dex.code.Dop CMPL_FLOAT -> V
    com.android.dx.dex.code.Dop CONST -> w
    com.android.dx.dex.code.Dop REM_FLOAT -> h2
    com.android.dx.dex.code.Dop INT_TO_SHORT -> G1
    com.android.dx.dex.code.Dop SPUT_WIDE -> W0
    com.android.dx.dex.code.Dop LONG_TO_DOUBLE -> x1
    com.android.dx.dex.code.Dop AGET_OBJECT -> o0
    com.android.dx.dex.code.Dop MONITOR_ENTER -> F
    com.android.dx.dex.code.Dop MOVE_WIDE -> g
    com.android.dx.dex.code.Dop USHR_INT_2ADDR -> x2
    com.android.dx.dex.code.Dop REM_LONG -> W1
    com.android.dx.dex.code.Dop IF_EQZ -> g0
    com.android.dx.dex.code.Dop MUL_INT_2ADDR -> p2
    com.android.dx.dex.code.Dop XOR_INT -> O1
    com.android.dx.dex.code.Dop CMPG_FLOAT -> W
    com.android.dx.dex.code.Dop CONST_HIGH16 -> x
    com.android.dx.dex.code.Dop INVOKE_INTERFACE -> g1
    com.android.dx.dex.code.Dop SHL_LONG_2ADDR -> G2
    com.android.dx.dex.code.Dop IGET_CHAR -> F0
    com.android.dx.dex.code.Dop OR_INT_LIT8 -> h3
    com.android.dx.dex.code.Dop APUT_BOOLEAN -> w0
    com.android.dx.dex.code.Dop MONITOR_EXIT -> G
    com.android.dx.dex.code.Dop MOVE_WIDE_FROM16 -> h
    com.android.dx.dex.code.Dop LONG_TO_FLOAT -> w1
    com.android.dx.dex.code.Dop DIV_INT_LIT16 -> W2
    com.android.dx.dex.code.Dop SPUT -> V0
    com.android.dx.dex.code.Dop NEG_LONG -> o1
    com.android.dx.dex.code.Dop ADD_DOUBLE_2ADDR -> O2
    com.android.dx.dex.code.Dop IPUT_SHORT -> N0
    com.android.dx.dex.code.Dop INVOKE_CUSTOM_RANGE -> p3
    com.android.dx.dex.code.Dop CMPL_DOUBLE -> X
    com.android.dx.dex.code.Dop IF_LE -> f0
    com.android.dx.dex.code.Dop INT_TO_CHAR -> F1
    com.android.dx.dex.code.Dop CONST_WIDE_16 -> y
    com.android.dx.dex.code.Dop DIV_FLOAT -> g2
    com.android.dx.dex.code.Dop get(int) -> a
    com.android.dx.dex.code.Dop getNextOrNull(com.android.dx.dex.code.Dop,com.android.dx.dex.DexOptions) -> b
    void set(com.android.dx.dex.code.Dop) -> c
com.android.dx.dex.code.FixedSizeInsn -> k.m:
    int codeSize() -> b
    java.lang.String listingString0(boolean) -> s
    com.android.dx.dex.code.DalvInsn withRegisterOffset(int) -> x
    void writeTo(com.android.dx.util.AnnotatedOutput) -> z
com.android.dx.dex.code.HighRegisterPrefix -> k.n:
    com.android.dx.dex.code.SimpleInsn[] insns -> e
    void calculateInsnsIfNecessary() -> A
    com.android.dx.dex.code.SimpleInsn moveInsnFor(com.android.dx.rop.code.RegisterSpec,int) -> B
    java.lang.String argString() -> a
    int codeSize() -> b
    java.lang.String listingString0(boolean) -> s
    com.android.dx.dex.code.DalvInsn withRegisters(com.android.dx.rop.code.RegisterSpecList) -> y
    void writeTo(com.android.dx.util.AnnotatedOutput) -> z
com.android.dx.dex.code.InsnFormat -> k.o:
    void write(com.android.dx.util.AnnotatedOutput,short,long) -> A
    void write(com.android.dx.util.AnnotatedOutput,short,short) -> B
    void write(com.android.dx.util.AnnotatedOutput,short,short,short) -> C
    void write(com.android.dx.util.AnnotatedOutput,short,short,short,short) -> D
    void write(com.android.dx.util.AnnotatedOutput,short,short,short,short,short) -> E
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    java.lang.String branchComment(com.android.dx.dex.code.DalvInsn) -> a
    boolean branchFits(com.android.dx.dex.code.TargetInsn) -> b
    java.lang.String branchString(com.android.dx.dex.code.DalvInsn) -> c
    int codeSize() -> d
    short codeUnit(int,int) -> e
    short codeUnit(int,int,int,int) -> f
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
    boolean isRegListSequential(com.android.dx.rop.code.RegisterSpecList) -> k
    java.lang.String listingString(com.android.dx.dex.code.DalvInsn,boolean) -> l
    java.lang.String literalBitsComment(com.android.dx.rop.cst.CstLiteralBits,int) -> m
    java.lang.String literalBitsString(com.android.dx.rop.cst.CstLiteralBits) -> n
    int makeByte(int,int) -> o
    short opcodeUnit(com.android.dx.dex.code.DalvInsn,int) -> p
    java.lang.String regListString(com.android.dx.rop.code.RegisterSpecList) -> q
    java.lang.String regRangeString(com.android.dx.rop.code.RegisterSpecList) -> r
    boolean signedFitsInByte(int) -> s
    boolean signedFitsInNibble(int) -> t
    boolean signedFitsInShort(int) -> u
    boolean unsignedFitsInByte(int) -> v
    boolean unsignedFitsInNibble(int) -> w
    boolean unsignedFitsInShort(int) -> x
    void write(com.android.dx.util.AnnotatedOutput,short) -> y
    void write(com.android.dx.util.AnnotatedOutput,short,int) -> z
com.android.dx.dex.code.LocalList -> k.p:
    com.android.dx.dex.code.LocalList EMPTY -> c
    com.android.dx.dex.code.LocalList make(com.android.dx.dex.code.DalvInsnList) -> A
    void set(int,com.android.dx.dex.code.LocalList$Entry) -> B
    com.android.dx.dex.code.LocalList$Entry get(int) -> z
com.android.dx.dex.code.LocalList$Disposition -> k.p$a:
    com.android.dx.dex.code.LocalList$Disposition END_CLOBBERED_BY_PREV -> e
    com.android.dx.dex.code.LocalList$Disposition[] $VALUES -> g
    com.android.dx.dex.code.LocalList$Disposition END_CLOBBERED_BY_NEXT -> f
    com.android.dx.dex.code.LocalList$Disposition END_REPLACED -> c
    com.android.dx.dex.code.LocalList$Disposition END_MOVED -> d
    com.android.dx.dex.code.LocalList$Disposition START -> a
    com.android.dx.dex.code.LocalList$Disposition END_SIMPLY -> b
com.android.dx.dex.code.LocalList$Entry -> k.p$b:
    com.android.dx.rop.cst.CstType type -> d
    com.android.dx.rop.code.RegisterSpec spec -> c
    int address -> a
    com.android.dx.dex.code.LocalList$Disposition disposition -> b
    int compareTo(com.android.dx.dex.code.LocalList$Entry) -> a
    int getAddress() -> b
    com.android.dx.dex.code.LocalList$Disposition getDisposition() -> c
    com.android.dx.rop.cst.CstString getName() -> d
    int getRegister() -> e
    com.android.dx.rop.code.RegisterSpec getRegisterSpec() -> f
    com.android.dx.rop.cst.CstString getSignature() -> g
    com.android.dx.rop.cst.CstType getType() -> h
    boolean isStart() -> i
    boolean matches(com.android.dx.dex.code.LocalList$Entry) -> j
    boolean matches(com.android.dx.rop.code.RegisterSpec) -> k
    com.android.dx.dex.code.LocalList$Entry withDisposition(com.android.dx.dex.code.LocalList$Disposition) -> l
com.android.dx.dex.code.LocalList$MakeState -> k.p$c:
    int[] endIndices -> d
    com.android.dx.rop.code.RegisterSpecSet regs -> c
    int lastAddress -> e
    int nullResultCount -> b
    java.util.ArrayList result -> a
    void aboutToProcess(int,int) -> a
    void add(int,com.android.dx.dex.code.LocalList$Disposition,com.android.dx.rop.code.RegisterSpec) -> b
    void addOrUpdateEnd(int,com.android.dx.dex.code.LocalList$Disposition,com.android.dx.rop.code.RegisterSpec) -> c
    boolean checkForEmptyRange(int,com.android.dx.rop.code.RegisterSpec) -> d
    void endLocal(int,com.android.dx.rop.code.RegisterSpec) -> e
    void endLocal(int,com.android.dx.rop.code.RegisterSpec,com.android.dx.dex.code.LocalList$Disposition) -> f
    com.android.dx.rop.code.RegisterSpec filterSpec(com.android.dx.rop.code.RegisterSpec) -> g
    com.android.dx.dex.code.LocalList finish() -> h
    void snapshot(int,com.android.dx.rop.code.RegisterSpecSet) -> i
    void startLocal(int,com.android.dx.rop.code.RegisterSpec) -> j
com.android.dx.dex.code.LocalSnapshot -> k.q:
    com.android.dx.rop.code.RegisterSpecSet locals -> e
    com.android.dx.rop.code.RegisterSpecSet getLocals() -> A
    java.lang.String argString() -> a
    java.lang.String listingString0(boolean) -> s
    com.android.dx.dex.code.DalvInsn withMapper(com.android.dx.ssa.RegisterMapper) -> v
    com.android.dx.dex.code.DalvInsn withRegisterOffset(int) -> x
    com.android.dx.dex.code.DalvInsn withRegisters(com.android.dx.rop.code.RegisterSpecList) -> y
com.android.dx.dex.code.LocalStart -> k.r:
    com.android.dx.rop.code.RegisterSpec local -> e
    com.android.dx.rop.code.RegisterSpec getLocal() -> A
    java.lang.String localString(com.android.dx.rop.code.RegisterSpec) -> B
    java.lang.String argString() -> a
    java.lang.String listingString0(boolean) -> s
    com.android.dx.dex.code.DalvInsn withMapper(com.android.dx.ssa.RegisterMapper) -> v
    com.android.dx.dex.code.DalvInsn withRegisterOffset(int) -> x
    com.android.dx.dex.code.DalvInsn withRegisters(com.android.dx.rop.code.RegisterSpecList) -> y
com.android.dx.dex.code.MultiCstInsn -> k.s:
    int[] index -> f
    int classIndex -> g
    com.android.dx.rop.cst.Constant[] constants -> e
    com.android.dx.rop.cst.Constant getConstant(int) -> A
    int getIndex(int) -> B
    int getNumberOfConstants() -> C
    boolean hasClassIndex() -> D
    boolean hasIndex(int) -> E
    void setClassIndex(int) -> F
    void setIndex(int,int) -> G
    java.lang.String argString() -> a
    java.lang.String cstComment() -> c
    java.lang.String cstString() -> d
    com.android.dx.dex.code.DalvInsn withOpcode(com.android.dx.dex.code.Dop) -> w
    com.android.dx.dex.code.DalvInsn withRegisters(com.android.dx.rop.code.RegisterSpecList) -> y
com.android.dx.dex.code.OddSpacer -> k.t:
    java.lang.String argString() -> a
    int codeSize() -> b
    java.lang.String listingString0(boolean) -> s
    com.android.dx.dex.code.DalvInsn withRegisters(com.android.dx.rop.code.RegisterSpecList) -> y
    void writeTo(com.android.dx.util.AnnotatedOutput) -> z
com.android.dx.dex.code.OutputCollector -> k.u:
    com.android.dx.dex.code.OutputFinisher finisher -> a
    java.util.ArrayList suffix -> b
    void add(com.android.dx.dex.code.DalvInsn) -> a
    void addSuffix(com.android.dx.dex.code.DalvInsn) -> b
    void appendSuffixToOutput() -> c
    com.android.dx.dex.code.DalvInsn get(int) -> d
    com.android.dx.dex.code.OutputFinisher getFinisher() -> e
    void reverseBranch(int,com.android.dx.dex.code.CodeAddress) -> f
    int size() -> g
com.android.dx.dex.code.OutputFinisher -> k.v:
    com.android.dx.dex.DexOptions dexOptions -> a
    int paramSize -> h
    boolean hasAnyLocalInfo -> e
    int reservedCount -> f
    int reservedParameterCount -> g
    int unreservedRegCount -> b
    java.util.ArrayList insns -> c
    boolean hasAnyPositionInfo -> d
    void reverseBranch(int,com.android.dx.dex.code.CodeAddress) -> A
    void shiftAllRegisters(int) -> B
    void shiftParameters(int) -> C
    int size() -> D
    void updateInfo(com.android.dx.dex.code.DalvInsn) -> E
    void add(com.android.dx.dex.code.DalvInsn) -> a
    void addConstants(java.util.HashSet,com.android.dx.dex.code.DalvInsn) -> b
    void addConstants(java.util.HashSet,com.android.dx.rop.code.RegisterSpec) -> c
    void addReservedParameters(int) -> d
    void addReservedRegisters(int) -> e
    void align64bits(com.android.dx.dex.code.Dop[]) -> f
    void assignAddresses() -> g
    void assignAddressesAndFixBranches() -> h
    void assignIndices(com.android.dx.dex.code.CstInsn,com.android.dx.dex.code.DalvCode$AssignIndicesCallback) -> i
    void assignIndices(com.android.dx.dex.code.DalvCode$AssignIndicesCallback) -> j
    void assignIndices(com.android.dx.dex.code.MultiCstInsn,com.android.dx.dex.code.DalvCode$AssignIndicesCallback) -> k
    int calculateReservedCount(com.android.dx.dex.code.Dop[]) -> l
    com.android.dx.dex.code.Dop findExpandedOpcodeForInsn(com.android.dx.dex.code.DalvInsn) -> m
    com.android.dx.dex.code.Dop findOpcodeForInsn(com.android.dx.dex.code.DalvInsn,com.android.dx.dex.code.Dop) -> n
    com.android.dx.dex.code.DalvInsnList finishProcessingAndGetList() -> o
    boolean fixBranches() -> p
    com.android.dx.dex.code.DalvInsn get(int) -> q
    java.util.HashSet getAllConstants() -> r
    boolean hasAnyLocalInfo() -> s
    boolean hasAnyPositionInfo() -> t
    boolean hasLocalInfo(com.android.dx.dex.code.DalvInsn) -> u
    boolean hasLocalInfo(com.android.dx.rop.code.RegisterSpec) -> v
    com.android.dx.dex.code.Dop[] makeOpcodesArray() -> w
    void massageInstructions(com.android.dx.dex.code.Dop[]) -> x
    java.util.ArrayList performExpansion(com.android.dx.dex.code.Dop[]) -> y
    boolean reserveRegisters(com.android.dx.dex.code.Dop[]) -> z
com.android.dx.dex.code.PositionList -> k.w:
    com.android.dx.dex.code.PositionList EMPTY -> c
    com.android.dx.dex.code.PositionList make(com.android.dx.dex.code.DalvInsnList,int) -> A
    void set(int,com.android.dx.dex.code.PositionList$Entry) -> B
    com.android.dx.dex.code.PositionList$Entry get(int) -> z
com.android.dx.dex.code.PositionList$Entry -> k.w$a:
    com.android.dx.rop.code.SourcePosition position -> b
    int address -> a
    int getAddress() -> a
    com.android.dx.rop.code.SourcePosition getPosition() -> b
com.android.dx.dex.code.RopToDop -> k.x:
    java.util.HashMap MAP -> a
    com.android.dx.dex.code.Dop dopFor(com.android.dx.rop.code.Insn) -> a
com.android.dx.dex.code.RopTranslator -> k.y:
    com.android.dx.dex.code.RopTranslator$TranslationVisitor translationVisitor -> g
    com.android.dx.dex.code.OutputCollector output -> f
    int[] order -> i
    int paramSize -> j
    com.android.dx.dex.DexOptions dexOptions -> a
    int regCount -> h
    boolean paramsAreInOrder -> k
    com.android.dx.rop.code.LocalVariableInfo locals -> d
    com.android.dx.rop.code.RopMethod method -> b
    int positionInfo -> c
    com.android.dx.dex.code.BlockAddresses addresses -> e
    com.android.dx.rop.code.RegisterSpecList access$000(com.android.dx.rop.code.Insn) -> a
    com.android.dx.dex.code.BlockAddresses access$100(com.android.dx.dex.code.RopTranslator) -> b
    boolean access$200(com.android.dx.dex.code.RopTranslator) -> c
    int access$300(com.android.dx.dex.code.RopTranslator) -> d
    int access$400(com.android.dx.dex.code.RopTranslator) -> e
    com.android.dx.rop.code.RopMethod access$500(com.android.dx.dex.code.RopTranslator) -> f
    com.android.dx.rop.code.RegisterSpecList access$600(com.android.dx.rop.code.Insn,com.android.dx.rop.code.RegisterSpec) -> g
    boolean calculateParamsAreInOrder(com.android.dx.rop.code.RopMethod,int) -> h
    com.android.dx.rop.code.RegisterSpecList getRegs(com.android.dx.rop.code.Insn) -> i
    com.android.dx.rop.code.RegisterSpecList getRegs(com.android.dx.rop.code.Insn,com.android.dx.rop.code.RegisterSpec) -> j
    void outputBlock(com.android.dx.rop.code.BasicBlock,int) -> k
    void outputInstructions() -> l
    void pickOrder() -> m
    com.android.dx.dex.code.DalvCode translate(com.android.dx.rop.code.RopMethod,int,com.android.dx.rop.code.LocalVariableInfo,int,com.android.dx.dex.DexOptions) -> n
    com.android.dx.dex.code.DalvCode translateAndGetResult() -> o
com.android.dx.dex.code.RopTranslator$1 -> k.y$a:
    boolean[] val$paramsAreInOrder -> a
    int val$initialRegCount -> b
    int val$paramSize -> c
    void visitPlainCstInsn(com.android.dx.rop.code.PlainCstInsn) -> f
com.android.dx.dex.code.RopTranslator$LocalVariableAwareTranslationVisitor -> k.y$b:
    com.android.dx.dex.code.RopTranslator this$0 -> f
    com.android.dx.rop.code.LocalVariableInfo locals -> e
    void visitThrowingCstInsn(com.android.dx.rop.code.ThrowingCstInsn) -> a
    void visitSwitchInsn(com.android.dx.rop.code.SwitchInsn) -> c
    void visitPlainInsn(com.android.dx.rop.code.PlainInsn) -> d
    void visitPlainCstInsn(com.android.dx.rop.code.PlainCstInsn) -> f
    void visitThrowingInsn(com.android.dx.rop.code.ThrowingInsn) -> g
    void addIntroductionIfNecessary(com.android.dx.rop.code.Insn) -> m
com.android.dx.dex.code.RopTranslator$TranslationVisitor -> k.y$c:
    com.android.dx.dex.code.OutputCollector output -> a
    com.android.dx.dex.code.RopTranslator this$0 -> d
    com.android.dx.dex.code.CodeAddress lastAddress -> c
    com.android.dx.rop.code.BasicBlock block -> b
    void visitThrowingCstInsn(com.android.dx.rop.code.ThrowingCstInsn) -> a
    void visitInvokePolymorphicInsn(com.android.dx.rop.code.InvokePolymorphicInsn) -> b
    void visitSwitchInsn(com.android.dx.rop.code.SwitchInsn) -> c
    void visitPlainInsn(com.android.dx.rop.code.PlainInsn) -> d
    void visitFillArrayDataInsn(com.android.dx.rop.code.FillArrayDataInsn) -> e
    void visitPlainCstInsn(com.android.dx.rop.code.PlainCstInsn) -> f
    void visitThrowingInsn(com.android.dx.rop.code.ThrowingInsn) -> g
    void addOutput(com.android.dx.dex.code.DalvInsn) -> h
    void addOutputSuffix(com.android.dx.dex.code.DalvInsn) -> i
    com.android.dx.rop.code.RegisterSpec getNextMoveResultPseudo() -> j
    com.android.dx.dex.code.DalvInsn getPrevNonSpecialInsn() -> k
    void setBlock(com.android.dx.rop.code.BasicBlock,com.android.dx.dex.code.CodeAddress) -> l
com.android.dx.dex.code.SimpleInsn -> k.z:
    java.lang.String argString() -> a
    com.android.dx.dex.code.DalvInsn withOpcode(com.android.dx.dex.code.Dop) -> w
    com.android.dx.dex.code.DalvInsn withRegisters(com.android.dx.rop.code.RegisterSpecList) -> y
com.android.dx.dex.code.StdCatchBuilder -> k.a0:
    int[] order -> b
    com.android.dx.rop.code.RopMethod method -> a
    com.android.dx.dex.code.BlockAddresses addresses -> c
    java.util.HashSet getCatchTypes() -> a
    boolean hasAnyCatches() -> b
    com.android.dx.dex.code.CatchTable build(com.android.dx.rop.code.RopMethod,int[],com.android.dx.dex.code.BlockAddresses) -> c
    com.android.dx.dex.code.CatchHandlerList handlersFor(com.android.dx.rop.code.BasicBlock,com.android.dx.dex.code.BlockAddresses) -> d
    com.android.dx.dex.code.CatchTable$Entry makeEntry(com.android.dx.rop.code.BasicBlock,com.android.dx.rop.code.BasicBlock,com.android.dx.dex.code.CatchHandlerList,com.android.dx.dex.code.BlockAddresses) -> e
    boolean rangeIsValid(com.android.dx.rop.code.BasicBlock,com.android.dx.rop.code.BasicBlock,com.android.dx.dex.code.BlockAddresses) -> f
com.android.dx.dex.code.SwitchData -> k.b0:
    com.android.dx.dex.code.CodeAddress user -> e
    com.android.dx.dex.code.CodeAddress[] targets -> g
    boolean packed -> h
    com.android.dx.util.IntList cases -> f
    boolean isPacked() -> A
    long packedCodeSize(com.android.dx.util.IntList) -> B
    boolean shouldPack(com.android.dx.util.IntList) -> C
    long sparseCodeSize(com.android.dx.util.IntList) -> D
    java.lang.String argString() -> a
    int codeSize() -> b
    java.lang.String listingString0(boolean) -> s
    com.android.dx.dex.code.DalvInsn withRegisters(com.android.dx.rop.code.RegisterSpecList) -> y
    void writeTo(com.android.dx.util.AnnotatedOutput) -> z
com.android.dx.dex.code.TargetInsn -> k.c0:
    com.android.dx.dex.code.CodeAddress target -> e
    com.android.dx.dex.code.CodeAddress getTarget() -> A
    int getTargetAddress() -> B
    int getTargetOffset() -> C
    boolean hasTargetOffset() -> D
    com.android.dx.dex.code.TargetInsn withNewTargetAndReversed(com.android.dx.dex.code.CodeAddress) -> E
    java.lang.String argString() -> a
    com.android.dx.dex.code.DalvInsn withOpcode(com.android.dx.dex.code.Dop) -> w
    com.android.dx.dex.code.DalvInsn withRegisters(com.android.dx.rop.code.RegisterSpecList) -> y
com.android.dx.dex.code.VariableSizeInsn -> k.d0:
    com.android.dx.dex.code.DalvInsn withOpcode(com.android.dx.dex.code.Dop) -> w
    com.android.dx.dex.code.DalvInsn withRegisterOffset(int) -> x
com.android.dx.dex.code.ZeroSizeInsn -> k.e0:
    int codeSize() -> b
    com.android.dx.dex.code.DalvInsn withOpcode(com.android.dx.dex.code.Dop) -> w
    com.android.dx.dex.code.DalvInsn withRegisterOffset(int) -> x
    void writeTo(com.android.dx.util.AnnotatedOutput) -> z
com.android.dx.dex.code.form.Form10t -> l.a:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    boolean branchFits(com.android.dx.dex.code.TargetInsn) -> b
    int codeSize() -> d
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form10x -> l.b:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form11n -> l.c:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form11x -> l.d:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form12x -> l.e:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form20t -> l.f:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    boolean branchFits(com.android.dx.dex.code.TargetInsn) -> b
    int codeSize() -> d
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form21c -> l.g:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form21h -> l.h:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form21s -> l.i:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form21t -> l.j:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    boolean branchFits(com.android.dx.dex.code.TargetInsn) -> b
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form22b -> l.k:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form22c -> l.l:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form22s -> l.m:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form22t -> l.n:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    boolean branchFits(com.android.dx.dex.code.TargetInsn) -> b
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form22x -> l.o:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form23x -> l.p:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form30t -> l.q:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    boolean branchFits(com.android.dx.dex.code.TargetInsn) -> b
    int codeSize() -> d
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form31c -> l.r:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form31i -> l.s:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form31t -> l.t:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    boolean branchFits(com.android.dx.dex.code.TargetInsn) -> b
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form32x -> l.u:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form35c -> l.v:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    com.android.dx.rop.code.RegisterSpecList explicitize(com.android.dx.rop.code.RegisterSpecList) -> G
    int wordCount(com.android.dx.rop.code.RegisterSpecList) -> H
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form3rc -> l.w:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form45cc -> l.x:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    com.android.dx.rop.code.RegisterSpecList explicitize(com.android.dx.rop.code.RegisterSpecList) -> G
    int wordCount(com.android.dx.rop.code.RegisterSpecList) -> H
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form4rcc -> l.y:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.Form51l -> l.z:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.util.BitSet compatibleRegs(com.android.dx.dex.code.DalvInsn) -> g
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.code.form.SpecialFormat -> l.a0:
    com.android.dx.dex.code.InsnFormat THE_ONE -> a
    void writeTo(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.code.DalvInsn) -> F
    int codeSize() -> d
    java.lang.String insnArgString(com.android.dx.dex.code.DalvInsn) -> h
    java.lang.String insnCommentString(com.android.dx.dex.code.DalvInsn,boolean) -> i
    boolean isCompatible(com.android.dx.dex.code.DalvInsn) -> j
com.android.dx.dex.file.AnnotationItem -> m.a:
    com.android.dx.dex.file.AnnotationItem$TypeIdSorter TYPE_ID_SORTER -> h
    byte[] encodedForm -> g
    com.android.dx.dex.file.TypeIdItem type -> f
    com.android.dx.rop.annotation.Annotation annotation -> e
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    int compareTo0(com.android.dx.dex.file.OffsettedItem) -> g
    void place0(com.android.dx.dex.file.Section,int) -> m
    java.lang.String toHuman() -> o
    void writeTo0(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> p
    com.android.dx.dex.file.TypeIdItem access$100(com.android.dx.dex.file.AnnotationItem) -> q
    void annotateTo(com.android.dx.util.AnnotatedOutput,java.lang.String) -> r
    void sortByTypeIdIndex(com.android.dx.dex.file.AnnotationItem[]) -> s
com.android.dx.dex.file.AnnotationItem$1 -> m.a$a:
    int[] $SwitchMap$com$android$dx$rop$annotation$AnnotationVisibility -> a
com.android.dx.dex.file.AnnotationItem$TypeIdSorter -> m.a$b:
    int compare(com.android.dx.dex.file.AnnotationItem,com.android.dx.dex.file.AnnotationItem) -> a
com.android.dx.dex.file.AnnotationSetItem -> m.b:
    com.android.dx.dex.file.AnnotationItem[] items -> f
    com.android.dx.rop.annotation.Annotations annotations -> e
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    int compareTo0(com.android.dx.dex.file.OffsettedItem) -> g
    void place0(com.android.dx.dex.file.Section,int) -> m
    java.lang.String toHuman() -> o
    void writeTo0(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> p
    int writeSize(com.android.dx.rop.annotation.Annotations) -> q
com.android.dx.dex.file.AnnotationSetRefItem -> m.c:
    com.android.dx.dex.file.AnnotationSetItem annotations -> e
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    java.lang.String toHuman() -> o
    void writeTo0(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> p
com.android.dx.dex.file.AnnotationUtils -> m.d:
    com.android.dx.rop.cst.CstType MEMBER_CLASSES_TYPE -> e
    com.android.dx.rop.cst.CstString VALUE_STRING -> k
    com.android.dx.rop.cst.CstType INNER_CLASS_TYPE -> d
    com.android.dx.rop.cst.CstType SOURCE_DEBUG_EXTENSION_TYPE -> g
    com.android.dx.rop.cst.CstType SIGNATURE_TYPE -> f
    com.android.dx.rop.cst.CstType THROWS_TYPE -> h
    com.android.dx.rop.cst.CstType ANNOTATION_DEFAULT_TYPE -> a
    com.android.dx.rop.cst.CstType ENCLOSING_METHOD_TYPE -> c
    com.android.dx.rop.cst.CstString ACCESS_FLAGS_STRING -> i
    com.android.dx.rop.cst.CstType ENCLOSING_CLASS_TYPE -> b
    com.android.dx.rop.cst.CstString NAME_STRING -> j
    com.android.dx.rop.annotation.Annotation makeAnnotationDefault(com.android.dx.rop.annotation.Annotation) -> a
    com.android.dx.rop.cst.CstArray makeCstArray(com.android.dx.rop.type.TypeList) -> b
    com.android.dx.rop.annotation.Annotation makeEnclosingClass(com.android.dx.rop.cst.CstType) -> c
    com.android.dx.rop.annotation.Annotation makeEnclosingMethod(com.android.dx.rop.cst.CstMethodRef) -> d
    com.android.dx.rop.annotation.Annotation makeInnerClass(com.android.dx.rop.cst.CstString,int) -> e
    com.android.dx.rop.annotation.Annotation makeMemberClasses(com.android.dx.rop.type.TypeList) -> f
    com.android.dx.rop.annotation.Annotation makeSignature(com.android.dx.rop.cst.CstString) -> g
    com.android.dx.rop.annotation.Annotation makeSourceDebugExtension(com.android.dx.rop.cst.CstString) -> h
    com.android.dx.rop.annotation.Annotation makeThrows(com.android.dx.rop.type.TypeList) -> i
com.android.dx.dex.file.AnnotationsDirectoryItem -> m.e:
    java.util.ArrayList parameterAnnotations -> h
    java.util.ArrayList methodAnnotations -> g
    java.util.ArrayList fieldAnnotations -> f
    com.android.dx.dex.file.AnnotationSetItem classAnnotations -> e
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    int compareTo0(com.android.dx.dex.file.OffsettedItem) -> g
    void place0(com.android.dx.dex.file.Section,int) -> m
    java.lang.String toHuman() -> o
    void writeTo0(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> p
    void addFieldAnnotations(com.android.dx.rop.cst.CstFieldRef,com.android.dx.rop.annotation.Annotations,com.android.dx.dex.file.DexFile) -> q
    void addMethodAnnotations(com.android.dx.rop.cst.CstMethodRef,com.android.dx.rop.annotation.Annotations,com.android.dx.dex.file.DexFile) -> r
    void addParameterAnnotations(com.android.dx.rop.cst.CstMethodRef,com.android.dx.rop.annotation.AnnotationsList,com.android.dx.dex.file.DexFile) -> s
    boolean isEmpty() -> t
    boolean isInternable() -> u
    int listSize(java.util.ArrayList) -> v
    void setClassAnnotations(com.android.dx.rop.annotation.Annotations,com.android.dx.dex.file.DexFile) -> w
com.android.dx.dex.file.CallSiteIdItem -> m.f:
    com.android.dx.dex.file.CallSiteItem data -> c
    com.android.dx.rop.cst.CstCallSiteRef invokeDynamicRef -> b
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    int writeSize() -> d
    void writeTo(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> e
com.android.dx.dex.file.CallSiteIdsSection -> m.g:
    java.util.TreeMap callSiteIds -> f
    java.util.TreeMap callSites -> g
    java.util.Collection items() -> g
    void orderItems() -> q
    void addCallSiteItem(com.android.dx.rop.cst.CstCallSite,com.android.dx.dex.file.CallSiteItem) -> r
    com.android.dx.dex.file.IndexedItem get(com.android.dx.rop.cst.Constant) -> s
    com.android.dx.dex.file.CallSiteItem getCallSiteItem(com.android.dx.rop.cst.CstCallSite) -> t
    void intern(com.android.dx.rop.cst.CstCallSiteRef) -> u
com.android.dx.dex.file.CallSiteItem -> m.h:
    com.android.dx.rop.cst.CstCallSite value -> e
    byte[] encodedForm -> f
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    void place0(com.android.dx.dex.file.Section,int) -> m
    java.lang.String toHuman() -> o
    void writeTo0(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> p
    int writeSize(com.android.dx.rop.cst.CstCallSite) -> q
com.android.dx.dex.file.CatchStructs -> m.i:
    java.util.TreeMap handlerOffsets -> e
    com.android.dx.dex.code.CatchTable table -> b
    int encodedHandlerHeaderSize -> d
    byte[] encodedHandlers -> c
    com.android.dx.dex.code.DalvCode code -> a
    void annotateAndConsumeHandlers(com.android.dx.dex.code.CatchHandlerList,int,int,java.lang.String,java.io.PrintWriter,com.android.dx.util.AnnotatedOutput) -> a
    void annotateEntries(java.lang.String,java.io.PrintWriter,com.android.dx.util.AnnotatedOutput) -> b
    void encode(com.android.dx.dex.file.DexFile) -> c
    void finishProcessingIfNecessary() -> d
    int triesSize() -> e
    int writeSize() -> f
    void writeTo(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> g
com.android.dx.dex.file.ClassDataItem -> m.j:
    com.android.dx.rop.cst.CstType thisClass -> e
    java.util.HashMap staticValues -> g
    byte[] encodedForm -> l
    java.util.ArrayList virtualMethods -> j
    java.util.ArrayList directMethods -> i
    java.util.ArrayList instanceFields -> h
    com.android.dx.rop.cst.CstArray staticValuesConstant -> k
    java.util.ArrayList staticFields -> f
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    void place0(com.android.dx.dex.file.Section,int) -> m
    java.lang.String toHuman() -> o
    void writeTo0(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> p
    void addDirectMethod(com.android.dx.dex.file.EncodedMethod) -> q
    void addInstanceField(com.android.dx.dex.file.EncodedField) -> r
    void addStaticField(com.android.dx.dex.file.EncodedField,com.android.dx.rop.cst.Constant) -> s
    void addVirtualMethod(com.android.dx.dex.file.EncodedMethod) -> t
    void encodeList(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput,java.lang.String,java.util.ArrayList) -> u
    void encodeOutput(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> v
    void encodeSize(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput,java.lang.String,int) -> w
    com.android.dx.rop.cst.CstArray getStaticValuesConstant() -> x
    boolean isEmpty() -> y
    com.android.dx.rop.cst.CstArray makeStaticValuesConstant() -> z
com.android.dx.dex.file.ClassDefItem -> m.k:
    com.android.dx.rop.cst.CstType superclass -> d
    com.android.dx.dex.file.EncodedArrayItem staticValuesItem -> h
    com.android.dx.dex.file.AnnotationsDirectoryItem annotationsDirectory -> i
    com.android.dx.dex.file.TypeListItem interfaces -> e
    com.android.dx.rop.cst.CstString sourceFile -> f
    int accessFlags -> c
    com.android.dx.rop.cst.CstType thisClass -> b
    com.android.dx.dex.file.ClassDataItem classData -> g
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    int writeSize() -> d
    void writeTo(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> e
    void addDirectMethod(com.android.dx.dex.file.EncodedMethod) -> j
    void addFieldAnnotations(com.android.dx.rop.cst.CstFieldRef,com.android.dx.rop.annotation.Annotations,com.android.dx.dex.file.DexFile) -> k
    void addInstanceField(com.android.dx.dex.file.EncodedField) -> l
    void addMethodAnnotations(com.android.dx.rop.cst.CstMethodRef,com.android.dx.rop.annotation.Annotations,com.android.dx.dex.file.DexFile) -> m
    void addParameterAnnotations(com.android.dx.rop.cst.CstMethodRef,com.android.dx.rop.annotation.AnnotationsList,com.android.dx.dex.file.DexFile) -> n
    void addStaticField(com.android.dx.dex.file.EncodedField,com.android.dx.rop.cst.Constant) -> o
    void addVirtualMethod(com.android.dx.dex.file.EncodedMethod) -> p
    com.android.dx.rop.type.TypeList getInterfaces() -> q
    com.android.dx.rop.cst.CstType getSuperclass() -> r
    com.android.dx.rop.cst.CstType getThisClass() -> s
    void setClassAnnotations(com.android.dx.rop.annotation.Annotations,com.android.dx.dex.file.DexFile) -> t
com.android.dx.dex.file.ClassDefsSection -> m.l:
    java.util.TreeMap classDefs -> f
    java.util.ArrayList orderedDefs -> g
    java.util.Collection items() -> g
    void orderItems() -> q
    void add(com.android.dx.dex.file.ClassDefItem) -> r
    int orderItems0(com.android.dx.rop.type.Type,int,int) -> s
    void writeHeaderPart(com.android.dx.util.AnnotatedOutput) -> t
com.android.dx.dex.file.CodeItem -> m.m:
    com.android.dx.rop.type.TypeList throwsList -> i
    com.android.dx.rop.cst.CstMethodRef ref -> e
    com.android.dx.dex.code.DalvCode code -> f
    boolean isStatic -> h
    com.android.dx.dex.file.CatchStructs catches -> g
    com.android.dx.dex.file.DebugInfoItem debugInfo -> j
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    void place0(com.android.dx.dex.file.Section,int) -> m
    java.lang.String toHuman() -> o
    void writeTo0(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> p
    int getInsSize() -> q
    int getOutsSize() -> r
    int getRegistersSize() -> s
    void writeCodes(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> t
com.android.dx.dex.file.CodeItem$1 -> m.m$a:
    com.android.dx.dex.file.DexFile val$file -> a
    com.android.dx.dex.file.CodeItem this$0 -> b
    int getIndex(com.android.dx.rop.cst.Constant) -> a
com.android.dx.dex.file.DebugInfoEncoder -> m.n:
    boolean shouldConsume -> n
    com.android.dx.dex.code.LocalList locals -> b
    com.android.dx.util.AnnotatedOutput annotateTo -> k
    int line -> j
    java.lang.String prefix -> m
    int address -> i
    int regSize -> f
    int codeSize -> e
    com.android.dx.dex.code.PositionList positions -> a
    com.android.dx.util.ByteArrayAnnotatedOutput output -> c
    com.android.dx.dex.code.LocalList$Entry[] lastEntryForReg -> o
    com.android.dx.dex.file.DexFile file -> d
    boolean isStatic -> h
    com.android.dx.rop.type.Prototype desc -> g
    java.io.PrintWriter debugPrint -> l
    void annotate(int,java.lang.String) -> a
    java.util.ArrayList buildSortedPositions() -> b
    int computeOpcode(int,int) -> c
    byte[] convert() -> d
    byte[] convert0() -> e
    byte[] convertAndAnnotate(java.lang.String,java.io.PrintWriter,com.android.dx.util.AnnotatedOutput,boolean) -> f
    void emitAdvanceLine(int) -> g
    void emitAdvancePc(int) -> h
    void emitEndSequence() -> i
    void emitHeader(java.util.ArrayList,java.util.ArrayList) -> j
    void emitLocalEnd(com.android.dx.dex.code.LocalList$Entry) -> k
    void emitLocalRestart(com.android.dx.dex.code.LocalList$Entry) -> l
    void emitLocalStart(com.android.dx.dex.code.LocalList$Entry) -> m
    void emitLocalStartExtended(com.android.dx.dex.code.LocalList$Entry) -> n
    int emitLocalsAtAddress(int) -> o
    void emitPosition(com.android.dx.dex.code.PositionList$Entry) -> p
    int emitPositionsAtAddress(int,java.util.ArrayList) -> q
    void emitStringIndex(com.android.dx.rop.cst.CstString) -> r
    void emitTypeIndex(com.android.dx.rop.cst.CstType) -> s
    void emitUnsignedLeb128(int) -> t
    java.lang.String entryAnnotationString(com.android.dx.dex.code.LocalList$Entry) -> u
    java.util.ArrayList extractMethodArguments() -> v
    int getParamBase() -> w
com.android.dx.dex.file.DebugInfoEncoder$1 -> m.n$a:
    com.android.dx.dex.file.DebugInfoEncoder this$0 -> a
    int compare(com.android.dx.dex.code.PositionList$Entry,com.android.dx.dex.code.PositionList$Entry) -> a
com.android.dx.dex.file.DebugInfoEncoder$2 -> m.n$b:
    com.android.dx.dex.file.DebugInfoEncoder this$0 -> a
    int compare(com.android.dx.dex.code.LocalList$Entry,com.android.dx.dex.code.LocalList$Entry) -> a
com.android.dx.dex.file.DebugInfoItem -> m.o:
    com.android.dx.rop.cst.CstMethodRef ref -> h
    com.android.dx.dex.code.DalvCode code -> e
    boolean isStatic -> g
    byte[] encoded -> f
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    void place0(com.android.dx.dex.file.Section,int) -> m
    java.lang.String toHuman() -> o
    void writeTo0(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> p
    void annotateTo(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput,java.lang.String) -> q
    byte[] encode(com.android.dx.dex.file.DexFile,java.lang.String,java.io.PrintWriter,com.android.dx.util.AnnotatedOutput,boolean) -> r
    byte[] encode0(com.android.dx.dex.file.DexFile,java.lang.String,java.io.PrintWriter,com.android.dx.util.AnnotatedOutput,boolean) -> s
com.android.dx.dex.file.DexFile -> m.p:
    com.android.dx.dex.file.StringIdsSection stringIds -> f
    com.android.dx.dex.file.FieldIdsSection fieldIds -> i
    com.android.dx.dex.file.HeaderSection header -> p
    com.android.dx.dex.file.MixedItemSection map -> d
    com.android.dx.dex.file.MixedItemSection typeLists -> c
    com.android.dx.dex.file.MixedItemSection wordData -> b
    com.android.dx.dex.file.TypeIdsSection typeIds -> g
    com.android.dx.dex.file.CallSiteIdsSection callSiteIds -> m
    com.android.dx.dex.file.MethodIdsSection methodIds -> j
    com.android.dx.dex.file.Section[] sections -> q
    com.android.dx.dex.file.ProtoIdsSection protoIds -> h
    com.android.dx.dex.file.MixedItemSection classData -> l
    com.android.dx.dex.DexOptions dexOptions -> a
    com.android.dx.dex.file.ClassDefsSection classDefs -> k
    com.android.dx.dex.file.MixedItemSection stringData -> e
    int fileSize -> r
    com.android.dx.dex.file.MixedItemSection byteData -> o
    int dumpWidth -> s
    com.android.dx.dex.file.MethodHandlesSection methodHandles -> n
    void add(com.android.dx.dex.file.ClassDefItem) -> a
    void calcChecksum(byte[],int) -> b
    void calcSignature(byte[],int) -> c
    com.android.dx.dex.file.IndexedItem findItemOrNull(com.android.dx.rop.cst.Constant) -> d
    com.android.dx.dex.file.MixedItemSection getByteData() -> e
    com.android.dx.dex.file.CallSiteIdsSection getCallSiteIds() -> f
    com.android.dx.dex.file.MixedItemSection getClassData() -> g
    com.android.dx.dex.file.ClassDefsSection getClassDefs() -> h
    com.android.dx.dex.DexOptions getDexOptions() -> i
    com.android.dx.dex.file.FieldIdsSection getFieldIds() -> j
    int getFileSize() -> k
    com.android.dx.dex.file.Section getFirstDataSection() -> l
    com.android.dx.dex.file.Section getLastDataSection() -> m
    com.android.dx.dex.file.MixedItemSection getMap() -> n
    com.android.dx.dex.file.MethodHandlesSection getMethodHandles() -> o
    com.android.dx.dex.file.MethodIdsSection getMethodIds() -> p
    com.android.dx.dex.file.ProtoIdsSection getProtoIds() -> q
    com.android.dx.dex.file.Statistics getStatistics() -> r
    com.android.dx.dex.file.MixedItemSection getStringData() -> s
    com.android.dx.dex.file.StringIdsSection getStringIds() -> t
    com.android.dx.dex.file.TypeIdsSection getTypeIds() -> u
    com.android.dx.dex.file.MixedItemSection getTypeLists() -> v
    com.android.dx.dex.file.MixedItemSection getWordData() -> w
    void internIfAppropriate(com.android.dx.rop.cst.Constant) -> x
    byte[] toDex(java.io.Writer,boolean) -> y
    com.android.dx.util.ByteArrayAnnotatedOutput toDex0(boolean,boolean,com.android.dx.dex.file.DexFile$Storage) -> z
com.android.dx.dex.file.DexFile$Storage -> m.p$a:
com.android.dx.dex.file.EncodedArrayItem -> m.q:
    com.android.dx.rop.cst.CstArray array -> e
    byte[] encodedForm -> f
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    int compareTo0(com.android.dx.dex.file.OffsettedItem) -> g
    void place0(com.android.dx.dex.file.Section,int) -> m
    java.lang.String toHuman() -> o
    void writeTo0(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> p
com.android.dx.dex.file.EncodedField -> m.r:
    com.android.dx.rop.cst.CstFieldRef field -> b
    int encode(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput,int,int) -> a
    void addContents(com.android.dx.dex.file.DexFile) -> c
    int compareTo(com.android.dx.dex.file.EncodedField) -> d
    com.android.dx.rop.cst.CstFieldRef getRef() -> e
    java.lang.String toHuman() -> i
com.android.dx.dex.file.EncodedMember -> m.s:
    int accessFlags -> a
    int encode(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput,int,int) -> a
    int getAccessFlags() -> b
com.android.dx.dex.file.EncodedMethod -> m.t:
    com.android.dx.dex.file.CodeItem code -> c
    com.android.dx.rop.cst.CstMethodRef method -> b
    int encode(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput,int,int) -> a
    void addContents(com.android.dx.dex.file.DexFile) -> c
    int compareTo(com.android.dx.dex.file.EncodedMethod) -> d
    java.lang.String toHuman() -> i
com.android.dx.dex.file.FieldAnnotationStruct -> m.u:
    com.android.dx.rop.cst.CstFieldRef field -> a
    com.android.dx.dex.file.AnnotationSetItem annotations -> b
    void addContents(com.android.dx.dex.file.DexFile) -> a
    int compareTo(com.android.dx.dex.file.FieldAnnotationStruct) -> b
    void writeTo(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> c
    java.lang.String toHuman() -> i
com.android.dx.dex.file.FieldIdItem -> m.v:
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    int getTypoidIdx(com.android.dx.dex.file.DexFile) -> l
    java.lang.String getTypoidName() -> m
    com.android.dx.rop.cst.CstFieldRef getFieldRef() -> n
com.android.dx.dex.file.FieldIdsSection -> m.w:
    java.util.TreeMap fieldIds -> f
    java.util.Collection items() -> g
    com.android.dx.dex.file.IndexedItem get(com.android.dx.rop.cst.Constant) -> s
    int indexOf(com.android.dx.rop.cst.CstFieldRef) -> t
    com.android.dx.dex.file.FieldIdItem intern(com.android.dx.rop.cst.CstFieldRef) -> u
    void writeHeaderPart(com.android.dx.util.AnnotatedOutput) -> v
com.android.dx.dex.file.HeaderItem -> m.x:
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    int writeSize() -> d
    void writeTo(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> e
com.android.dx.dex.file.HeaderSection -> m.y:
    java.util.List list -> f
    java.util.Collection items() -> g
    void orderItems() -> q
com.android.dx.dex.file.IdItem -> m.z:
    com.android.dx.rop.cst.CstType type -> b
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.rop.cst.CstType getDefiningClass() -> j
com.android.dx.dex.file.IndexedItem -> m.a0:
    int index -> a
    int getIndex() -> f
    boolean hasIndex() -> g
    java.lang.String indexString() -> h
    void setIndex(int) -> i
com.android.dx.dex.file.Item -> m.b0:
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    java.lang.String typeName() -> c
    int writeSize() -> d
    void writeTo(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> e
com.android.dx.dex.file.ItemType -> m.c0:
    com.android.dx.dex.file.ItemType TYPE_CLASS_DATA_ITEM -> q
    com.android.dx.dex.file.ItemType[] $VALUES -> B
    com.android.dx.dex.file.ItemType TYPE_ANNOTATION_SET_REF_LIST -> o
    com.android.dx.dex.file.ItemType TYPE_MAP_LIST -> m
    com.android.dx.dex.file.ItemType TYPE_CALL_SITE_ID_ITEM -> k
    com.android.dx.dex.file.ItemType TYPE_TYPE_ITEM -> y
    com.android.dx.dex.file.ItemType TYPE_ANNOTATIONS_DIRECTORY_ITEM -> w
    com.android.dx.dex.file.ItemType TYPE_ANNOTATION_ITEM -> u
    com.android.dx.dex.file.ItemType TYPE_STRING_DATA_ITEM -> s
    com.android.dx.dex.file.ItemType TYPE_METHOD_ID_ITEM -> i
    com.android.dx.dex.file.ItemType TYPE_PROTO_ID_ITEM -> g
    java.lang.String humanName -> c
    com.android.dx.dex.file.ItemType TYPE_STRING_ID_ITEM -> e
    com.android.dx.dex.file.ItemType TYPE_CODE_ITEM -> r
    com.android.dx.dex.file.ItemType TYPE_ANNOTATION_SET_ITEM -> p
    com.android.dx.dex.file.ItemType TYPE_TYPE_LIST -> n
    com.android.dx.dex.file.ItemType TYPE_METHOD_HANDLE_ITEM -> l
    com.android.dx.dex.file.ItemType TYPE_EXCEPTION_HANDLER_ITEM -> z
    com.android.dx.dex.file.ItemType TYPE_MAP_ITEM -> x
    com.android.dx.dex.file.ItemType TYPE_ENCODED_ARRAY_ITEM -> v
    int mapValue -> a
    com.android.dx.dex.file.ItemType TYPE_DEBUG_INFO_ITEM -> t
    com.android.dx.dex.file.ItemType TYPE_ANNOTATION_SET_REF_ITEM -> A
    com.android.dx.dex.file.ItemType TYPE_CLASS_DEF_ITEM -> j
    com.android.dx.dex.file.ItemType TYPE_FIELD_ID_ITEM -> h
    java.lang.String typeName -> b
    com.android.dx.dex.file.ItemType TYPE_TYPE_ID_ITEM -> f
    com.android.dx.dex.file.ItemType TYPE_HEADER_ITEM -> d
    int getMapValue() -> a
    java.lang.String getTypeName() -> b
    java.lang.String toHuman() -> i
com.android.dx.dex.file.MapItem -> m.d0:
    com.android.dx.dex.file.Section section -> f
    int itemCount -> i
    com.android.dx.dex.file.Item lastItem -> h
    com.android.dx.dex.file.Item firstItem -> g
    com.android.dx.dex.file.ItemType type -> e
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    java.lang.String toHuman() -> o
    void writeTo0(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> p
    void addMap(com.android.dx.dex.file.Section[],com.android.dx.dex.file.MixedItemSection) -> q
com.android.dx.dex.file.MemberIdItem -> m.e0:
    com.android.dx.rop.cst.CstMemberRef cst -> c
    void addContents(com.android.dx.dex.file.DexFile) -> a
    int writeSize() -> d
    void writeTo(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> e
    com.android.dx.rop.cst.CstMemberRef getRef() -> k
    int getTypoidIdx(com.android.dx.dex.file.DexFile) -> l
    java.lang.String getTypoidName() -> m
com.android.dx.dex.file.MemberIdsSection -> m.f0:
    void orderItems() -> q
    java.lang.String getTooManyMembersMessage() -> r
com.android.dx.dex.file.MethodAnnotationStruct -> m.g0:
    com.android.dx.dex.file.AnnotationSetItem annotations -> b
    com.android.dx.rop.cst.CstMethodRef method -> a
    void addContents(com.android.dx.dex.file.DexFile) -> a
    int compareTo(com.android.dx.dex.file.MethodAnnotationStruct) -> b
    void writeTo(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> c
    java.lang.String toHuman() -> i
com.android.dx.dex.file.MethodHandleItem -> m.h0:
    com.android.dx.rop.cst.CstMethodHandle methodHandle -> c
    int ITEM_SIZE -> b
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    int writeSize() -> d
    void writeTo(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> e
    int getTargetIndex(com.android.dx.dex.file.DexFile) -> j
com.android.dx.dex.file.MethodHandlesSection -> m.i0:
    java.util.TreeMap methodHandles -> f
    java.util.Collection items() -> g
    void orderItems() -> q
    com.android.dx.dex.file.IndexedItem get(com.android.dx.rop.cst.Constant) -> r
    int indexOf(com.android.dx.rop.cst.CstMethodHandle) -> s
    void intern(com.android.dx.rop.cst.CstMethodHandle) -> t
com.android.dx.dex.file.MethodIdItem -> m.j0:
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    int getTypoidIdx(com.android.dx.dex.file.DexFile) -> l
    java.lang.String getTypoidName() -> m
    com.android.dx.rop.cst.CstBaseMethodRef getMethodRef() -> n
com.android.dx.dex.file.MethodIdsSection -> m.k0:
    java.util.TreeMap methodIds -> f
    java.util.Collection items() -> g
    com.android.dx.dex.file.IndexedItem get(com.android.dx.rop.cst.Constant) -> s
    int indexOf(com.android.dx.rop.cst.CstBaseMethodRef) -> t
    com.android.dx.dex.file.MethodIdItem intern(com.android.dx.rop.cst.CstBaseMethodRef) -> u
    void writeHeaderPart(com.android.dx.util.AnnotatedOutput) -> v
com.android.dx.dex.file.MixedItemSection -> m.l0:
    java.util.HashMap interns -> g
    java.util.Comparator TYPE_SORTER -> j
    int writeSize -> i
    java.util.ArrayList items -> f
    com.android.dx.dex.file.MixedItemSection$SortType sort -> h
    int getAbsoluteItemOffset(com.android.dx.dex.file.Item) -> b
    java.util.Collection items() -> g
    void prepare0() -> i
    int writeSize() -> n
    void writeTo0(com.android.dx.util.AnnotatedOutput) -> p
    void add(com.android.dx.dex.file.OffsettedItem) -> q
    com.android.dx.dex.file.OffsettedItem intern(com.android.dx.dex.file.OffsettedItem) -> r
    void placeItems() -> s
    void writeIndexAnnotation(com.android.dx.util.AnnotatedOutput,com.android.dx.dex.file.ItemType,java.lang.String) -> t
com.android.dx.dex.file.MixedItemSection$1 -> m.l0$a:
    int compare(com.android.dx.dex.file.OffsettedItem,com.android.dx.dex.file.OffsettedItem) -> a
com.android.dx.dex.file.MixedItemSection$2 -> m.l0$b:
    int[] $SwitchMap$com$android$dx$dex$file$MixedItemSection$SortType -> a
com.android.dx.dex.file.MixedItemSection$SortType -> m.l0$c:
    com.android.dx.dex.file.MixedItemSection$SortType INSTANCE -> c
    com.android.dx.dex.file.MixedItemSection$SortType NONE -> a
    com.android.dx.dex.file.MixedItemSection$SortType TYPE -> b
    com.android.dx.dex.file.MixedItemSection$SortType[] $VALUES -> d
com.android.dx.dex.file.OffsettedItem -> m.m0:
    com.android.dx.dex.file.Section addedTo -> c
    int offset -> d
    int writeSize -> b
    int alignment -> a
    int writeSize() -> d
    void writeTo(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> e
    int compareTo(com.android.dx.dex.file.OffsettedItem) -> f
    int compareTo0(com.android.dx.dex.file.OffsettedItem) -> g
    int getAbsoluteOffset() -> h
    int getAbsoluteOffsetOr0(com.android.dx.dex.file.OffsettedItem) -> i
    int getAlignment() -> j
    java.lang.String offsetString() -> k
    int place(com.android.dx.dex.file.Section,int) -> l
    void place0(com.android.dx.dex.file.Section,int) -> m
    void setWriteSize(int) -> n
    java.lang.String toHuman() -> o
    void writeTo0(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> p
com.android.dx.dex.file.ParameterAnnotationStruct -> m.n0:
    com.android.dx.dex.file.UniformListItem annotationsItem -> c
    com.android.dx.rop.cst.CstMethodRef method -> a
    com.android.dx.rop.annotation.AnnotationsList annotationsList -> b
    void addContents(com.android.dx.dex.file.DexFile) -> a
    int compareTo(com.android.dx.dex.file.ParameterAnnotationStruct) -> b
    void writeTo(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> c
    java.lang.String toHuman() -> i
com.android.dx.dex.file.ProtoIdItem -> m.o0:
    com.android.dx.dex.file.TypeListItem parameterTypes -> d
    com.android.dx.rop.cst.CstString shortForm -> c
    com.android.dx.rop.type.Prototype prototype -> b
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    int writeSize() -> d
    void writeTo(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> e
    com.android.dx.rop.cst.CstString makeShortForm(com.android.dx.rop.type.Prototype) -> j
    char shortFormCharFor(com.android.dx.rop.type.Type) -> k
com.android.dx.dex.file.ProtoIdsSection -> m.p0:
    java.util.TreeMap protoIds -> f
    java.util.Collection items() -> g
    void orderItems() -> q
    com.android.dx.dex.file.IndexedItem get(com.android.dx.rop.cst.Constant) -> r
    int indexOf(com.android.dx.rop.type.Prototype) -> s
    com.android.dx.dex.file.ProtoIdItem intern(com.android.dx.rop.type.Prototype) -> t
    void writeHeaderPart(com.android.dx.util.AnnotatedOutput) -> u
com.android.dx.dex.file.Section -> m.q0:
    com.android.dx.dex.file.DexFile file -> b
    boolean prepared -> e
    java.lang.String name -> a
    int fileOffset -> d
    int alignment -> c
    void align(com.android.dx.util.AnnotatedOutput) -> a
    int getAbsoluteItemOffset(com.android.dx.dex.file.Item) -> b
    int getAbsoluteOffset(int) -> c
    int getAlignment() -> d
    com.android.dx.dex.file.DexFile getFile() -> e
    int getFileOffset() -> f
    java.util.Collection items() -> g
    void prepare() -> h
    void prepare0() -> i
    int setFileOffset(int) -> j
    void throwIfNotPrepared() -> k
    void throwIfPrepared() -> l
    void validateAlignment(int) -> m
    int writeSize() -> n
    void writeTo(com.android.dx.util.AnnotatedOutput) -> o
    void writeTo0(com.android.dx.util.AnnotatedOutput) -> p
com.android.dx.dex.file.Statistics -> m.r0:
    java.util.HashMap dataMap -> a
    void add(com.android.dx.dex.file.Item) -> a
    void addAll(com.android.dx.dex.file.Section) -> b
    void writeAnnotation(com.android.dx.util.AnnotatedOutput) -> c
com.android.dx.dex.file.Statistics$Data -> m.r0$a:
    java.lang.String name -> a
    int largestSize -> d
    int smallestSize -> e
    int count -> b
    int totalSize -> c
    java.lang.String access$000(com.android.dx.dex.file.Statistics$Data) -> a
    void add(com.android.dx.dex.file.Item) -> b
    java.lang.String toHuman() -> c
    void writeAnnotation(com.android.dx.util.AnnotatedOutput) -> d
com.android.dx.dex.file.StringDataItem -> m.s0:
    com.android.dx.rop.cst.CstString value -> e
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    int compareTo0(com.android.dx.dex.file.OffsettedItem) -> g
    java.lang.String toHuman() -> o
    void writeTo0(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> p
    int writeSize(com.android.dx.rop.cst.CstString) -> q
com.android.dx.dex.file.StringIdItem -> m.t0:
    com.android.dx.rop.cst.CstString value -> b
    com.android.dx.dex.file.StringDataItem data -> c
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    int writeSize() -> d
    void writeTo(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> e
    com.android.dx.rop.cst.CstString getValue() -> j
com.android.dx.dex.file.StringIdsSection -> m.u0:
    java.util.TreeMap strings -> f
    java.util.Collection items() -> g
    void orderItems() -> q
    com.android.dx.dex.file.IndexedItem get(com.android.dx.rop.cst.Constant) -> r
    int indexOf(com.android.dx.rop.cst.CstString) -> s
    com.android.dx.dex.file.StringIdItem intern(com.android.dx.dex.file.StringIdItem) -> t
    com.android.dx.dex.file.StringIdItem intern(com.android.dx.rop.cst.CstString) -> u
    void writeHeaderPart(com.android.dx.util.AnnotatedOutput) -> v
com.android.dx.dex.file.TypeIdItem -> m.v0:
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    int writeSize() -> d
    void writeTo(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> e
com.android.dx.dex.file.TypeIdsSection -> m.w0:
    java.util.TreeMap typeIds -> f
    java.util.Collection items() -> g
    void orderItems() -> q
    com.android.dx.dex.file.IndexedItem get(com.android.dx.rop.cst.Constant) -> r
    int indexOf(com.android.dx.rop.cst.CstType) -> s
    int indexOf(com.android.dx.rop.type.Type) -> t
    com.android.dx.dex.file.TypeIdItem intern(com.android.dx.rop.cst.CstType) -> u
    com.android.dx.dex.file.TypeIdItem intern(com.android.dx.rop.type.Type) -> v
    void writeHeaderPart(com.android.dx.util.AnnotatedOutput) -> w
com.android.dx.dex.file.TypeListItem -> m.x0:
    com.android.dx.rop.type.TypeList list -> e
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    int compareTo0(com.android.dx.dex.file.OffsettedItem) -> g
    java.lang.String toHuman() -> o
    void writeTo0(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> p
    com.android.dx.rop.type.TypeList getList() -> q
com.android.dx.dex.file.UniformItemSection -> m.y0:
    int getAbsoluteItemOffset(com.android.dx.dex.file.Item) -> b
    void prepare0() -> i
    int writeSize() -> n
    void writeTo0(com.android.dx.util.AnnotatedOutput) -> p
    void orderItems() -> q
com.android.dx.dex.file.UniformListItem -> m.z0:
    java.util.List items -> f
    com.android.dx.dex.file.ItemType itemType -> e
    void addContents(com.android.dx.dex.file.DexFile) -> a
    com.android.dx.dex.file.ItemType itemType() -> b
    void place0(com.android.dx.dex.file.Section,int) -> m
    java.lang.String toHuman() -> o
    void writeTo0(com.android.dx.dex.file.DexFile,com.android.dx.util.AnnotatedOutput) -> p
    int getAlignment(java.util.List) -> q
    java.util.List getItems() -> r
    int headerSize() -> s
    int writeSize(java.util.List) -> t
com.android.dx.dex.file.ValueEncoder -> m.a1:
    com.android.dx.dex.file.DexFile file -> a
    com.android.dx.util.AnnotatedOutput out -> b
    void addContents(com.android.dx.dex.file.DexFile,com.android.dx.rop.annotation.Annotation) -> a
    void addContents(com.android.dx.dex.file.DexFile,com.android.dx.rop.cst.Constant) -> b
    java.lang.String constantToHuman(com.android.dx.rop.cst.Constant) -> c
    int constantToValueType(com.android.dx.rop.cst.Constant) -> d
    void writeAnnotation(com.android.dx.rop.annotation.Annotation,boolean) -> e
    void writeArray(com.android.dx.rop.cst.CstArray,boolean) -> f
    void writeConstant(com.android.dx.rop.cst.Constant) -> g
com.android.dx.io.CodeReader -> n.a:
    com.android.dx.io.CodeReader$Visitor typeVisitor -> c
    com.android.dx.io.CodeReader$Visitor fieldVisitor -> d
    com.android.dx.io.CodeReader$Visitor fallbackVisitor -> a
    com.android.dx.io.CodeReader$Visitor stringVisitor -> b
    com.android.dx.io.CodeReader$Visitor callSiteVisitor -> g
    com.android.dx.io.CodeReader$Visitor methodVisitor -> e
    com.android.dx.io.CodeReader$Visitor methodAndProtoVisitor -> f
    void callVisit(com.android.dx.io.instructions.DecodedInstruction[],com.android.dx.io.instructions.DecodedInstruction) -> a
    void setAllVisitors(com.android.dx.io.CodeReader$Visitor) -> b
    void setCallSiteVisitor(com.android.dx.io.CodeReader$Visitor) -> c
    void setFieldVisitor(com.android.dx.io.CodeReader$Visitor) -> d
    void setMethodAndProtoVisitor(com.android.dx.io.CodeReader$Visitor) -> e
    void setMethodVisitor(com.android.dx.io.CodeReader$Visitor) -> f
    void setStringVisitor(com.android.dx.io.CodeReader$Visitor) -> g
    void setTypeVisitor(com.android.dx.io.CodeReader$Visitor) -> h
    void visitAll(com.android.dx.io.instructions.DecodedInstruction[]) -> i
com.android.dx.io.CodeReader$1 -> n.a$a:
    int[] $SwitchMap$com$android$dx$io$IndexType -> a
com.android.dx.io.CodeReader$Visitor -> n.a$b:
    void visit(com.android.dx.io.instructions.DecodedInstruction[],com.android.dx.io.instructions.DecodedInstruction) -> a
com.android.dx.io.IndexType -> n.b:
    com.android.dx.io.IndexType FIELD_OFFSET -> l
    com.android.dx.io.IndexType VTABLE_OFFSET -> k
    com.android.dx.io.IndexType PROTO_REF -> n
    com.android.dx.io.IndexType METHOD_HANDLE_REF -> m
    com.android.dx.io.IndexType TYPE_REF -> d
    com.android.dx.io.IndexType VARIES -> c
    com.android.dx.io.IndexType METHOD_REF -> f
    com.android.dx.io.IndexType STRING_REF -> e
    com.android.dx.io.IndexType METHOD_AND_PROTO_REF -> h
    com.android.dx.io.IndexType[] $VALUES -> o
    com.android.dx.io.IndexType FIELD_REF -> g
    com.android.dx.io.IndexType INLINE_METHOD -> j
    com.android.dx.io.IndexType CALL_SITE_REF -> i
    com.android.dx.io.IndexType NONE -> b
    com.android.dx.io.IndexType UNKNOWN -> a
com.android.dx.io.OpcodeInfo -> n.c:
    com.android.dx.io.OpcodeInfo$Info INVOKE_CUSTOM -> r3
    com.android.dx.io.OpcodeInfo$Info REM_FLOAT_2ADDR -> Q2
    com.android.dx.io.OpcodeInfo$Info IPUT_CHAR -> P0
    com.android.dx.io.OpcodeInfo$Info NOT_INT -> q1
    com.android.dx.io.OpcodeInfo$Info XOR_LONG_2ADDR -> I2
    com.android.dx.io.OpcodeInfo$Info AND_INT_LIT8 -> j3
    com.android.dx.io.OpcodeInfo$Info IGET_BYTE -> H0
    com.android.dx.io.OpcodeInfo$Info INVOKE_STATIC -> i1
    com.android.dx.io.OpcodeInfo$Info CONST_WIDE_32 -> C
    com.android.dx.io.OpcodeInfo$Info SPARSE_SWITCH_PAYLOAD -> d
    com.android.dx.io.OpcodeInfo$Info USHR_INT_2ADDR -> A2
    com.android.dx.io.OpcodeInfo$Info AND_INT_LIT16 -> b3
    com.android.dx.io.OpcodeInfo$Info SPUT_OBJECT -> a1
    com.android.dx.io.OpcodeInfo$Info APUT_OBJECT -> y0
    com.android.dx.io.OpcodeInfo$Info DIV_LONG -> Y1
    com.android.dx.io.OpcodeInfo$Info SHR_INT_2ADDR -> z2
    com.android.dx.io.OpcodeInfo$Info THROW -> S
    com.android.dx.io.OpcodeInfo$Info RETURN_VOID -> t
    com.android.dx.io.OpcodeInfo$Info OR_INT -> Q1
    com.android.dx.io.OpcodeInfo$Info AGET_WIDE -> q0
    com.android.dx.io.OpcodeInfo$Info SUB_INT_2ADDR -> r2
    com.android.dx.io.OpcodeInfo$Info INT_TO_CHAR -> I1
    com.android.dx.io.OpcodeInfo$Info DIV_FLOAT -> j2
    com.android.dx.io.OpcodeInfo$Info CONST_WIDE_16 -> B
    com.android.dx.io.OpcodeInfo$Info IF_LE -> i0
    com.android.dx.io.OpcodeInfo$Info PACKED_SWITCH_PAYLOAD -> c
    com.android.dx.io.OpcodeInfo$Info LONG_TO_DOUBLE -> A1
    com.android.dx.io.OpcodeInfo$Info OR_LONG -> b2
    com.android.dx.io.OpcodeInfo$Info CMPL_DOUBLE -> a0
    com.android.dx.io.OpcodeInfo$Info LONG_TO_FLOAT -> z1
    com.android.dx.io.OpcodeInfo$Info DIV_INT_LIT16 -> Z2
    com.android.dx.io.OpcodeInfo$Info FILL_ARRAY_DATA -> R
    com.android.dx.io.OpcodeInfo$Info SPUT -> Y0
    com.android.dx.io.OpcodeInfo$Info MOVE_EXCEPTION -> s
    com.android.dx.io.OpcodeInfo$Info CONST_WIDE_HIGH16 -> E
    com.android.dx.io.OpcodeInfo$Info NOP -> f
    com.android.dx.io.OpcodeInfo$Info DIV_FLOAT_2ADDR -> P2
    com.android.dx.io.OpcodeInfo$Info INVOKE_POLYMORPHIC_RANGE -> q3
    com.android.dx.io.OpcodeInfo$Info IPUT_BYTE -> O0
    com.android.dx.io.OpcodeInfo$Info NEG_INT -> p1
    com.android.dx.io.OpcodeInfo$Info OR_LONG_2ADDR -> H2
    com.android.dx.io.OpcodeInfo$Info REM_INT_LIT8 -> i3
    com.android.dx.io.OpcodeInfo$Info IGET_BOOLEAN -> G0
    com.android.dx.io.OpcodeInfo$Info INVOKE_DIRECT -> h1
    com.android.dx.io.OpcodeInfo$Info GOTO_16 -> U
    com.android.dx.io.OpcodeInfo$Info RETURN_WIDE -> v
    com.android.dx.io.OpcodeInfo$Info REM_INT_LIT16 -> a3
    com.android.dx.io.OpcodeInfo$Info SHL_INT_2ADDR -> y2
    com.android.dx.io.OpcodeInfo$Info MUL_LONG -> X1
    com.android.dx.io.OpcodeInfo$Info APUT_WIDE -> x0
    com.android.dx.io.OpcodeInfo$Info FILL_ARRAY_DATA_PAYLOAD -> e
    com.android.dx.io.OpcodeInfo$Info AND_INT -> P1
    com.android.dx.io.OpcodeInfo$Info ADD_INT_2ADDR -> q2
    com.android.dx.io.OpcodeInfo$Info AGET -> p0
    com.android.dx.io.OpcodeInfo$Info INT_TO_BYTE -> H1
    com.android.dx.io.OpcodeInfo$Info MUL_FLOAT -> i2
    com.android.dx.io.OpcodeInfo$Info IF_GT -> h0
    com.android.dx.io.OpcodeInfo$Info CONST_WIDE -> D
    com.android.dx.io.OpcodeInfo$Info RETURN -> u
    com.android.dx.io.OpcodeInfo$Info AND_LONG -> a2
    com.android.dx.io.OpcodeInfo$Info MUL_INT_LIT16 -> Y2
    com.android.dx.io.OpcodeInfo$Info SGET_SHORT -> X0
    com.android.dx.io.OpcodeInfo$Info LONG_TO_INT -> y1
    com.android.dx.io.OpcodeInfo$Info GOTO -> T
    com.android.dx.io.OpcodeInfo$Info MUL_FLOAT_2ADDR -> O2
    com.android.dx.io.OpcodeInfo$Info INVOKE_POLYMORPHIC -> p3
    com.android.dx.io.OpcodeInfo$Info CONST_STRING_JUMBO -> G
    com.android.dx.io.OpcodeInfo$Info IPUT_BOOLEAN -> N0
    com.android.dx.io.OpcodeInfo$Info INVOKE_INTERFACE_RANGE -> o1
    com.android.dx.io.OpcodeInfo$Info MOVE_FROM16 -> h
    com.android.dx.io.OpcodeInfo$Info AND_LONG_2ADDR -> G2
    com.android.dx.io.OpcodeInfo$Info DIV_INT_LIT8 -> h3
    com.android.dx.io.OpcodeInfo$Info IGET_OBJECT -> F0
    com.android.dx.io.OpcodeInfo$Info INVOKE_SUPER -> g1
    com.android.dx.io.OpcodeInfo$Info PACKED_SWITCH -> W
    com.android.dx.io.OpcodeInfo$Info CONST_4 -> x
    com.android.dx.io.OpcodeInfo$Info APUT -> w0
    com.android.dx.io.OpcodeInfo$Info SUB_LONG -> W1
    com.android.dx.io.OpcodeInfo$Info XOR_INT_2ADDR -> x2
    com.android.dx.io.OpcodeInfo$Info CONST_STRING -> F
    com.android.dx.io.OpcodeInfo$Info MOVE -> g
    com.android.dx.io.OpcodeInfo$Info REM_INT -> O1
    com.android.dx.io.OpcodeInfo$Info REM_DOUBLE -> p2
    com.android.dx.io.OpcodeInfo$Info IF_LEZ -> o0
    com.android.dx.io.OpcodeInfo$Info DOUBLE_TO_FLOAT -> G1
    com.android.dx.io.OpcodeInfo$Info SUB_FLOAT -> h2
    com.android.dx.io.OpcodeInfo$Info IF_GE -> g0
    com.android.dx.io.OpcodeInfo$Info GOTO_32 -> V
    com.android.dx.io.OpcodeInfo$Info RETURN_OBJECT -> w
    com.android.dx.io.OpcodeInfo$Info INT_TO_DOUBLE -> x1
    com.android.dx.io.OpcodeInfo$Info RSUB_INT -> X2
    com.android.dx.io.OpcodeInfo$Info SGET_CHAR -> W0
    com.android.dx.io.OpcodeInfo$Info SUB_FLOAT_2ADDR -> N2
    com.android.dx.io.OpcodeInfo$Info USHR_INT_LIT8 -> o3
    com.android.dx.io.OpcodeInfo$Info IPUT_OBJECT -> M0
    com.android.dx.io.OpcodeInfo$Info INVOKE_STATIC_RANGE -> n1
    com.android.dx.io.OpcodeInfo$Info MONITOR_ENTER -> I
    com.android.dx.io.OpcodeInfo$Info MOVE_WIDE -> j
    com.android.dx.io.OpcodeInfo$Info REM_LONG_2ADDR -> F2
    com.android.dx.io.OpcodeInfo$Info MUL_INT_LIT8 -> g3
    com.android.dx.io.OpcodeInfo$Info IGET_WIDE -> E0
    com.android.dx.io.OpcodeInfo$Info INVOKE_VIRTUAL -> f1
    com.android.dx.io.OpcodeInfo$Info CMPL_FLOAT -> Y
    com.android.dx.io.OpcodeInfo$Info CONST -> z
    com.android.dx.io.OpcodeInfo$Info OR_INT_2ADDR -> w2
    com.android.dx.io.OpcodeInfo$Info ADD_LONG -> V1
    com.android.dx.io.OpcodeInfo$Info AGET_SHORT -> v0
    com.android.dx.io.OpcodeInfo$Info DIV_INT -> N1
    com.android.dx.io.OpcodeInfo$Info DIV_DOUBLE -> o2
    com.android.dx.io.OpcodeInfo$Info IF_GTZ -> n0
    com.android.dx.io.OpcodeInfo$Info CONST_CLASS -> H
    com.android.dx.io.OpcodeInfo$Info MOVE_16 -> i
    com.android.dx.io.OpcodeInfo$Info DOUBLE_TO_LONG -> F1
    com.android.dx.io.OpcodeInfo$Info ADD_FLOAT -> g2
    com.android.dx.io.OpcodeInfo$Info IF_LT -> f0
    com.android.dx.io.OpcodeInfo$Info SPARSE_SWITCH -> X
    com.android.dx.io.OpcodeInfo$Info CONST_16 -> y
    com.android.dx.io.OpcodeInfo$Info ADD_INT_LIT16 -> W2
    com.android.dx.io.OpcodeInfo$Info SGET_BYTE -> V0
    com.android.dx.io.OpcodeInfo$Info INT_TO_FLOAT -> w1
    com.android.dx.io.OpcodeInfo$Info IPUT_WIDE -> L0
    com.android.dx.io.OpcodeInfo$Info INVOKE_DIRECT_RANGE -> m1
    com.android.dx.io.OpcodeInfo$Info CHECK_CAST -> K
    com.android.dx.io.OpcodeInfo$Info MOVE_WIDE_16 -> l
    com.android.dx.io.OpcodeInfo$Info DIV_DOUBLE_2ADDR -> U2
    com.android.dx.io.OpcodeInfo$Info IGET -> D0
    com.android.dx.io.OpcodeInfo$Info SPUT_SHORT -> e1
    com.android.dx.io.OpcodeInfo$Info ADD_FLOAT_2ADDR -> M2
    com.android.dx.io.OpcodeInfo$Info SHR_INT_LIT8 -> n3
    com.android.dx.io.OpcodeInfo$Info DIV_LONG_2ADDR -> E2
    com.android.dx.io.OpcodeInfo$Info RSUB_INT_LIT8 -> f3
    com.android.dx.io.OpcodeInfo$Info AGET_CHAR -> u0
    com.android.dx.io.OpcodeInfo$Info USHR_INT -> U1
    com.android.dx.io.OpcodeInfo$Info AND_INT_2ADDR -> v2
    com.android.dx.io.OpcodeInfo$Info MUL_INT -> M1
    com.android.dx.io.OpcodeInfo$Info MUL_DOUBLE -> n2
    com.android.dx.io.OpcodeInfo$Info IF_GEZ -> m0
    com.android.dx.io.OpcodeInfo$Info MONITOR_EXIT -> J
    com.android.dx.io.OpcodeInfo$Info MOVE_WIDE_FROM16 -> k
    com.android.dx.io.OpcodeInfo$Info DOUBLE_TO_INT -> E1
    com.android.dx.io.OpcodeInfo$Info USHR_LONG -> f2
    com.android.dx.io.OpcodeInfo$Info IF_NE -> e0
    com.android.dx.io.OpcodeInfo$Info CMPG_FLOAT -> Z
    com.android.dx.io.OpcodeInfo$Info INT_TO_LONG -> v1
    com.android.dx.io.OpcodeInfo$Info REM_DOUBLE_2ADDR -> V2
    com.android.dx.io.OpcodeInfo$Info SGET_BOOLEAN -> U0
    com.android.dx.io.OpcodeInfo$Info NEG_FLOAT -> t1
    com.android.dx.io.OpcodeInfo$Info MUL_DOUBLE_2ADDR -> T2
    com.android.dx.io.OpcodeInfo$Info SGET_WIDE -> S0
    com.android.dx.io.OpcodeInfo$Info CONST_METHOD_TYPE -> u3
    com.android.dx.io.OpcodeInfo$Info USHR_LONG_2ADDR -> L2
    com.android.dx.io.OpcodeInfo$Info SHL_INT_LIT8 -> m3
    com.android.dx.io.OpcodeInfo$Info IPUT -> K0
    com.android.dx.io.OpcodeInfo$Info INVOKE_SUPER_RANGE -> l1
    com.android.dx.io.OpcodeInfo$Info MUL_LONG_2ADDR -> D2
    com.android.dx.io.OpcodeInfo$Info ADD_INT_LIT8 -> e3
    com.android.dx.io.OpcodeInfo$Info APUT_SHORT -> C0
    com.android.dx.io.OpcodeInfo$Info SPUT_CHAR -> d1
    com.android.dx.io.OpcodeInfo$Info ARRAY_LENGTH -> M
    com.android.dx.io.OpcodeInfo$Info MOVE_OBJECT_FROM16 -> n
    com.android.dx.io.OpcodeInfo$Info AGET_BYTE -> t0
    com.android.dx.io.OpcodeInfo$Info IF_LTZ -> l0
    com.android.dx.io.OpcodeInfo$Info REM_INT_2ADDR -> u2
    com.android.dx.io.OpcodeInfo$Info INSTANCE_OF -> L
    com.android.dx.io.OpcodeInfo$Info SHR_INT -> T1
    com.android.dx.io.OpcodeInfo$Info IF_EQ -> d0
    com.android.dx.io.OpcodeInfo$Info SUB_INT -> L1
    com.android.dx.io.OpcodeInfo$Info SUB_DOUBLE -> m2
    com.android.dx.io.OpcodeInfo$Info FLOAT_TO_DOUBLE -> D1
    com.android.dx.io.OpcodeInfo$Info SHR_LONG -> e2
    com.android.dx.io.OpcodeInfo$Info MOVE_OBJECT -> m
    com.android.dx.io.OpcodeInfo$Info SGET_OBJECT -> T0
    com.android.dx.io.OpcodeInfo$Info NEG_DOUBLE -> u1
    com.android.dx.io.OpcodeInfo$Info CONST_METHOD_HANDLE -> t3
    com.android.dx.io.OpcodeInfo$Info SUB_DOUBLE_2ADDR -> S2
    com.android.dx.io.OpcodeInfo$Info SGET -> R0
    com.android.dx.io.OpcodeInfo$Info NOT_LONG -> s1
    com.android.dx.io.OpcodeInfo$Info SHR_LONG_2ADDR -> K2
    com.android.dx.io.OpcodeInfo$Info XOR_INT_LIT8 -> l3
    com.android.dx.io.OpcodeInfo$Info IGET_SHORT -> J0
    com.android.dx.io.OpcodeInfo$Info INVOKE_VIRTUAL_RANGE -> k1
    com.android.dx.io.OpcodeInfo$Info SUB_LONG_2ADDR -> C2
    com.android.dx.io.OpcodeInfo$Info XOR_INT_LIT16 -> d3
    com.android.dx.io.OpcodeInfo$Info APUT_CHAR -> B0
    com.android.dx.io.OpcodeInfo$Info SPUT_BYTE -> c1
    com.android.dx.io.OpcodeInfo$Info NEW_ARRAY -> O
    com.android.dx.io.OpcodeInfo$Info MOVE_RESULT -> p
    com.android.dx.io.OpcodeInfo$Info[] INFO -> a
    com.android.dx.io.OpcodeInfo$Info AGET_BOOLEAN -> s0
    com.android.dx.io.OpcodeInfo$Info SHL_INT -> S1
    com.android.dx.io.OpcodeInfo$Info DIV_INT_2ADDR -> t2
    com.android.dx.io.OpcodeInfo$Info ADD_INT -> K1
    com.android.dx.io.OpcodeInfo$Info ADD_DOUBLE -> l2
    com.android.dx.io.OpcodeInfo$Info IF_NEZ -> k0
    com.android.dx.io.OpcodeInfo$Info FLOAT_TO_LONG -> C1
    com.android.dx.io.OpcodeInfo$Info SHL_LONG -> d2
    com.android.dx.io.OpcodeInfo$Info CMP_LONG -> c0
    com.android.dx.io.OpcodeInfo$Info NEW_INSTANCE -> N
    com.android.dx.io.OpcodeInfo$Info MOVE_OBJECT_16 -> o
    com.android.dx.io.OpcodeInfo$Info NEG_LONG -> r1
    com.android.dx.io.OpcodeInfo$Info ADD_DOUBLE_2ADDR -> R2
    com.android.dx.io.OpcodeInfo$Info IPUT_SHORT -> Q0
    com.android.dx.io.OpcodeInfo$Info INVOKE_CUSTOM_RANGE -> s3
    com.android.dx.io.OpcodeInfo$Info CONST_HIGH16 -> A
    com.android.dx.io.OpcodeInfo$Info SHL_LONG_2ADDR -> J2
    com.android.dx.io.OpcodeInfo$Info OR_INT_LIT8 -> k3
    com.android.dx.io.OpcodeInfo$Info SPECIAL_FORMAT -> b
    com.android.dx.io.OpcodeInfo$Info IGET_CHAR -> I0
    com.android.dx.io.OpcodeInfo$Info INVOKE_INTERFACE -> j1
    com.android.dx.io.OpcodeInfo$Info ADD_LONG_2ADDR -> B2
    com.android.dx.io.OpcodeInfo$Info OR_INT_LIT16 -> c3
    com.android.dx.io.OpcodeInfo$Info APUT_BYTE -> A0
    com.android.dx.io.OpcodeInfo$Info SPUT_BOOLEAN -> b1
    com.android.dx.io.OpcodeInfo$Info FILLED_NEW_ARRAY_RANGE -> Q
    com.android.dx.io.OpcodeInfo$Info MOVE_RESULT_OBJECT -> r
    com.android.dx.io.OpcodeInfo$Info REM_LONG -> Z1
    com.android.dx.io.OpcodeInfo$Info APUT_BOOLEAN -> z0
    com.android.dx.io.OpcodeInfo$Info MUL_INT_2ADDR -> s2
    com.android.dx.io.OpcodeInfo$Info XOR_INT -> R1
    com.android.dx.io.OpcodeInfo$Info AGET_OBJECT -> r0
    com.android.dx.io.OpcodeInfo$Info INT_TO_SHORT -> J1
    com.android.dx.io.OpcodeInfo$Info REM_FLOAT -> k2
    com.android.dx.io.OpcodeInfo$Info IF_EQZ -> j0
    com.android.dx.io.OpcodeInfo$Info FLOAT_TO_INT -> B1
    com.android.dx.io.OpcodeInfo$Info XOR_LONG -> c2
    com.android.dx.io.OpcodeInfo$Info CMPG_DOUBLE -> b0
    com.android.dx.io.OpcodeInfo$Info FILLED_NEW_ARRAY -> P
    com.android.dx.io.OpcodeInfo$Info MOVE_RESULT_WIDE -> q
    com.android.dx.io.OpcodeInfo$Info SPUT_WIDE -> Z0
    com.android.dx.io.OpcodeInfo$Info get(int) -> a
    com.android.dx.io.instructions.InstructionCodec getFormat(int) -> b
    com.android.dx.io.IndexType getIndexType(int) -> c
    java.lang.String getName(int) -> d
    void set(com.android.dx.io.OpcodeInfo$Info) -> e
com.android.dx.io.OpcodeInfo$Info -> n.c$a:
    com.android.dx.io.instructions.InstructionCodec format -> c
    com.android.dx.io.IndexType indexType -> d
    java.lang.String name -> b
    int opcode -> a
    com.android.dx.io.instructions.InstructionCodec getFormat() -> a
    com.android.dx.io.IndexType getIndexType() -> b
    java.lang.String getName() -> c
    int getOpcode() -> d
com.android.dx.io.Opcodes -> n.d:
    int extractOpcodeFromUnit(int) -> a
    boolean isValidShape(int) -> b
com.android.dx.io.instructions.AddressMap -> o.a:
    java.util.HashMap map -> a
    int get(int) -> a
    void put(int,int) -> b
com.android.dx.io.instructions.BaseCodeCursor -> o.b:
    com.android.dx.io.instructions.AddressMap baseAddressMap -> a
    int cursor -> b
    int baseAddressForCursor() -> b
    int cursor() -> i
    void setBaseAddress(int,int) -> k
    void advance(int) -> l
com.android.dx.io.instructions.CodeCursor -> o.c:
    int baseAddressForCursor() -> b
    int cursor() -> i
    void setBaseAddress(int,int) -> k
com.android.dx.io.instructions.CodeInput -> o.d:
com.android.dx.io.instructions.CodeOutput -> o.e:
    void write(short[]) -> a
    void write(long[]) -> c
    void write(int[]) -> d
    void write(short,short,short,short) -> e
    void write(short) -> f
    void write(short,short,short,short,short) -> g
    void write(short,short) -> h
    void write(short,short,short) -> j
com.android.dx.io.instructions.DecodedInstruction -> o.f:
    long literal -> f
    com.android.dx.io.instructions.InstructionCodec format -> a
    com.android.dx.io.IndexType indexType -> d
    int target -> e
    int opcode -> b
    int index -> c
    int getTargetByte(int) -> A
    short getTargetUnit(int) -> B
    com.android.dx.io.instructions.DecodedInstruction withIndex(int) -> C
    com.android.dx.io.instructions.DecodedInstruction withProtoIndex(int,int) -> D
    com.android.dx.io.instructions.DecodedInstruction decode(com.android.dx.io.instructions.CodeInput) -> a
    com.android.dx.io.instructions.DecodedInstruction[] decodeAll(short[]) -> b
    void encode(com.android.dx.io.instructions.CodeOutput) -> c
    int getA() -> d
    short getAUnit() -> e
    int getB() -> f
    short getBUnit() -> g
    int getC() -> h
    short getCUnit() -> i
    int getD() -> j
    int getE() -> k
    com.android.dx.io.instructions.InstructionCodec getFormat() -> l
    int getIndex() -> m
    com.android.dx.io.IndexType getIndexType() -> n
    short getIndexUnit() -> o
    long getLiteral() -> p
    int getLiteralByte() -> q
    int getLiteralInt() -> r
    int getLiteralNibble() -> s
    short getLiteralUnit() -> t
    int getOpcode() -> u
    short getOpcodeUnit() -> v
    short getProtoIndex() -> w
    int getRegisterCount() -> x
    int getTarget() -> y
    int getTarget(int) -> z
com.android.dx.io.instructions.FillArrayDataPayloadDecodedInstruction -> o.g:
    java.lang.Object data -> g
    int size -> h
    int elementWidth -> i
    com.android.dx.io.instructions.DecodedInstruction withIndex(int) -> C
    java.lang.Object getData() -> E
    short getElementWidthUnit() -> F
    int getSize() -> G
    int getRegisterCount() -> x
com.android.dx.io.instructions.FiveRegisterDecodedInstruction -> o.h:
    int d -> j
    int e -> k
    int b -> h
    int c -> i
    int a -> g
    com.android.dx.io.instructions.DecodedInstruction withIndex(int) -> C
    int getA() -> d
    int getB() -> f
    int getC() -> h
    int getD() -> j
    int getE() -> k
    int getRegisterCount() -> x
com.android.dx.io.instructions.FourRegisterDecodedInstruction -> o.i:
    int d -> j
    int b -> h
    int c -> i
    int a -> g
    com.android.dx.io.instructions.DecodedInstruction withIndex(int) -> C
    int getA() -> d
    int getB() -> f
    int getC() -> h
    int getD() -> j
    int getRegisterCount() -> x
com.android.dx.io.instructions.InstructionCodec -> o.j:
    com.android.dx.io.instructions.InstructionCodec FORMAT_3RMI -> D
    com.android.dx.io.instructions.InstructionCodec FORMAT_11X -> e
    com.android.dx.io.instructions.InstructionCodec FORMAT_45CC -> F
    com.android.dx.io.instructions.InstructionCodec FORMAT_20T -> g
    com.android.dx.io.instructions.InstructionCodec FORMAT_00X -> a
    com.android.dx.io.instructions.InstructionCodec FORMAT_3RC -> B
    com.android.dx.io.instructions.InstructionCodec FORMAT_12X -> c
    com.android.dx.io.instructions.InstructionCodec FORMAT_31C -> x
    com.android.dx.io.instructions.InstructionCodec FORMAT_35MS -> z
    com.android.dx.io.instructions.InstructionCodec FORMAT_32X -> u
    com.android.dx.io.instructions.InstructionCodec FORMAT_31T -> w
    com.android.dx.io.instructions.InstructionCodec FORMAT_22S -> q
    com.android.dx.io.instructions.InstructionCodec FORMAT_22CS -> s
    com.android.dx.io.instructions.InstructionCodec FORMAT_21C -> m
    com.android.dx.io.instructions.InstructionCodec FORMAT_22B -> o
    com.android.dx.io.instructions.InstructionCodec FORMAT_PACKED_SWITCH_PAYLOAD -> H
    com.android.dx.io.instructions.InstructionCodec FORMAT_22X -> i
    com.android.dx.io.instructions.InstructionCodec FORMAT_FILL_ARRAY_DATA_PAYLOAD -> J
    com.android.dx.io.instructions.InstructionCodec FORMAT_21S -> k
    com.android.dx.io.instructions.InstructionCodec FORMAT_11N -> d
    com.android.dx.io.instructions.InstructionCodec FORMAT_51L -> E
    com.android.dx.io.instructions.InstructionCodec FORMAT_10T -> f
    com.android.dx.io.instructions.InstructionCodec FORMAT_4RCC -> G
    com.android.dx.io.instructions.InstructionCodec FORMAT_35MI -> A
    com.android.dx.io.instructions.InstructionCodec FORMAT_10X -> b
    com.android.dx.io.instructions.InstructionCodec FORMAT_3RMS -> C
    com.android.dx.io.instructions.InstructionCodec[] $VALUES -> K
    com.android.dx.io.instructions.InstructionCodec FORMAT_35C -> y
    com.android.dx.io.instructions.InstructionCodec FORMAT_30T -> t
    com.android.dx.io.instructions.InstructionCodec FORMAT_31I -> v
    com.android.dx.io.instructions.InstructionCodec FORMAT_22T -> p
    com.android.dx.io.instructions.InstructionCodec FORMAT_22C -> r
    com.android.dx.io.instructions.InstructionCodec FORMAT_21H -> l
    com.android.dx.io.instructions.InstructionCodec FORMAT_23X -> n
    com.android.dx.io.instructions.InstructionCodec FORMAT_20BC -> h
    com.android.dx.io.instructions.InstructionCodec FORMAT_SPARSE_SWITCH_PAYLOAD -> I
    com.android.dx.io.instructions.InstructionCodec FORMAT_21T -> j
    com.android.dx.io.instructions.DecodedInstruction decodeRegisterList(com.android.dx.io.instructions.InstructionCodec,int,com.android.dx.io.instructions.CodeInput) -> A
    com.android.dx.io.instructions.DecodedInstruction decodeRegisterRange(com.android.dx.io.instructions.InstructionCodec,int,com.android.dx.io.instructions.CodeInput) -> B
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    void encodeRegisterList(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> D
    void encodeRegisterRange(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> E
    int makeByte(int,int) -> F
    int nibble0(int) -> G
    int nibble1(int) -> H
    int nibble2(int) -> I
    int nibble3(int) -> J
    short unit0(int) -> K
    short unit0(long) -> L
    short unit1(int) -> M
    short unit1(long) -> N
    short unit2(long) -> O
    short unit3(long) -> P
    int access$100(int) -> a
    void access$1000(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> b
    com.android.dx.io.instructions.DecodedInstruction access$1100(com.android.dx.io.instructions.InstructionCodec,int,com.android.dx.io.instructions.CodeInput) -> c
    void access$1200(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> d
    short access$1300(long) -> e
    short access$1400(long) -> f
    short access$1500(long) -> g
    short access$1600(long) -> h
    int access$1700(int) -> i
    int access$1800(int) -> j
    short access$1900(int,int,int,int) -> k
    int access$200(int) -> l
    short access$2000(int) -> m
    int access$300(int) -> n
    int access$400(int) -> o
    int access$500(int,int) -> p
    short access$600(int,int) -> q
    short access$700(int) -> r
    short access$800(int) -> s
    com.android.dx.io.instructions.DecodedInstruction access$900(com.android.dx.io.instructions.InstructionCodec,int,com.android.dx.io.instructions.CodeInput) -> t
    short asUnsignedUnit(int) -> u
    int byte0(int) -> v
    int byte1(int) -> w
    short codeUnit(int,int) -> x
    short codeUnit(int,int,int,int) -> y
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$1 -> o.j$k:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$10 -> o.j$a:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$11 -> o.j$b:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$12 -> o.j$c:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$13 -> o.j$d:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$14 -> o.j$e:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$15 -> o.j$f:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$16 -> o.j$g:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$17 -> o.j$h:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$18 -> o.j$i:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$19 -> o.j$j:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$2 -> o.j$v:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$20 -> o.j$l:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$21 -> o.j$m:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$22 -> o.j$n:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$23 -> o.j$o:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$24 -> o.j$p:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$25 -> o.j$q:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$26 -> o.j$r:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$27 -> o.j$s:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$28 -> o.j$t:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$29 -> o.j$u:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$3 -> o.j$d0:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$30 -> o.j$w:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$31 -> o.j$x:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$32 -> o.j$y:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$33 -> o.j$z:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$34 -> o.j$a0:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$35 -> o.j$b0:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$36 -> o.j$c0:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$4 -> o.j$e0:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$5 -> o.j$f0:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$6 -> o.j$g0:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$7 -> o.j$h0:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$8 -> o.j$i0:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InstructionCodec$9 -> o.j$j0:
    void encode(com.android.dx.io.instructions.DecodedInstruction,com.android.dx.io.instructions.CodeOutput) -> C
    com.android.dx.io.instructions.DecodedInstruction decode(int,com.android.dx.io.instructions.CodeInput) -> z
com.android.dx.io.instructions.InvokePolymorphicDecodedInstruction -> o.k:
    int[] registers -> h
    int protoIndex -> g
    com.android.dx.io.instructions.DecodedInstruction withIndex(int) -> C
    com.android.dx.io.instructions.DecodedInstruction withProtoIndex(int,int) -> D
    int getF() -> E
    int getG() -> F
    int getC() -> h
    int getD() -> j
    int getE() -> k
    short getProtoIndex() -> w
    int getRegisterCount() -> x
com.android.dx.io.instructions.InvokePolymorphicRangeDecodedInstruction -> o.l:
    int registerCount -> h
    int protoIndex -> i
    int c -> g
    com.android.dx.io.instructions.DecodedInstruction withIndex(int) -> C
    com.android.dx.io.instructions.DecodedInstruction withProtoIndex(int,int) -> D
    int getC() -> h
    short getProtoIndex() -> w
    int getRegisterCount() -> x
com.android.dx.io.instructions.OneRegisterDecodedInstruction -> o.m:
    int a -> g
    com.android.dx.io.instructions.DecodedInstruction withIndex(int) -> C
    int getA() -> d
    int getRegisterCount() -> x
com.android.dx.io.instructions.PackedSwitchPayloadDecodedInstruction -> o.n:
    int[] targets -> h
    int firstKey -> g
    com.android.dx.io.instructions.DecodedInstruction withIndex(int) -> C
    int getFirstKey() -> E
    int[] getTargets() -> F
    int getRegisterCount() -> x
com.android.dx.io.instructions.RegisterRangeDecodedInstruction -> o.o:
    int registerCount -> h
    int a -> g
    com.android.dx.io.instructions.DecodedInstruction withIndex(int) -> C
    int getA() -> d
    int getRegisterCount() -> x
com.android.dx.io.instructions.ShortArrayCodeInput -> o.p:
    short[] array -> c
    boolean hasMore() -> m
com.android.dx.io.instructions.ShortArrayCodeOutput -> o.q:
    short[] array -> c
    void write(short[]) -> a
    void write(long[]) -> c
    void write(int[]) -> d
    void write(short,short,short,short) -> e
    void write(short) -> f
    void write(short,short,short,short,short) -> g
    void write(short,short) -> h
    void write(short,short,short) -> j
    short[] getArray() -> m
    void writeLong(long) -> n
com.android.dx.io.instructions.SparseSwitchPayloadDecodedInstruction -> o.r:
    int[] keys -> g
    int[] targets -> h
    com.android.dx.io.instructions.DecodedInstruction withIndex(int) -> C
    int[] getKeys() -> E
    int[] getTargets() -> F
    int getRegisterCount() -> x
com.android.dx.io.instructions.ThreeRegisterDecodedInstruction -> o.s:
    int b -> h
    int c -> i
    int a -> g
    com.android.dx.io.instructions.DecodedInstruction withIndex(int) -> C
    int getA() -> d
    int getB() -> f
    int getC() -> h
    int getRegisterCount() -> x
com.android.dx.io.instructions.TwoRegisterDecodedInstruction -> o.t:
    int b -> h
    int a -> g
    com.android.dx.io.instructions.DecodedInstruction withIndex(int) -> C
    int getA() -> d
    int getB() -> f
    int getRegisterCount() -> x
com.android.dx.io.instructions.ZeroRegisterDecodedInstruction -> o.u:
    com.android.dx.io.instructions.DecodedInstruction withIndex(int) -> C
    int getRegisterCount() -> x
com.android.dx.merge.CollisionPolicy -> p.a:
    com.android.dx.merge.CollisionPolicy[] $VALUES -> c
    com.android.dx.merge.CollisionPolicy KEEP_FIRST -> a
    com.android.dx.merge.CollisionPolicy FAIL -> b
com.android.dx.merge.DexMerger -> p.b:
    com.android.dx.merge.CollisionPolicy collisionPolicy -> c
    com.android.dex.Dex[] dexes -> a
    com.android.dex.Dex$Section annotationOut -> s
    com.android.dex.Dex$Section annotationSetRefListOut -> r
    com.android.dex.Dex dexOut -> f
    com.android.dex.Dex$Section encodedArrayOut -> o
    com.android.dex.Dex$Section debugInfoOut -> n
    com.android.dex.Dex$Section annotationSetOut -> q
    com.android.dx.command.dexer.DxContext context -> d
    com.android.dex.Dex$Section annotationsDirectoryOut -> p
    com.android.dex.Dex$Section classDataOut -> k
    int compactWasteThreshold -> v
    com.android.dex.Dex$Section typeListOut -> j
    com.android.dex.Dex$Section stringDataOut -> m
    com.android.dex.Dex$Section codeOut -> l
    com.android.dex.Dex$Section headerOut -> g
    com.android.dx.merge.IndexMap[] indexMaps -> b
    com.android.dx.merge.DexMerger$WriterSizes writerSizes -> e
    com.android.dex.Dex$Section mapListOut -> i
    com.android.dex.TableOfContents contentsOut -> t
    com.android.dex.Dex$Section idsDefsOut -> h
    com.android.dx.merge.InstructionTransformer instructionTransformer -> u
    void mergeProtoIds() -> A
    void mergeStringIds() -> B
    void mergeTypeIds() -> C
    void mergeTypeLists() -> D
    void readSortableTypes(com.android.dx.merge.SortableType[],com.android.dex.Dex,com.android.dx.merge.IndexMap) -> E
    void transformAnnotationDirectories(com.android.dex.Dex,com.android.dx.merge.IndexMap) -> F
    void transformAnnotationDirectory(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap) -> G
    void transformAnnotationSet(com.android.dx.merge.IndexMap,com.android.dex.Dex$Section) -> H
    void transformAnnotationSetRefList(com.android.dx.merge.IndexMap,com.android.dex.Dex$Section) -> I
    void transformAnnotationSetRefLists(com.android.dex.Dex,com.android.dx.merge.IndexMap) -> J
    void transformAnnotationSets(com.android.dex.Dex,com.android.dx.merge.IndexMap) -> K
    int[] transformCatchHandlers(com.android.dx.merge.IndexMap,com.android.dex.Code$CatchHandler[]) -> L
    void transformClassData(com.android.dex.Dex,com.android.dex.ClassData,com.android.dx.merge.IndexMap) -> M
    void transformClassDef(com.android.dex.Dex,com.android.dex.ClassDef,com.android.dx.merge.IndexMap) -> N
    void transformCode(com.android.dex.Dex,com.android.dex.Code,com.android.dx.merge.IndexMap) -> O
    void transformDebugInfoItem(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap) -> P
    void transformEncodedCatchHandler(com.android.dex.Code$CatchHandler,com.android.dx.merge.IndexMap) -> Q
    void transformFields(com.android.dx.merge.IndexMap,com.android.dex.ClassData$Field[]) -> R
    void transformMethods(com.android.dex.Dex,com.android.dx.merge.IndexMap,com.android.dex.ClassData$Method[]) -> S
    void transformStaticValues(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap) -> T
    void transformStaticValues(com.android.dex.Dex,com.android.dx.merge.IndexMap) -> U
    void transformTries(com.android.dex.Dex$Section,com.android.dex.Code$Try[],int[]) -> V
    void unionAnnotationSetsAndDirectories() -> W
    com.android.dex.Dex[] access$1300(com.android.dx.merge.DexMerger) -> a
    com.android.dx.merge.IndexMap[] access$1400(com.android.dx.merge.DexMerger) -> b
    com.android.dex.TableOfContents access$1500(com.android.dx.merge.DexMerger) -> c
    com.android.dex.Dex$Section access$1600(com.android.dx.merge.DexMerger) -> d
    com.android.dex.Dex$Section access$1700(com.android.dx.merge.DexMerger) -> e
    com.android.dex.Dex$Section access$1800(com.android.dx.merge.DexMerger) -> f
    com.android.dex.Dex$Section access$1900(com.android.dx.merge.DexMerger) -> g
    com.android.dex.Dex$Section access$2000(com.android.dx.merge.DexMerger) -> h
    com.android.dex.Dex$Section access$2100(com.android.dx.merge.DexMerger) -> i
    com.android.dex.Dex$Section access$2200(com.android.dx.merge.DexMerger) -> j
    com.android.dex.Dex$Section access$2300(com.android.dx.merge.DexMerger) -> k
    com.android.dex.Dex$Section access$2400(com.android.dx.merge.DexMerger) -> l
    com.android.dex.Dex$Section access$2500(com.android.dx.merge.DexMerger) -> m
    com.android.dex.Dex$Section access$2600(com.android.dx.merge.DexMerger) -> n
    com.android.dex.Dex$Section access$2700(com.android.dx.merge.DexMerger) -> o
    com.android.dex.Dex$Section access$2800(com.android.dx.merge.DexMerger) -> p
    com.android.dx.merge.SortableType[] getSortedTypes() -> q
    com.android.dex.Dex merge() -> r
    void mergeAnnotations() -> s
    int mergeApiLevels() -> t
    void mergeCallSiteIds() -> u
    void mergeClassDefs() -> v
    com.android.dex.Dex mergeDexes() -> w
    void mergeFieldIds() -> x
    void mergeMethodHandles() -> y
    void mergeMethodIds() -> z
com.android.dx.merge.DexMerger$1 -> p.b$a:
    com.android.dx.merge.DexMerger this$0 -> c
    com.android.dex.TableOfContents$Section getSection(com.android.dex.TableOfContents) -> a
    java.lang.Comparable read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> d
    void updateIndex(int,com.android.dx.merge.IndexMap,int,int) -> g
    void write(java.lang.Comparable) -> h
    java.lang.String read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> i
    void write(java.lang.String) -> j
com.android.dx.merge.DexMerger$2 -> p.b$b:
    com.android.dx.merge.DexMerger this$0 -> c
    com.android.dex.TableOfContents$Section getSection(com.android.dex.TableOfContents) -> a
    java.lang.Comparable read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> d
    void updateIndex(int,com.android.dx.merge.IndexMap,int,int) -> g
    void write(java.lang.Comparable) -> h
    java.lang.Integer read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> i
    void write(java.lang.Integer) -> j
com.android.dx.merge.DexMerger$3 -> p.b$c:
    com.android.dx.merge.DexMerger this$0 -> c
    com.android.dex.TableOfContents$Section getSection(com.android.dex.TableOfContents) -> a
    java.lang.Comparable read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> d
    void updateIndex(int,com.android.dx.merge.IndexMap,int,int) -> g
    void write(java.lang.Comparable) -> h
    com.android.dex.TypeList read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> i
    void write(com.android.dex.TypeList) -> j
com.android.dx.merge.DexMerger$4 -> p.b$d:
    com.android.dx.merge.DexMerger this$0 -> c
    com.android.dex.TableOfContents$Section getSection(com.android.dex.TableOfContents) -> a
    java.lang.Comparable read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> d
    void updateIndex(int,com.android.dx.merge.IndexMap,int,int) -> g
    void write(java.lang.Comparable) -> h
    com.android.dex.ProtoId read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> i
    void write(com.android.dex.ProtoId) -> j
com.android.dx.merge.DexMerger$5 -> p.b$e:
    com.android.dx.merge.DexMerger this$0 -> c
    com.android.dex.TableOfContents$Section getSection(com.android.dex.TableOfContents) -> a
    java.lang.Comparable read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> d
    void updateIndex(int,com.android.dx.merge.IndexMap,int,int) -> g
    void write(java.lang.Comparable) -> h
    com.android.dex.CallSiteId read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> i
    void write(com.android.dex.CallSiteId) -> j
com.android.dx.merge.DexMerger$6 -> p.b$f:
    com.android.dx.merge.DexMerger this$0 -> c
    com.android.dex.TableOfContents$Section getSection(com.android.dex.TableOfContents) -> a
    java.lang.Comparable read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> d
    void updateIndex(int,com.android.dx.merge.IndexMap,int,int) -> g
    void write(java.lang.Comparable) -> h
    com.android.dex.MethodHandle read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> i
    void write(com.android.dex.MethodHandle) -> j
com.android.dx.merge.DexMerger$7 -> p.b$g:
    com.android.dx.merge.DexMerger this$0 -> c
    com.android.dex.TableOfContents$Section getSection(com.android.dex.TableOfContents) -> a
    java.lang.Comparable read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> d
    void updateIndex(int,com.android.dx.merge.IndexMap,int,int) -> g
    void write(java.lang.Comparable) -> h
    com.android.dex.FieldId read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> i
    void write(com.android.dex.FieldId) -> j
com.android.dx.merge.DexMerger$8 -> p.b$h:
    com.android.dx.merge.DexMerger this$0 -> c
    com.android.dex.TableOfContents$Section getSection(com.android.dex.TableOfContents) -> a
    java.lang.Comparable read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> d
    void updateIndex(int,com.android.dx.merge.IndexMap,int,int) -> g
    void write(java.lang.Comparable) -> h
    com.android.dex.MethodId read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> i
    void write(com.android.dex.MethodId) -> j
com.android.dx.merge.DexMerger$9 -> p.b$i:
    com.android.dx.merge.DexMerger this$0 -> c
    com.android.dex.TableOfContents$Section getSection(com.android.dex.TableOfContents) -> a
    java.lang.Comparable read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> d
    void updateIndex(int,com.android.dx.merge.IndexMap,int,int) -> g
    void write(java.lang.Comparable) -> h
    com.android.dex.Annotation read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> i
    void write(com.android.dex.Annotation) -> j
com.android.dx.merge.DexMerger$IdMerger -> p.b$j:
    com.android.dex.Dex$Section out -> a
    com.android.dx.merge.DexMerger this$0 -> b
    com.android.dex.TableOfContents$Section getSection(com.android.dex.TableOfContents) -> a
    void mergeSorted() -> b
    void mergeUnsorted() -> c
    java.lang.Comparable read(com.android.dex.Dex$Section,com.android.dx.merge.IndexMap,int) -> d
    int readIntoMap(com.android.dex.Dex$Section,com.android.dex.TableOfContents$Section,com.android.dx.merge.IndexMap,int,java.util.TreeMap,int) -> e
    java.util.List readUnsortedValues(com.android.dex.Dex,com.android.dx.merge.IndexMap) -> f
    void updateIndex(int,com.android.dx.merge.IndexMap,int,int) -> g
    void write(java.lang.Comparable) -> h
com.android.dx.merge.DexMerger$IdMerger$UnsortedValue -> p.b$j$a:
    com.android.dx.merge.DexMerger$IdMerger this$1 -> f
    int index -> d
    int offset -> e
    com.android.dx.merge.IndexMap indexMap -> b
    com.android.dex.Dex source -> a
    java.lang.Comparable value -> c
    int compareTo(com.android.dx.merge.DexMerger$IdMerger$UnsortedValue) -> a
com.android.dx.merge.DexMerger$WriterSizes -> p.b$k:
    int annotationsSetRefList -> l
    int annotation -> m
    int annotationsDirectory -> j
    int annotationsSet -> k
    int debugInfo -> h
    int encodedArray -> i
    int code -> f
    int stringData -> g
    int typeList -> d
    int classData -> e
    int idsDefs -> b
    int mapList -> c
    int header -> a
    int access$000(com.android.dx.merge.DexMerger$WriterSizes) -> a
    int access$100(com.android.dx.merge.DexMerger$WriterSizes) -> b
    int access$1000(com.android.dx.merge.DexMerger$WriterSizes) -> c
    int access$1100(com.android.dx.merge.DexMerger$WriterSizes) -> d
    int access$1200(com.android.dx.merge.DexMerger$WriterSizes) -> e
    int access$200(com.android.dx.merge.DexMerger$WriterSizes) -> f
    int access$300(com.android.dx.merge.DexMerger$WriterSizes) -> g
    int access$400(com.android.dx.merge.DexMerger$WriterSizes) -> h
    int access$500(com.android.dx.merge.DexMerger$WriterSizes) -> i
    int access$600(com.android.dx.merge.DexMerger$WriterSizes) -> j
    int access$700(com.android.dx.merge.DexMerger$WriterSizes) -> k
    int access$800(com.android.dx.merge.DexMerger$WriterSizes) -> l
    int access$900(com.android.dx.merge.DexMerger$WriterSizes) -> m
    int fourByteAlign(int) -> n
    void fourByteAlign() -> o
    void plus(com.android.dex.TableOfContents,boolean) -> p
    int size() -> q
com.android.dx.merge.IndexMap -> p.c:
    java.util.HashMap annotationOffsets -> j
    java.util.HashMap typeListOffsets -> i
    java.util.HashMap methodHandleIds -> h
    java.util.HashMap encodedArrayValueOffset -> n
    java.util.HashMap annotationDirectoryOffsets -> m
    java.util.HashMap annotationSetRefListOffsets -> l
    java.util.HashMap annotationSetOffsets -> k
    short[] protoIds -> d
    short[] typeIds -> c
    short[] methodIds -> f
    com.android.dex.Dex target -> a
    short[] fieldIds -> e
    int[] callSiteIds -> g
    int[] stringIds -> b
    void putAnnotationSetRefListOffset(int,int) -> A
    void putEncodedArrayValueOffset(int,int) -> B
    void putTypeListOffset(int,int) -> C
    com.android.dex.Annotation adjust(com.android.dex.Annotation) -> a
    com.android.dex.CallSiteId adjust(com.android.dex.CallSiteId) -> b
    com.android.dex.ClassDef adjust(com.android.dex.ClassDef) -> c
    com.android.dex.FieldId adjust(com.android.dex.FieldId) -> d
    com.android.dex.MethodHandle adjust(com.android.dex.MethodHandle) -> e
    com.android.dex.MethodId adjust(com.android.dex.MethodId) -> f
    com.android.dex.ProtoId adjust(com.android.dex.ProtoId) -> g
    com.android.dx.merge.SortableType adjust(com.android.dx.merge.SortableType) -> h
    int adjustAnnotation(int) -> i
    int adjustAnnotationDirectory(int) -> j
    int adjustAnnotationSet(int) -> k
    int adjustAnnotationSetRefList(int) -> l
    int adjustCallSite(int) -> m
    int adjustEncodedArray(int) -> n
    com.android.dex.EncodedValue adjustEncodedArray(com.android.dex.EncodedValue) -> o
    int adjustField(int) -> p
    int adjustMethod(int) -> q
    int adjustMethodHandle(int) -> r
    int adjustProto(int) -> s
    int adjustString(int) -> t
    int adjustType(int) -> u
    com.android.dex.TypeList adjustTypeList(com.android.dex.TypeList) -> v
    int adjustTypeListOffset(int) -> w
    void putAnnotationDirectoryOffset(int,int) -> x
    void putAnnotationOffset(int,int) -> y
    void putAnnotationSetOffset(int,int) -> z
com.android.dx.merge.IndexMap$EncodedValueTransformer -> p.c$a:
    com.android.dex.util.ByteOutput out -> a
    com.android.dx.merge.IndexMap this$0 -> b
    void access$000(com.android.dx.merge.IndexMap$EncodedValueTransformer,com.android.dex.EncodedValueReader) -> a
    void access$100(com.android.dx.merge.IndexMap$EncodedValueTransformer,com.android.dex.EncodedValueReader) -> b
    void transform(com.android.dex.EncodedValueReader) -> c
    void transformAnnotation(com.android.dex.EncodedValueReader) -> d
    void transformArray(com.android.dex.EncodedValueReader) -> e
    void writeTypeAndArg(int,int) -> f
com.android.dx.merge.InstructionTransformer -> p.d:
    com.android.dx.io.CodeReader reader -> a
    com.android.dx.io.instructions.DecodedInstruction[] mappedInstructions -> b
    com.android.dx.merge.IndexMap indexMap -> d
    int mappedAt -> c
    void access$1000(boolean,int) -> a
    com.android.dx.io.instructions.DecodedInstruction[] access$700(com.android.dx.merge.InstructionTransformer) -> b
    int access$808(com.android.dx.merge.InstructionTransformer) -> c
    com.android.dx.merge.IndexMap access$900(com.android.dx.merge.InstructionTransformer) -> d
    void jumboCheck(boolean,int) -> e
    short[] transform(com.android.dx.merge.IndexMap,short[]) -> f
com.android.dx.merge.InstructionTransformer$1 -> p.d$a:
com.android.dx.merge.InstructionTransformer$CallSiteVisitor -> p.d$b:
    com.android.dx.merge.InstructionTransformer this$0 -> a
    void visit(com.android.dx.io.instructions.DecodedInstruction[],com.android.dx.io.instructions.DecodedInstruction) -> a
com.android.dx.merge.InstructionTransformer$FieldVisitor -> p.d$c:
    com.android.dx.merge.InstructionTransformer this$0 -> a
    void visit(com.android.dx.io.instructions.DecodedInstruction[],com.android.dx.io.instructions.DecodedInstruction) -> a
com.android.dx.merge.InstructionTransformer$GenericVisitor -> p.d$d:
    com.android.dx.merge.InstructionTransformer this$0 -> a
    void visit(com.android.dx.io.instructions.DecodedInstruction[],com.android.dx.io.instructions.DecodedInstruction) -> a
com.android.dx.merge.InstructionTransformer$MethodAndProtoVisitor -> p.d$e:
    com.android.dx.merge.InstructionTransformer this$0 -> a
    void visit(com.android.dx.io.instructions.DecodedInstruction[],com.android.dx.io.instructions.DecodedInstruction) -> a
com.android.dx.merge.InstructionTransformer$MethodVisitor -> p.d$f:
    com.android.dx.merge.InstructionTransformer this$0 -> a
    void visit(com.android.dx.io.instructions.DecodedInstruction[],com.android.dx.io.instructions.DecodedInstruction) -> a
com.android.dx.merge.InstructionTransformer$StringVisitor -> p.d$g:
    com.android.dx.merge.InstructionTransformer this$0 -> a
    void visit(com.android.dx.io.instructions.DecodedInstruction[],com.android.dx.io.instructions.DecodedInstruction) -> a
com.android.dx.merge.InstructionTransformer$TypeVisitor -> p.d$h:
    com.android.dx.merge.InstructionTransformer this$0 -> a
    void visit(com.android.dx.io.instructions.DecodedInstruction[],com.android.dx.io.instructions.DecodedInstruction) -> a
com.android.dx.merge.SortableType -> p.e:
    com.android.dex.ClassDef classDef -> c
    int depth -> d
    java.util.Comparator NULLS_LAST_ORDER -> e
    com.android.dx.merge.IndexMap indexMap -> b
    com.android.dex.Dex dex -> a
    int access$000(com.android.dx.merge.SortableType) -> a
    com.android.dex.ClassDef getClassDef() -> b
    com.android.dex.Dex getDex() -> c
    com.android.dx.merge.IndexMap getIndexMap() -> d
    int getTypeIndex() -> e
    boolean isDepthAssigned() -> f
    boolean tryAssignDepth(com.android.dx.merge.SortableType[]) -> g
com.android.dx.merge.SortableType$1 -> p.e$a:
    int compare(com.android.dx.merge.SortableType,com.android.dx.merge.SortableType) -> a
com.android.dx.rop.annotation.Annotation -> q.a:
    java.util.TreeMap elements -> d
    com.android.dx.rop.annotation.AnnotationVisibility visibility -> c
    com.android.dx.rop.cst.CstType type -> b
    java.lang.String toHuman() -> i
    void add(com.android.dx.rop.annotation.NameValuePair) -> r
    int compareTo(com.android.dx.rop.annotation.Annotation) -> s
    java.util.Collection getNameValuePairs() -> t
    com.android.dx.rop.cst.CstType getType() -> u
    com.android.dx.rop.annotation.AnnotationVisibility getVisibility() -> v
    void put(com.android.dx.rop.annotation.NameValuePair) -> w
com.android.dx.rop.annotation.AnnotationVisibility -> q.b:
    java.lang.String human -> a
    com.android.dx.rop.annotation.AnnotationVisibility BUILD -> c
    com.android.dx.rop.annotation.AnnotationVisibility RUNTIME -> b
    com.android.dx.rop.annotation.AnnotationVisibility EMBEDDED -> e
    com.android.dx.rop.annotation.AnnotationVisibility SYSTEM -> d
    com.android.dx.rop.annotation.AnnotationVisibility[] $VALUES -> f
    java.lang.String toHuman() -> i
com.android.dx.rop.annotation.Annotations -> q.c:
    java.util.TreeMap annotations -> b
    com.android.dx.rop.annotation.Annotations EMPTY -> c
    void add(com.android.dx.rop.annotation.Annotation) -> r
    void addAll(com.android.dx.rop.annotation.Annotations) -> s
    com.android.dx.rop.annotation.Annotations combine(com.android.dx.rop.annotation.Annotations,com.android.dx.rop.annotation.Annotation) -> t
    com.android.dx.rop.annotation.Annotations combine(com.android.dx.rop.annotation.Annotations,com.android.dx.rop.annotation.Annotations) -> u
    int compareTo(com.android.dx.rop.annotation.Annotations) -> v
    java.util.Collection getAnnotations() -> w
com.android.dx.rop.annotation.AnnotationsList -> q.d:
    com.android.dx.rop.annotation.AnnotationsList EMPTY -> c
    com.android.dx.rop.annotation.Annotations get(int) -> A
    void set(int,com.android.dx.rop.annotation.Annotations) -> B
    com.android.dx.rop.annotation.AnnotationsList combine(com.android.dx.rop.annotation.AnnotationsList,com.android.dx.rop.annotation.AnnotationsList) -> z
com.android.dx.rop.annotation.NameValuePair -> q.e:
    com.android.dx.rop.cst.Constant value -> b
    com.android.dx.rop.cst.CstString name -> a
    int compareTo(com.android.dx.rop.annotation.NameValuePair) -> a
    com.android.dx.rop.cst.CstString getName() -> b
    com.android.dx.rop.cst.Constant getValue() -> c
com.android.dx.rop.code.AccessFlags -> r.a:
    java.lang.String classString(int) -> a
    java.lang.String fieldString(int) -> b
    java.lang.String humanHelper(int,int,int) -> c
    java.lang.String innerClassString(int) -> d
    boolean isAbstract(int) -> e
    boolean isAnnotation(int) -> f
    boolean isNative(int) -> g
    boolean isPrivate(int) -> h
    boolean isStatic(int) -> i
    boolean isSynchronized(int) -> j
    java.lang.String methodString(int) -> k
com.android.dx.rop.code.BasicBlock -> r.b:
    com.android.dx.rop.code.InsnList insns -> b
    com.android.dx.util.IntList successors -> c
    int primarySuccessor -> d
    int label -> a
    int getLabel() -> a
    boolean canThrow() -> b
    com.android.dx.rop.code.Insn getFirstInsn() -> c
    com.android.dx.rop.code.InsnList getInsns() -> d
    com.android.dx.rop.code.Insn getLastInsn() -> e
    int getPrimarySuccessor() -> f
    int getSecondarySuccessor() -> g
    com.android.dx.util.IntList getSuccessors() -> h
    boolean hasExceptionHandlers() -> i
com.android.dx.rop.code.BasicBlock$Visitor -> r.b$a:
    void visitBlock(com.android.dx.rop.code.BasicBlock) -> a
com.android.dx.rop.code.BasicBlockList -> r.c:
    int regCount -> d
    void forEachInsn(com.android.dx.rop.code.Insn$Visitor) -> F
    com.android.dx.rop.code.BasicBlock get(int) -> G
    int getEffectiveInstructionCount() -> H
    int getInstructionCount() -> I
    com.android.dx.rop.code.BasicBlockList getMutableCopy() -> J
    int getRegCount() -> K
    com.android.dx.rop.code.BasicBlock labelToBlock(int) -> L
    com.android.dx.rop.code.BasicBlock preferredSuccessorOf(com.android.dx.rop.code.BasicBlock) -> M
    void set(int,com.android.dx.rop.code.BasicBlock) -> N
com.android.dx.rop.code.BasicBlockList$RegCountVisitor -> r.c$a:
    int regCount -> a
    void visitThrowingCstInsn(com.android.dx.rop.code.ThrowingCstInsn) -> a
    void visitInvokePolymorphicInsn(com.android.dx.rop.code.InvokePolymorphicInsn) -> b
    void visitSwitchInsn(com.android.dx.rop.code.SwitchInsn) -> c
    void visitPlainInsn(com.android.dx.rop.code.PlainInsn) -> d
    void visitFillArrayDataInsn(com.android.dx.rop.code.FillArrayDataInsn) -> e
    void visitPlainCstInsn(com.android.dx.rop.code.PlainCstInsn) -> f
    void visitThrowingInsn(com.android.dx.rop.code.ThrowingInsn) -> g
    int getRegCount() -> h
    void processReg(com.android.dx.rop.code.RegisterSpec) -> i
    void visit(com.android.dx.rop.code.Insn) -> j
com.android.dx.rop.code.CstInsn -> r.d:
    com.android.dx.rop.cst.Constant cst -> e
    boolean contentEquals(com.android.dx.rop.code.Insn) -> c
    java.lang.String getInlineString() -> f
    com.android.dx.rop.cst.Constant getConstant() -> w
com.android.dx.rop.code.DexTranslationAdvice -> r.e:
    com.android.dx.rop.code.DexTranslationAdvice NO_SOURCES_IN_ORDER -> c
    boolean disableSourcesInOrder -> a
    com.android.dx.rop.code.DexTranslationAdvice THE_ONE -> b
    boolean hasConstantOperation(com.android.dx.rop.code.Rop,com.android.dx.rop.code.RegisterSpec,com.android.dx.rop.code.RegisterSpec) -> a
    boolean requiresSourcesInOrder(com.android.dx.rop.code.Rop,com.android.dx.rop.code.RegisterSpecList) -> b
    int getMaxOptimalRegisterCount() -> c
    int totalRopWidth(com.android.dx.rop.code.RegisterSpecList) -> d
com.android.dx.rop.code.Exceptions -> r.f:
    com.android.dx.rop.type.Type TYPE_ArithmeticException -> a
    com.android.dx.rop.type.Type TYPE_ArrayStoreException -> c
    com.android.dx.rop.type.Type TYPE_ArrayIndexOutOfBoundsException -> b
    com.android.dx.rop.type.Type TYPE_Error -> e
    com.android.dx.rop.type.Type TYPE_ClassCastException -> d
    com.android.dx.rop.type.StdTypeList LIST_Error_ArithmeticException -> j
    com.android.dx.rop.type.StdTypeList LIST_Error -> i
    com.android.dx.rop.type.StdTypeList LIST_Error_NegativeArraySizeException -> l
    com.android.dx.rop.type.StdTypeList LIST_Error_ClassCastException -> k
    com.android.dx.rop.type.StdTypeList LIST_Error_Null_ArrayIndexOutOfBounds -> n
    com.android.dx.rop.type.StdTypeList LIST_Error_NullPointerException -> m
    com.android.dx.rop.type.StdTypeList LIST_Error_Null_IllegalMonitorStateException -> p
    com.android.dx.rop.type.StdTypeList LIST_Error_Null_ArrayIndex_ArrayStore -> o
    com.android.dx.rop.type.Type TYPE_NegativeArraySizeException -> g
    com.android.dx.rop.type.Type TYPE_IllegalMonitorStateException -> f
    com.android.dx.rop.type.Type TYPE_NullPointerException -> h
com.android.dx.rop.code.FillArrayDataInsn -> r.g:
    com.android.dx.rop.cst.Constant arrayType -> f
    java.util.ArrayList initValues -> e
    void accept(com.android.dx.rop.code.Insn$Visitor) -> a
    com.android.dx.rop.type.TypeList getCatches() -> e
    com.android.dx.rop.code.Insn withAddedCatch(com.android.dx.rop.type.Type) -> t
    com.android.dx.rop.code.Insn withNewRegisters(com.android.dx.rop.code.RegisterSpec,com.android.dx.rop.code.RegisterSpecList) -> u
    com.android.dx.rop.cst.Constant getConstant() -> w
    java.util.ArrayList getInitValues() -> x
com.android.dx.rop.code.Insn -> r.h:
    com.android.dx.rop.code.RegisterSpec result -> c
    com.android.dx.rop.code.SourcePosition position -> b
    com.android.dx.rop.code.Rop opcode -> a
    com.android.dx.rop.code.RegisterSpecList sources -> d
    void accept(com.android.dx.rop.code.Insn$Visitor) -> a
    boolean canThrow() -> b
    boolean contentEquals(com.android.dx.rop.code.Insn) -> c
    boolean equalsHandleNulls(java.lang.Object,java.lang.Object) -> d
    com.android.dx.rop.type.TypeList getCatches() -> e
    java.lang.String getInlineString() -> f
    java.lang.String toHuman() -> i
    com.android.dx.rop.code.RegisterSpec getLocalAssignment() -> k
    com.android.dx.rop.code.Rop getOpcode() -> n
    com.android.dx.rop.code.SourcePosition getPosition() -> o
    com.android.dx.rop.code.RegisterSpec getResult() -> p
    com.android.dx.rop.code.RegisterSpecList getSources() -> q
    java.lang.String toHumanWithInline(java.lang.String) -> r
    java.lang.String toStringWithInline(java.lang.String) -> s
    com.android.dx.rop.code.Insn withAddedCatch(com.android.dx.rop.type.Type) -> t
    com.android.dx.rop.code.Insn withNewRegisters(com.android.dx.rop.code.RegisterSpec,com.android.dx.rop.code.RegisterSpecList) -> u
    com.android.dx.rop.code.Insn withSourceLiteral() -> v
com.android.dx.rop.code.Insn$BaseVisitor -> r.h$a:
    void visitThrowingCstInsn(com.android.dx.rop.code.ThrowingCstInsn) -> a
    void visitInvokePolymorphicInsn(com.android.dx.rop.code.InvokePolymorphicInsn) -> b
    void visitSwitchInsn(com.android.dx.rop.code.SwitchInsn) -> c
    void visitPlainInsn(com.android.dx.rop.code.PlainInsn) -> d
    void visitFillArrayDataInsn(com.android.dx.rop.code.FillArrayDataInsn) -> e
    void visitThrowingInsn(com.android.dx.rop.code.ThrowingInsn) -> g
com.android.dx.rop.code.Insn$Visitor -> r.h$b:
    void visitThrowingCstInsn(com.android.dx.rop.code.ThrowingCstInsn) -> a
    void visitInvokePolymorphicInsn(com.android.dx.rop.code.InvokePolymorphicInsn) -> b
    void visitSwitchInsn(com.android.dx.rop.code.SwitchInsn) -> c
    void visitPlainInsn(com.android.dx.rop.code.PlainInsn) -> d
    void visitFillArrayDataInsn(com.android.dx.rop.code.FillArrayDataInsn) -> e
    void visitPlainCstInsn(com.android.dx.rop.code.PlainCstInsn) -> f
    void visitThrowingInsn(com.android.dx.rop.code.ThrowingInsn) -> g
com.android.dx.rop.code.InsnList -> r.i:
    void forEach(com.android.dx.rop.code.Insn$Visitor) -> A
    com.android.dx.rop.code.Insn get(int) -> B
    com.android.dx.rop.code.Insn getLast() -> C
    void set(int,com.android.dx.rop.code.Insn) -> D
    boolean contentEquals(com.android.dx.rop.code.InsnList) -> z
com.android.dx.rop.code.InvokePolymorphicInsn -> r.j:
    com.android.dx.rop.cst.CstMethodRef callSiteMethod -> f
    com.android.dx.rop.cst.CstString VARHANDLE_COMPARE_AND_SET_DESCRIPTOR -> k
    com.android.dx.rop.type.TypeList catches -> e
    com.android.dx.rop.cst.CstMethodRef polymorphicMethod -> g
    com.android.dx.rop.cst.CstProtoRef callSiteProto -> h
    com.android.dx.rop.cst.CstString DEFAULT_DESCRIPTOR -> i
    com.android.dx.rop.cst.CstString VARHANDLE_SET_DESCRIPTOR -> j
    com.android.dx.rop.cst.CstMethodRef makePolymorphicMethod(com.android.dx.rop.cst.CstMethodRef) -> A
    void accept(com.android.dx.rop.code.Insn$Visitor) -> a
    com.android.dx.rop.type.TypeList getCatches() -> e
    java.lang.String getInlineString() -> f
    com.android.dx.rop.code.Insn withAddedCatch(com.android.dx.rop.type.Type) -> t
    com.android.dx.rop.code.Insn withNewRegisters(com.android.dx.rop.code.RegisterSpec,com.android.dx.rop.code.RegisterSpecList) -> u
    com.android.dx.rop.cst.CstMethodRef getCallSiteMethod() -> w
    com.android.dx.rop.cst.CstProtoRef getCallSiteProto() -> x
    com.android.dx.rop.cst.CstMethodRef getPolymorphicMethod() -> y
    com.android.dx.rop.cst.CstProtoRef makeCallSiteProto(com.android.dx.rop.cst.CstMethodRef) -> z
com.android.dx.rop.code.LocalItem -> r.k:
    com.android.dx.rop.cst.CstString name -> a
    com.android.dx.rop.cst.CstString signature -> b
    int compareHandlesNulls(com.android.dx.rop.cst.CstString,com.android.dx.rop.cst.CstString) -> a
    int compareTo(com.android.dx.rop.code.LocalItem) -> b
    com.android.dx.rop.cst.CstString getName() -> c
    com.android.dx.rop.cst.CstString getSignature() -> d
    com.android.dx.rop.code.LocalItem make(com.android.dx.rop.cst.CstString,com.android.dx.rop.cst.CstString) -> e
com.android.dx.rop.code.LocalVariableExtractor -> r.l:
    int[] workSet -> d
    com.android.dx.rop.code.RopMethod method -> a
    com.android.dx.rop.code.LocalVariableInfo resultInfo -> c
    com.android.dx.rop.code.BasicBlockList blocks -> b
    com.android.dx.rop.code.LocalVariableInfo doit() -> a
    com.android.dx.rop.code.LocalVariableInfo extract(com.android.dx.rop.code.RopMethod) -> b
    void processBlock(int) -> c
com.android.dx.rop.code.LocalVariableInfo -> r.m:
    com.android.dx.rop.code.RegisterSpecSet emptySet -> c
    int regCount -> b
    java.util.HashMap insnAssignments -> e
    com.android.dx.rop.code.RegisterSpecSet[] blockStarts -> d
    void addAssignment(com.android.dx.rop.code.Insn,com.android.dx.rop.code.RegisterSpec) -> r
    com.android.dx.rop.code.RegisterSpec getAssignment(com.android.dx.rop.code.Insn) -> s
    int getAssignmentCount() -> t
    com.android.dx.rop.code.RegisterSpecSet getStarts(int) -> u
    com.android.dx.rop.code.RegisterSpecSet getStarts(com.android.dx.rop.code.BasicBlock) -> v
    com.android.dx.rop.code.RegisterSpecSet getStarts0(int) -> w
    boolean mergeStarts(int,com.android.dx.rop.code.RegisterSpecSet) -> x
    com.android.dx.rop.code.RegisterSpecSet mutableCopyOfStarts(int) -> y
    void setStarts(int,com.android.dx.rop.code.RegisterSpecSet) -> z
com.android.dx.rop.code.PlainCstInsn -> r.n:
    void accept(com.android.dx.rop.code.Insn$Visitor) -> a
    com.android.dx.rop.type.TypeList getCatches() -> e
    com.android.dx.rop.code.Insn withAddedCatch(com.android.dx.rop.type.Type) -> t
    com.android.dx.rop.code.Insn withNewRegisters(com.android.dx.rop.code.RegisterSpec,com.android.dx.rop.code.RegisterSpecList) -> u
com.android.dx.rop.code.PlainInsn -> r.o:
    void accept(com.android.dx.rop.code.Insn$Visitor) -> a
    com.android.dx.rop.type.TypeList getCatches() -> e
    com.android.dx.rop.code.Insn withAddedCatch(com.android.dx.rop.type.Type) -> t
    com.android.dx.rop.code.Insn withNewRegisters(com.android.dx.rop.code.RegisterSpec,com.android.dx.rop.code.RegisterSpecList) -> u
    com.android.dx.rop.code.Insn withSourceLiteral() -> v
com.android.dx.rop.code.RegOps -> r.p:
    int flippedIfOpcode(int) -> a
    java.lang.String opName(int) -> b
com.android.dx.rop.code.RegisterSpec -> r.q:
    java.util.concurrent.ConcurrentHashMap theInterns -> d
    com.android.dx.rop.code.LocalItem local -> c
    java.lang.ThreadLocal theInterningItem -> e
    com.android.dx.rop.type.TypeBearer type -> b
    int reg -> a
    java.lang.String regString(int) -> A
    java.lang.String toString0(boolean) -> B
    com.android.dx.rop.code.RegisterSpec withLocalItem(com.android.dx.rop.code.LocalItem) -> C
    com.android.dx.rop.code.RegisterSpec withOffset(int) -> D
    com.android.dx.rop.code.RegisterSpec withReg(int) -> E
    com.android.dx.rop.code.RegisterSpec withSimpleType() -> F
    com.android.dx.rop.code.RegisterSpec withType(com.android.dx.rop.type.TypeBearer) -> G
    boolean access$500(com.android.dx.rop.code.RegisterSpec,int,com.android.dx.rop.type.TypeBearer,com.android.dx.rop.code.LocalItem) -> a
    int access$600(int,com.android.dx.rop.type.TypeBearer,com.android.dx.rop.code.LocalItem) -> b
    int compareTo(com.android.dx.rop.code.RegisterSpec) -> c
    boolean equals(int,com.android.dx.rop.type.TypeBearer,com.android.dx.rop.code.LocalItem) -> d
    boolean equalsUsingSimpleType(com.android.dx.rop.code.RegisterSpec) -> e
    int getCategory() -> f
    com.android.dx.rop.type.Type getType() -> g
    boolean isConstant() -> h
    java.lang.String toHuman() -> i
    int getBasicFrameType() -> j
    com.android.dx.rop.code.LocalItem getLocalItem() -> k
    int getBasicType() -> l
    com.android.dx.rop.type.TypeBearer getFrameType() -> m
    int getNextReg() -> n
    int getReg() -> o
    com.android.dx.rop.type.TypeBearer getTypeBearer() -> p
    int hashCodeOf(int,com.android.dx.rop.type.TypeBearer,com.android.dx.rop.code.LocalItem) -> q
    com.android.dx.rop.code.RegisterSpec intern(int,com.android.dx.rop.type.TypeBearer,com.android.dx.rop.code.LocalItem) -> r
    com.android.dx.rop.code.RegisterSpec intersect(com.android.dx.rop.code.RegisterSpec,boolean) -> s
    boolean isCategory2() -> t
    boolean isEvenRegister() -> u
    com.android.dx.rop.code.RegisterSpec make(int,com.android.dx.rop.type.TypeBearer) -> v
    com.android.dx.rop.code.RegisterSpec make(int,com.android.dx.rop.type.TypeBearer,com.android.dx.rop.code.LocalItem) -> w
    com.android.dx.rop.code.RegisterSpec makeLocalOptional(int,com.android.dx.rop.type.TypeBearer,com.android.dx.rop.code.LocalItem) -> x
    boolean matchesVariable(com.android.dx.rop.code.RegisterSpec) -> y
    java.lang.String regString() -> z
com.android.dx.rop.code.RegisterSpec$1 -> r.q$a:
    com.android.dx.rop.code.RegisterSpec$ForComparison initialValue() -> a
com.android.dx.rop.code.RegisterSpec$ForComparison -> r.q$b:
    com.android.dx.rop.code.LocalItem local -> c
    com.android.dx.rop.type.TypeBearer type -> b
    int reg -> a
    int access$100(com.android.dx.rop.code.RegisterSpec$ForComparison) -> a
    com.android.dx.rop.type.TypeBearer access$200(com.android.dx.rop.code.RegisterSpec$ForComparison) -> b
    com.android.dx.rop.code.LocalItem access$300(com.android.dx.rop.code.RegisterSpec$ForComparison) -> c
    void set(int,com.android.dx.rop.type.TypeBearer,com.android.dx.rop.code.LocalItem) -> d
    com.android.dx.rop.code.RegisterSpec toRegisterSpec() -> e
com.android.dx.rop.code.RegisterSpecList -> r.r:
    com.android.dx.rop.code.RegisterSpecList EMPTY -> c
    void access$400(com.android.dx.rop.code.RegisterSpecList,int,java.lang.Object) -> A
    com.android.dx.rop.code.RegisterSpec get(int) -> B
    int getWordCount() -> C
    int indexOfRegister(int) -> D
    com.android.dx.rop.code.RegisterSpecList make(com.android.dx.rop.code.RegisterSpec) -> E
    com.android.dx.rop.code.RegisterSpecList make(com.android.dx.rop.code.RegisterSpec,com.android.dx.rop.code.RegisterSpec) -> F
    void set(int,com.android.dx.rop.code.RegisterSpec) -> G
    com.android.dx.rop.code.RegisterSpecList subset(java.util.BitSet) -> H
    com.android.dx.rop.code.RegisterSpecList withExpandedRegisters(int,boolean,java.util.BitSet) -> I
    com.android.dx.rop.code.RegisterSpecList withFirst(com.android.dx.rop.code.RegisterSpec) -> J
    com.android.dx.rop.code.RegisterSpecList withOffset(int) -> K
    com.android.dx.rop.code.RegisterSpecList withoutFirst() -> L
    com.android.dx.rop.code.RegisterSpecList withoutLast() -> M
    com.android.dx.rop.type.TypeList withAddedType(com.android.dx.rop.type.Type) -> e
    java.lang.Object access$300(com.android.dx.rop.code.RegisterSpecList,int) -> z
com.android.dx.rop.code.RegisterSpecList$1 -> r.r$a:
com.android.dx.rop.code.RegisterSpecList$Expander -> r.r$b:
    boolean duplicateFirst -> e
    java.util.BitSet compatRegs -> a
    int base -> c
    com.android.dx.rop.code.RegisterSpecList result -> d
    com.android.dx.rop.code.RegisterSpecList regSpecList -> b
    void access$100(com.android.dx.rop.code.RegisterSpecList$Expander,int) -> a
    com.android.dx.rop.code.RegisterSpecList access$200(com.android.dx.rop.code.RegisterSpecList$Expander) -> b
    void expandRegister(int) -> c
    void expandRegister(int,com.android.dx.rop.code.RegisterSpec) -> d
    com.android.dx.rop.code.RegisterSpecList getResult() -> e
com.android.dx.rop.code.RegisterSpecSet -> r.s:
    com.android.dx.rop.code.RegisterSpec[] specs -> b
    com.android.dx.rop.code.RegisterSpecSet EMPTY -> d
    int size -> c
    void remove(com.android.dx.rop.code.RegisterSpec) -> A
    com.android.dx.rop.code.RegisterSpecSet withOffset(int) -> B
    com.android.dx.rop.code.RegisterSpec findMatchingLocal(com.android.dx.rop.code.RegisterSpec) -> r
    com.android.dx.rop.code.RegisterSpec get(int) -> s
    com.android.dx.rop.code.RegisterSpec get(com.android.dx.rop.code.RegisterSpec) -> t
    int getMaxSize() -> u
    void intersect(com.android.dx.rop.code.RegisterSpecSet,boolean) -> v
    com.android.dx.rop.code.RegisterSpec localItemToSpec(com.android.dx.rop.code.LocalItem) -> w
    com.android.dx.rop.code.RegisterSpecSet mutableCopy() -> x
    void put(com.android.dx.rop.code.RegisterSpec) -> y
    void putAll(com.android.dx.rop.code.RegisterSpecSet) -> z
com.android.dx.rop.code.Rop -> r.t:
    com.android.dx.rop.type.TypeList exceptions -> d
    java.lang.String nickname -> g
    com.android.dx.rop.type.Type result -> b
    boolean isCallLike -> f
    int branchingness -> e
    int opcode -> a
    com.android.dx.rop.type.TypeList sources -> c
    boolean canThrow() -> a
    int getBranchingness() -> b
    java.lang.String getNickname() -> c
    int getOpcode() -> d
    com.android.dx.rop.type.Type getResult() -> e
    com.android.dx.rop.type.TypeList getSources() -> f
    boolean isCallLike() -> g
    boolean isCommutative() -> h
com.android.dx.rop.code.RopMethod -> r.u:
    com.android.dx.util.IntList[] predecessors -> c
    com.android.dx.rop.code.BasicBlockList blocks -> a
    int firstLabel -> b
    com.android.dx.util.IntList exitPredecessors -> d
    void calcPredecessors() -> a
    com.android.dx.rop.code.BasicBlockList getBlocks() -> b
    int getFirstLabel() -> c
    com.android.dx.util.IntList labelToPredecessors(int) -> d
com.android.dx.rop.code.Rops -> r.v:
    com.android.dx.rop.code.Rop ADD_CONST_DOUBLE -> z0
    com.android.dx.rop.code.Rop NEW_ARRAY_INT -> Z1
    com.android.dx.rop.code.Rop SUB_FLOAT -> Q
    com.android.dx.rop.code.Rop PUT_FIELD_INT -> B2
    com.android.dx.rop.code.Rop CONST_OBJECT_NOTHROW -> r
    com.android.dx.rop.code.Rop SUB_CONST_INT -> A0
    com.android.dx.rop.code.Rop USHR_CONST_LONG -> b1
    com.android.dx.rop.code.Rop PUT_FIELD_SHORT -> J2
    com.android.dx.rop.code.Rop DIV_CONST_INT -> I0
    com.android.dx.rop.code.Rop CONV_D2I -> j1
    com.android.dx.rop.code.Rop IF_NEZ_OBJECT -> A
    com.android.dx.rop.code.Rop PUT_STATIC_CHAR -> R2
    com.android.dx.rop.code.Rop MOVE_INT -> b
    com.android.dx.rop.code.Rop AND_CONST_INT -> Q0
    com.android.dx.rop.code.Rop CONV_L2D -> r1
    com.android.dx.rop.code.Rop SHR_CONST_LONG -> Z0
    com.android.dx.rop.code.Rop CONST_OBJECT -> q
    com.android.dx.rop.code.Rop SUB_LONG -> P
    com.android.dx.rop.code.Rop REM_LONG -> b0
    com.android.dx.rop.code.Rop RETURN_OBJECT -> B1
    com.android.dx.rop.code.Rop NEW_ARRAY_DOUBLE -> c2
    com.android.dx.rop.code.Rop AND_LONG -> j0
    com.android.dx.rop.code.Rop AGET_DOUBLE -> J1
    com.android.dx.rop.code.Rop GET_FIELD_LONG -> k2
    com.android.dx.rop.code.Rop NOP -> a
    com.android.dx.rop.code.Rop SHR_LONG -> r0
    com.android.dx.rop.code.Rop APUT_FLOAT -> R1
    com.android.dx.rop.code.Rop GET_STATIC_INT -> s2
    com.android.dx.rop.code.Rop CONST_DOUBLE -> p
    com.android.dx.rop.code.Rop SUB_INT -> O
    com.android.dx.rop.code.Rop SUB_CONST_LONG -> B0
    com.android.dx.rop.code.Rop CMPL_LONG -> c1
    com.android.dx.rop.code.Rop PUT_FIELD_LONG -> C2
    com.android.dx.rop.code.Rop DIV_CONST_LONG -> J0
    com.android.dx.rop.code.Rop CONV_I2L -> k1
    com.android.dx.rop.code.Rop PUT_STATIC_INT -> K2
    com.android.dx.rop.code.Rop AND_CONST_LONG -> R0
    com.android.dx.rop.code.Rop CONV_F2D -> s1
    com.android.dx.rop.code.Rop PUT_STATIC_SHORT -> S2
    com.android.dx.rop.code.Rop REM_FLOAT -> c0
    com.android.dx.rop.code.Rop CONST_FLOAT -> o
    com.android.dx.rop.code.Rop ARRAY_LENGTH -> C1
    com.android.dx.rop.code.Rop NEW_ARRAY_BOOLEAN -> d2
    com.android.dx.rop.code.Rop ADD_DOUBLE -> N
    com.android.dx.rop.code.Rop OR_INT -> k0
    com.android.dx.rop.code.Rop AGET_OBJECT -> K1
    com.android.dx.rop.code.Rop GET_FIELD_FLOAT -> l2
    com.android.dx.rop.code.Rop USHR_INT -> s0
    com.android.dx.rop.code.Rop APUT_DOUBLE -> S1
    com.android.dx.rop.code.Rop GET_STATIC_LONG -> t2
    com.android.dx.rop.code.Rop ADD_FLOAT -> M
    com.android.dx.rop.code.Rop SUB_CONST_FLOAT -> C0
    com.android.dx.rop.code.Rop CMPL_FLOAT -> d1
    com.android.dx.rop.code.Rop PUT_FIELD_FLOAT -> D2
    com.android.dx.rop.code.Rop CONST_LONG -> n
    com.android.dx.rop.code.Rop DIV_CONST_FLOAT -> K0
    com.android.dx.rop.code.Rop CONV_F2L -> l1
    com.android.dx.rop.code.Rop PUT_STATIC_LONG -> L2
    com.android.dx.rop.code.Rop OR_CONST_INT -> S0
    com.android.dx.rop.code.Rop TO_BYTE -> t1
    com.android.dx.rop.code.Rop MARK_LOCAL_INT -> T2
    com.android.dx.rop.code.Rop CONST_INT -> m
    com.android.dx.rop.code.Rop REM_DOUBLE -> d0
    com.android.dx.rop.code.Rop ADD_LONG -> L
    com.android.dx.rop.code.Rop THROW -> D1
    com.android.dx.rop.code.Rop NEW_ARRAY_BYTE -> e2
    com.android.dx.rop.code.Rop OR_LONG -> l0
    com.android.dx.rop.code.Rop AGET_BOOLEAN -> L1
    com.android.dx.rop.code.Rop GET_FIELD_DOUBLE -> m2
    com.android.dx.rop.code.Rop USHR_LONG -> t0
    com.android.dx.rop.code.Rop APUT_OBJECT -> T1
    com.android.dx.rop.code.Rop GET_STATIC_FLOAT -> u2
    com.android.dx.rop.code.Rop NOT_INT -> u0
    com.android.dx.rop.code.Rop SUB_CONST_DOUBLE -> D0
    com.android.dx.rop.code.Rop CMPL_DOUBLE -> e1
    com.android.dx.rop.code.Rop MOVE_PARAM_OBJECT -> l
    com.android.dx.rop.code.Rop PUT_FIELD_DOUBLE -> E2
    com.android.dx.rop.code.Rop ADD_INT -> K
    com.android.dx.rop.code.Rop DIV_CONST_DOUBLE -> L0
    com.android.dx.rop.code.Rop CONV_D2L -> m1
    com.android.dx.rop.code.Rop PUT_STATIC_FLOAT -> M2
    com.android.dx.rop.code.Rop OR_CONST_LONG -> T0
    com.android.dx.rop.code.Rop TO_CHAR -> u1
    com.android.dx.rop.code.Rop MARK_LOCAL_LONG -> U2
    com.android.dx.rop.code.Rop DIV_DOUBLE -> Z
    com.android.dx.rop.code.Rop XOR_CONST_INT -> U0
    com.android.dx.rop.code.Rop TO_SHORT -> v1
    com.android.dx.rop.code.Rop MONITOR_ENTER -> E1
    com.android.dx.rop.code.Rop NEW_ARRAY_CHAR -> f2
    com.android.dx.rop.code.Rop MOVE_PARAM_DOUBLE -> k
    com.android.dx.rop.code.Rop SWITCH -> J
    com.android.dx.rop.code.Rop NEG_INT -> e0
    com.android.dx.rop.code.Rop AGET_BYTE -> M1
    com.android.dx.rop.code.Rop GET_FIELD_OBJECT -> n2
    com.android.dx.rop.code.Rop XOR_INT -> m0
    com.android.dx.rop.code.Rop APUT_BOOLEAN -> U1
    com.android.dx.rop.code.Rop GET_STATIC_DOUBLE -> v2
    com.android.dx.rop.code.Rop DIV_FLOAT -> Y
    com.android.dx.rop.code.Rop NOT_LONG -> v0
    com.android.dx.rop.code.Rop IF_EQZ_OBJECT -> z
    com.android.dx.rop.code.Rop APUT_BYTE -> V1
    com.android.dx.rop.code.Rop GET_STATIC_OBJECT -> w2
    com.android.dx.rop.code.Rop PUT_FIELD_OBJECT -> F2
    com.android.dx.rop.code.Rop IF_NE_OBJECT -> I
    com.android.dx.rop.code.Rop MOVE_PARAM_FLOAT -> j
    com.android.dx.rop.code.Rop MUL_CONST_INT -> E0
    com.android.dx.rop.code.Rop CMPG_FLOAT -> f1
    com.android.dx.rop.code.Rop PUT_STATIC_DOUBLE -> N2
    com.android.dx.rop.code.Rop REM_CONST_INT -> M0
    com.android.dx.rop.code.Rop CONV_I2F -> n1
    com.android.dx.rop.code.Rop MARK_LOCAL_FLOAT -> V2
    com.android.dx.rop.code.Rop IF_GTZ_INT -> y
    com.android.dx.rop.code.Rop DIV_LONG -> X
    com.android.dx.rop.code.Rop XOR_CONST_LONG -> V0
    com.android.dx.rop.code.Rop RETURN_VOID -> w1
    com.android.dx.rop.code.Rop MARK_LOCAL_DOUBLE -> W2
    com.android.dx.rop.code.Rop MOVE_PARAM_LONG -> i
    com.android.dx.rop.code.Rop IF_EQ_OBJECT -> H
    com.android.dx.rop.code.Rop NEG_LONG -> f0
    com.android.dx.rop.code.Rop MONITOR_EXIT -> F1
    com.android.dx.rop.code.Rop NEW_ARRAY_SHORT -> g2
    com.android.dx.rop.code.Rop XOR_LONG -> n0
    com.android.dx.rop.code.Rop AGET_CHAR -> N1
    com.android.dx.rop.code.Rop GET_FIELD_BOOLEAN -> o2
    com.android.dx.rop.code.Rop IF_LEZ_INT -> x
    com.android.dx.rop.code.Rop ADD_CONST_INT -> w0
    com.android.dx.rop.code.Rop APUT_CHAR -> W1
    com.android.dx.rop.code.Rop GET_STATIC_BOOLEAN -> x2
    com.android.dx.rop.code.Rop DIV_INT -> W
    com.android.dx.rop.code.Rop MOVE_PARAM_INT -> h
    com.android.dx.rop.code.Rop MUL_CONST_LONG -> F0
    com.android.dx.rop.code.Rop CMPG_DOUBLE -> g1
    com.android.dx.rop.code.Rop PUT_FIELD_BOOLEAN -> G2
    com.android.dx.rop.code.Rop IF_GT_INT -> G
    com.android.dx.rop.code.Rop REM_CONST_LONG -> N0
    com.android.dx.rop.code.Rop CONV_L2F -> o1
    com.android.dx.rop.code.Rop PUT_STATIC_OBJECT -> O2
    com.android.dx.rop.code.Rop SHL_CONST_INT -> W0
    com.android.dx.rop.code.Rop RETURN_INT -> x1
    com.android.dx.rop.code.Rop MARK_LOCAL_OBJECT -> X2
    com.android.dx.rop.code.Rop IF_GEZ_INT -> w
    com.android.dx.rop.code.Rop MUL_DOUBLE -> V
    com.android.dx.rop.code.Rop NEG_FLOAT -> g0
    com.android.dx.rop.code.Rop AGET_INT -> G1
    com.android.dx.rop.code.Rop CHECK_CAST -> h2
    com.android.dx.rop.code.Rop MOVE_RETURN_ADDRESS -> g
    com.android.dx.rop.code.Rop IF_LE_INT -> F
    com.android.dx.rop.code.Rop SHL_INT -> o0
    com.android.dx.rop.code.Rop AGET_SHORT -> O1
    com.android.dx.rop.code.Rop GET_FIELD_BYTE -> p2
    com.android.dx.rop.code.Rop ADD_CONST_LONG -> x0
    com.android.dx.rop.code.Rop APUT_SHORT -> X1
    com.android.dx.rop.code.Rop GET_STATIC_BYTE -> y2
    com.android.dx.rop.code.Rop MUL_FLOAT -> U
    com.android.dx.rop.code.Rop IF_LTZ_INT -> v
    com.android.dx.rop.code.Rop MUL_CONST_FLOAT -> G0
    com.android.dx.rop.code.Rop CONV_L2I -> h1
    com.android.dx.rop.code.Rop PUT_FIELD_BYTE -> H2
    com.android.dx.rop.code.Rop IF_GE_INT -> E
    com.android.dx.rop.code.Rop MOVE_OBJECT -> f
    com.android.dx.rop.code.Rop REM_CONST_FLOAT -> O0
    com.android.dx.rop.code.Rop CONV_D2F -> p1
    com.android.dx.rop.code.Rop PUT_STATIC_BOOLEAN -> P2
    com.android.dx.rop.code.Rop SHL_CONST_LONG -> X0
    com.android.dx.rop.code.Rop RETURN_LONG -> y1
    com.android.dx.rop.code.Rop FILL_ARRAY_DATA -> Y2
    com.android.dx.rop.code.Rop IF_NEZ_INT -> u
    com.android.dx.rop.code.Rop MUL_LONG -> T
    com.android.dx.rop.code.Rop NEW_ARRAY_LONG -> a2
    com.android.dx.rop.code.Rop NEG_DOUBLE -> h0
    com.android.dx.rop.code.Rop AGET_LONG -> H1
    com.android.dx.rop.code.Rop INSTANCE_OF -> i2
    com.android.dx.rop.code.Rop MOVE_DOUBLE -> e
    com.android.dx.rop.code.Rop IF_LT_INT -> D
    com.android.dx.rop.code.Rop SHL_LONG -> p0
    com.android.dx.rop.code.Rop APUT_INT -> P1
    com.android.dx.rop.code.Rop GET_FIELD_CHAR -> q2
    com.android.dx.rop.code.Rop NEW_INSTANCE -> Y1
    com.android.dx.rop.code.Rop IF_EQZ_INT -> t
    com.android.dx.rop.code.Rop ADD_CONST_FLOAT -> y0
    com.android.dx.rop.code.Rop GET_STATIC_CHAR -> z2
    com.android.dx.rop.code.Rop USHR_CONST_INT -> a1
    com.android.dx.rop.code.Rop GET_STATIC_SHORT -> A2
    com.android.dx.rop.code.Rop MUL_INT -> S
    com.android.dx.rop.code.Rop MUL_CONST_DOUBLE -> H0
    com.android.dx.rop.code.Rop CONV_F2I -> i1
    com.android.dx.rop.code.Rop PUT_FIELD_CHAR -> I2
    com.android.dx.rop.code.Rop MOVE_FLOAT -> d
    com.android.dx.rop.code.Rop REM_CONST_DOUBLE -> P0
    com.android.dx.rop.code.Rop CONV_I2D -> q1
    com.android.dx.rop.code.Rop PUT_STATIC_BYTE -> Q2
    com.android.dx.rop.code.Rop IF_NE_INT -> C
    com.android.dx.rop.code.Rop RETURN_FLOAT -> z1
    com.android.dx.rop.code.Rop SHR_CONST_INT -> Y0
    com.android.dx.rop.code.Rop RETURN_DOUBLE -> A1
    com.android.dx.rop.code.Rop NEW_ARRAY_FLOAT -> b2
    com.android.dx.rop.code.Rop GOTO -> s
    com.android.dx.rop.code.Rop SUB_DOUBLE -> R
    com.android.dx.rop.code.Rop REM_INT -> a0
    com.android.dx.rop.code.Rop AGET_FLOAT -> I1
    com.android.dx.rop.code.Rop GET_FIELD_INT -> j2
    com.android.dx.rop.code.Rop AND_INT -> i0
    com.android.dx.rop.code.Rop APUT_LONG -> Q1
    com.android.dx.rop.code.Rop GET_FIELD_SHORT -> r2
    com.android.dx.rop.code.Rop MOVE_LONG -> c
    com.android.dx.rop.code.Rop IF_EQ_INT -> B
    com.android.dx.rop.code.Rop SHR_INT -> q0
    com.android.dx.rop.code.Rop opMove(com.android.dx.rop.type.TypeBearer) -> A
    com.android.dx.rop.code.Rop opMoveException(com.android.dx.rop.type.TypeBearer) -> B
    com.android.dx.rop.code.Rop opMoveParam(com.android.dx.rop.type.TypeBearer) -> C
    com.android.dx.rop.code.Rop opMoveResult(com.android.dx.rop.type.TypeBearer) -> D
    com.android.dx.rop.code.Rop opMoveResultPseudo(com.android.dx.rop.type.TypeBearer) -> E
    com.android.dx.rop.code.Rop opMul(com.android.dx.rop.type.TypeList) -> F
    com.android.dx.rop.code.Rop opNeg(com.android.dx.rop.type.TypeBearer) -> G
    com.android.dx.rop.code.Rop opNewArray(com.android.dx.rop.type.TypeBearer) -> H
    com.android.dx.rop.code.Rop opNot(com.android.dx.rop.type.TypeBearer) -> I
    com.android.dx.rop.code.Rop opOr(com.android.dx.rop.type.TypeList) -> J
    com.android.dx.rop.code.Rop opPutField(com.android.dx.rop.type.TypeBearer) -> K
    com.android.dx.rop.code.Rop opPutStatic(com.android.dx.rop.type.TypeBearer) -> L
    com.android.dx.rop.code.Rop opRem(com.android.dx.rop.type.TypeList) -> M
    com.android.dx.rop.code.Rop opReturn(com.android.dx.rop.type.TypeBearer) -> N
    com.android.dx.rop.code.Rop opShl(com.android.dx.rop.type.TypeList) -> O
    com.android.dx.rop.code.Rop opShr(com.android.dx.rop.type.TypeList) -> P
    com.android.dx.rop.code.Rop opSub(com.android.dx.rop.type.TypeList) -> Q
    com.android.dx.rop.code.Rop opUshr(com.android.dx.rop.type.TypeList) -> R
    com.android.dx.rop.code.Rop opXor(com.android.dx.rop.type.TypeList) -> S
    com.android.dx.rop.code.Rop pickBinaryOp(com.android.dx.rop.type.TypeList,com.android.dx.rop.code.Rop,com.android.dx.rop.code.Rop,com.android.dx.rop.code.Rop,com.android.dx.rop.code.Rop,com.android.dx.rop.code.Rop,com.android.dx.rop.code.Rop,com.android.dx.rop.code.Rop,com.android.dx.rop.code.Rop) -> T
    com.android.dx.rop.code.Rop pickIf(com.android.dx.rop.type.TypeList,com.android.dx.rop.code.Rop,com.android.dx.rop.code.Rop,com.android.dx.rop.code.Rop,com.android.dx.rop.code.Rop) -> U
    com.android.dx.rop.code.Rop ropFor(int,com.android.dx.rop.type.TypeBearer,com.android.dx.rop.type.TypeList,com.android.dx.rop.cst.Constant) -> V
    com.android.dx.rop.code.Rop throwBadType(com.android.dx.rop.type.TypeBearer) -> W
    com.android.dx.rop.code.Rop throwBadTypes(com.android.dx.rop.type.TypeList) -> X
    com.android.dx.rop.code.Rop opAdd(com.android.dx.rop.type.TypeList) -> a
    com.android.dx.rop.code.Rop opAget(com.android.dx.rop.type.TypeBearer) -> b
    com.android.dx.rop.code.Rop opAnd(com.android.dx.rop.type.TypeList) -> c
    com.android.dx.rop.code.Rop opAput(com.android.dx.rop.type.TypeBearer) -> d
    com.android.dx.rop.code.Rop opCmpg(com.android.dx.rop.type.TypeBearer) -> e
    com.android.dx.rop.code.Rop opCmpl(com.android.dx.rop.type.TypeBearer) -> f
    com.android.dx.rop.code.Rop opConst(com.android.dx.rop.type.TypeBearer) -> g
    com.android.dx.rop.code.Rop opConv(com.android.dx.rop.type.TypeBearer,com.android.dx.rop.type.TypeBearer) -> h
    com.android.dx.rop.code.Rop opDiv(com.android.dx.rop.type.TypeList) -> i
    com.android.dx.rop.code.Rop opFilledNewArray(com.android.dx.rop.type.TypeBearer,int) -> j
    com.android.dx.rop.code.Rop opGetField(com.android.dx.rop.type.TypeBearer) -> k
    com.android.dx.rop.code.Rop opGetStatic(com.android.dx.rop.type.TypeBearer) -> l
    com.android.dx.rop.code.Rop opIfEq(com.android.dx.rop.type.TypeList) -> m
    com.android.dx.rop.code.Rop opIfGe(com.android.dx.rop.type.TypeList) -> n
    com.android.dx.rop.code.Rop opIfGt(com.android.dx.rop.type.TypeList) -> o
    com.android.dx.rop.code.Rop opIfLe(com.android.dx.rop.type.TypeList) -> p
    com.android.dx.rop.code.Rop opIfLt(com.android.dx.rop.type.TypeList) -> q
    com.android.dx.rop.code.Rop opIfNe(com.android.dx.rop.type.TypeList) -> r
    com.android.dx.rop.code.Rop opInvokeCustom(com.android.dx.rop.type.Prototype) -> s
    com.android.dx.rop.code.Rop opInvokeDirect(com.android.dx.rop.type.Prototype) -> t
    com.android.dx.rop.code.Rop opInvokeInterface(com.android.dx.rop.type.Prototype) -> u
    com.android.dx.rop.code.Rop opInvokePolymorphic(com.android.dx.rop.type.Prototype) -> v
    com.android.dx.rop.code.Rop opInvokeStatic(com.android.dx.rop.type.Prototype) -> w
    com.android.dx.rop.code.Rop opInvokeSuper(com.android.dx.rop.type.Prototype) -> x
    com.android.dx.rop.code.Rop opInvokeVirtual(com.android.dx.rop.type.Prototype) -> y
    com.android.dx.rop.code.Rop opMarkLocal(com.android.dx.rop.type.TypeBearer) -> z
com.android.dx.rop.code.SourcePosition -> r.w:
    com.android.dx.rop.code.SourcePosition NO_INFO -> d
    com.android.dx.rop.cst.CstString sourceFile -> a
    int address -> b
    int line -> c
    int getLine() -> a
    boolean sameLine(com.android.dx.rop.code.SourcePosition) -> b
    boolean sameLineAndFile(com.android.dx.rop.code.SourcePosition) -> c
com.android.dx.rop.code.SwitchInsn -> r.x:
    com.android.dx.util.IntList cases -> e
    void accept(com.android.dx.rop.code.Insn$Visitor) -> a
    boolean contentEquals(com.android.dx.rop.code.Insn) -> c
    com.android.dx.rop.type.TypeList getCatches() -> e
    java.lang.String getInlineString() -> f
    com.android.dx.rop.code.Insn withAddedCatch(com.android.dx.rop.type.Type) -> t
    com.android.dx.rop.code.Insn withNewRegisters(com.android.dx.rop.code.RegisterSpec,com.android.dx.rop.code.RegisterSpecList) -> u
    com.android.dx.util.IntList getCases() -> w
com.android.dx.rop.code.ThrowingCstInsn -> r.y:
    com.android.dx.rop.type.TypeList catches -> f
    void accept(com.android.dx.rop.code.Insn$Visitor) -> a
    com.android.dx.rop.type.TypeList getCatches() -> e
    java.lang.String getInlineString() -> f
    com.android.dx.rop.code.Insn withAddedCatch(com.android.dx.rop.type.Type) -> t
    com.android.dx.rop.code.Insn withNewRegisters(com.android.dx.rop.code.RegisterSpec,com.android.dx.rop.code.RegisterSpecList) -> u
com.android.dx.rop.code.ThrowingInsn -> r.z:
    com.android.dx.rop.type.TypeList catches -> e
    void accept(com.android.dx.rop.code.Insn$Visitor) -> a
    com.android.dx.rop.type.TypeList getCatches() -> e
    java.lang.String getInlineString() -> f
    com.android.dx.rop.code.Insn withAddedCatch(com.android.dx.rop.type.Type) -> t
    com.android.dx.rop.code.Insn withNewRegisters(com.android.dx.rop.code.RegisterSpec,com.android.dx.rop.code.RegisterSpecList) -> u
    java.lang.String toCatchString(com.android.dx.rop.type.TypeList) -> w
com.android.dx.rop.code.TranslationAdvice -> r.a0:
    boolean hasConstantOperation(com.android.dx.rop.code.Rop,com.android.dx.rop.code.RegisterSpec,com.android.dx.rop.code.RegisterSpec) -> a
    boolean requiresSourcesInOrder(com.android.dx.rop.code.Rop,com.android.dx.rop.code.RegisterSpecList) -> b
    int getMaxOptimalRegisterCount() -> c
com.android.dx.rop.cst.Constant -> s.a:
    int compareTo(com.android.dx.rop.cst.Constant) -> a
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    boolean isCategory2() -> c
    java.lang.String typeName() -> d
com.android.dx.rop.cst.ConstantPool -> s.b:
    com.android.dx.rop.cst.Constant getOrNull(int) -> c
    com.android.dx.rop.cst.Constant get0Ok(int) -> k
com.android.dx.rop.cst.CstAnnotation -> s.c:
    com.android.dx.rop.annotation.Annotation annotation -> a
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    boolean isCategory2() -> c
    java.lang.String typeName() -> d
    com.android.dx.rop.annotation.Annotation getAnnotation() -> e
    java.lang.String toHuman() -> i
com.android.dx.rop.cst.CstArray -> s.d:
    com.android.dx.rop.cst.CstArray$List list -> a
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    boolean isCategory2() -> c
    java.lang.String typeName() -> d
    com.android.dx.rop.cst.CstArray$List getList() -> e
    java.lang.String toHuman() -> i
com.android.dx.rop.cst.CstArray$List -> s.d$a:
    void set(int,com.android.dx.rop.cst.Constant) -> A
    int compareTo(com.android.dx.rop.cst.CstArray$List) -> z
com.android.dx.rop.cst.CstBaseMethodRef -> s.e:
    com.android.dx.rop.type.Prototype prototype -> c
    com.android.dx.rop.type.Prototype instancePrototype -> d
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    com.android.dx.rop.type.Type getType() -> g
    int getParameterWordCount(boolean) -> k
    com.android.dx.rop.type.Prototype getPrototype() -> n
    com.android.dx.rop.type.Prototype getPrototype(boolean) -> o
    boolean isClassInit() -> p
    boolean isInstanceInit() -> q
    boolean isSignaturePolymorphic() -> r
com.android.dx.rop.cst.CstBoolean -> s.f:
    com.android.dx.rop.cst.CstBoolean VALUE_FALSE -> b
    com.android.dx.rop.cst.CstBoolean VALUE_TRUE -> c
    java.lang.String typeName() -> d
    com.android.dx.rop.type.Type getType() -> g
    java.lang.String toHuman() -> i
    boolean getValue() -> p
    com.android.dx.rop.cst.CstBoolean make(int) -> q
com.android.dx.rop.cst.CstByte -> s.g:
    com.android.dx.rop.cst.CstByte VALUE_0 -> b
    java.lang.String typeName() -> d
    com.android.dx.rop.type.Type getType() -> g
    java.lang.String toHuman() -> i
    com.android.dx.rop.cst.CstByte make(byte) -> p
    com.android.dx.rop.cst.CstByte make(int) -> q
com.android.dx.rop.cst.CstCallSite -> s.h:
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    boolean isCategory2() -> c
    java.lang.String typeName() -> d
    com.android.dx.rop.cst.CstCallSite make(com.android.dx.rop.cst.CstMethodHandle,com.android.dx.rop.cst.CstNat,com.android.dx.cf.code.BootstrapMethodArgumentsList) -> f
    java.lang.String toHuman() -> i
com.android.dx.rop.cst.CstCallSiteRef -> s.i:
    int id -> b
    com.android.dx.rop.cst.CstInvokeDynamic invokeDynamic -> a
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    boolean isCategory2() -> c
    java.lang.String typeName() -> d
    com.android.dx.rop.cst.CstCallSite getCallSite() -> e
    com.android.dx.rop.type.Prototype getPrototype() -> f
    java.lang.String toHuman() -> i
    com.android.dx.rop.type.Type getReturnType() -> k
com.android.dx.rop.cst.CstChar -> s.j:
    com.android.dx.rop.cst.CstChar VALUE_0 -> b
    java.lang.String typeName() -> d
    com.android.dx.rop.type.Type getType() -> g
    java.lang.String toHuman() -> i
    com.android.dx.rop.cst.CstChar make(char) -> p
    com.android.dx.rop.cst.CstChar make(int) -> q
com.android.dx.rop.cst.CstDouble -> s.k:
    com.android.dx.rop.cst.CstDouble VALUE_1 -> c
    com.android.dx.rop.cst.CstDouble VALUE_0 -> b
    java.lang.String typeName() -> d
    com.android.dx.rop.type.Type getType() -> g
    java.lang.String toHuman() -> i
    com.android.dx.rop.cst.CstDouble make(long) -> p
com.android.dx.rop.cst.CstEnumRef -> s.l:
    com.android.dx.rop.cst.CstFieldRef fieldRef -> c
    java.lang.String typeName() -> d
    com.android.dx.rop.type.Type getType() -> g
    com.android.dx.rop.cst.CstFieldRef getFieldRef() -> k
com.android.dx.rop.cst.CstFieldRef -> s.m:
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    java.lang.String typeName() -> d
    com.android.dx.rop.type.Type getType() -> g
    com.android.dx.rop.cst.CstFieldRef forPrimitiveType(com.android.dx.rop.type.Type) -> k
com.android.dx.rop.cst.CstFloat -> s.n:
    com.android.dx.rop.cst.CstFloat VALUE_1 -> c
    com.android.dx.rop.cst.CstFloat VALUE_0 -> b
    com.android.dx.rop.cst.CstFloat VALUE_2 -> d
    java.lang.String typeName() -> d
    com.android.dx.rop.type.Type getType() -> g
    java.lang.String toHuman() -> i
    com.android.dx.rop.cst.CstFloat make(int) -> p
com.android.dx.rop.cst.CstInteger -> s.o:
    com.android.dx.rop.cst.CstInteger VALUE_0 -> d
    com.android.dx.rop.cst.CstInteger VALUE_1 -> e
    com.android.dx.rop.cst.CstInteger VALUE_M1 -> c
    com.android.dx.rop.cst.CstInteger VALUE_4 -> h
    com.android.dx.rop.cst.CstInteger VALUE_5 -> i
    com.android.dx.rop.cst.CstInteger VALUE_2 -> f
    com.android.dx.rop.cst.CstInteger[] cache -> b
    com.android.dx.rop.cst.CstInteger VALUE_3 -> g
    java.lang.String typeName() -> d
    com.android.dx.rop.type.Type getType() -> g
    java.lang.String toHuman() -> i
    int getValue() -> p
    com.android.dx.rop.cst.CstInteger make(int) -> q
com.android.dx.rop.cst.CstInterfaceMethodRef -> s.p:
    com.android.dx.rop.cst.CstMethodRef methodRef -> e
    java.lang.String typeName() -> d
    com.android.dx.rop.cst.CstMethodRef toMethodRef() -> s
com.android.dx.rop.cst.CstInvokeDynamic -> s.q:
    com.android.dx.rop.cst.CstCallSite callSite -> e
    com.android.dx.rop.cst.CstType declaringClass -> d
    com.android.dx.rop.cst.CstNat nat -> b
    java.util.List references -> f
    com.android.dx.rop.type.Prototype prototype -> c
    int bootstrapMethodIndex -> a
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    boolean isCategory2() -> c
    java.lang.String typeName() -> d
    com.android.dx.rop.cst.CstCallSiteRef addReference() -> e
    int getBootstrapMethodIndex() -> f
    java.lang.String toHuman() -> i
    com.android.dx.rop.cst.CstCallSite getCallSite() -> k
    com.android.dx.rop.cst.CstType getDeclaringClass() -> n
    com.android.dx.rop.cst.CstNat getNat() -> o
    com.android.dx.rop.type.Prototype getPrototype() -> p
    java.util.List getReferences() -> q
    com.android.dx.rop.type.Type getReturnType() -> r
    com.android.dx.rop.cst.CstInvokeDynamic make(int,com.android.dx.rop.cst.CstNat) -> s
    void setCallSite(com.android.dx.rop.cst.CstCallSite) -> t
    void setDeclaringClass(com.android.dx.rop.cst.CstType) -> u
com.android.dx.rop.cst.CstKnownNull -> s.r:
    com.android.dx.rop.cst.CstKnownNull THE_ONE -> a
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    boolean isCategory2() -> c
    java.lang.String typeName() -> d
    com.android.dx.rop.type.Type getType() -> g
    java.lang.String toHuman() -> i
    boolean fitsInInt() -> k
    int getIntBits() -> n
    long getLongBits() -> o
com.android.dx.rop.cst.CstLiteral32 -> s.s:
    int bits -> a
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    boolean isCategory2() -> c
    boolean fitsInInt() -> k
    int getIntBits() -> n
    long getLongBits() -> o
com.android.dx.rop.cst.CstLiteral64 -> s.t:
    long bits -> a
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    boolean isCategory2() -> c
    boolean fitsInInt() -> k
    int getIntBits() -> n
    long getLongBits() -> o
com.android.dx.rop.cst.CstLiteralBits -> s.u:
    boolean fitsIn16Bits() -> e
    boolean fitsIn8Bits() -> f
    boolean fitsInInt() -> k
    int getIntBits() -> n
    long getLongBits() -> o
com.android.dx.rop.cst.CstLong -> s.v:
    com.android.dx.rop.cst.CstLong VALUE_1 -> c
    com.android.dx.rop.cst.CstLong VALUE_0 -> b
    java.lang.String typeName() -> d
    com.android.dx.rop.type.Type getType() -> g
    java.lang.String toHuman() -> i
    long getValue() -> p
    com.android.dx.rop.cst.CstLong make(long) -> q
com.android.dx.rop.cst.CstMemberRef -> s.w:
    com.android.dx.rop.cst.CstNat nat -> b
    com.android.dx.rop.cst.CstType definingClass -> a
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    boolean isCategory2() -> c
    com.android.dx.rop.cst.CstType getDefiningClass() -> e
    com.android.dx.rop.cst.CstNat getNat() -> f
    java.lang.String toHuman() -> i
com.android.dx.rop.cst.CstMethodHandle -> s.x:
    com.android.dx.rop.cst.Constant ref -> b
    java.lang.String[] TYPE_NAMES -> c
    int type -> a
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    boolean isCategory2() -> c
    java.lang.String typeName() -> d
    int getMethodHandleType() -> e
    java.lang.String getMethodHandleTypeName(int) -> f
    com.android.dx.rop.type.Type getType() -> g
    java.lang.String toHuman() -> i
    com.android.dx.rop.cst.Constant getRef() -> k
    boolean isAccessor() -> n
    boolean isAccessor(int) -> o
    boolean isInvocation() -> p
    boolean isInvocation(int) -> q
    com.android.dx.rop.cst.CstMethodHandle make(int,com.android.dx.rop.cst.Constant) -> r
com.android.dx.rop.cst.CstMethodRef -> s.y:
    java.lang.String typeName() -> d
com.android.dx.rop.cst.CstNat -> s.z:
    com.android.dx.rop.cst.CstNat PRIMITIVE_TYPE_NAT -> c
    com.android.dx.rop.cst.CstString name -> a
    com.android.dx.rop.cst.CstString descriptor -> b
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    boolean isCategory2() -> c
    java.lang.String typeName() -> d
    com.android.dx.rop.cst.CstString getDescriptor() -> e
    com.android.dx.rop.type.Type getFieldType() -> f
    java.lang.String toHuman() -> i
    com.android.dx.rop.cst.CstString getName() -> k
    boolean isClassInit() -> n
    boolean isInstanceInit() -> o
com.android.dx.rop.cst.CstProtoRef -> s.a0:
    com.android.dx.rop.type.Prototype prototype -> a
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    boolean isCategory2() -> c
    java.lang.String typeName() -> d
    com.android.dx.rop.type.Prototype getPrototype() -> e
    com.android.dx.rop.cst.CstProtoRef make(com.android.dx.rop.cst.CstString) -> f
    com.android.dx.rop.type.Type getType() -> g
    java.lang.String toHuman() -> i
com.android.dx.rop.cst.CstShort -> s.b0:
    com.android.dx.rop.cst.CstShort VALUE_0 -> b
    java.lang.String typeName() -> d
    com.android.dx.rop.type.Type getType() -> g
    java.lang.String toHuman() -> i
    com.android.dx.rop.cst.CstShort make(int) -> p
    com.android.dx.rop.cst.CstShort make(short) -> q
com.android.dx.rop.cst.CstString -> s.c0:
    com.android.dx.rop.cst.CstString EMPTY_STRING -> c
    java.lang.String string -> a
    com.android.dx.util.ByteArray bytes -> b
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    boolean isCategory2() -> c
    java.lang.String typeName() -> d
    com.android.dx.util.ByteArray getBytes() -> e
    java.lang.String getString() -> f
    com.android.dx.rop.type.Type getType() -> g
    java.lang.String toHuman() -> i
    int getUtf16Size() -> k
    int getUtf8Size() -> n
    byte[] stringToUtf8Bytes(java.lang.String) -> o
    java.lang.String throwBadUtf8(int,int) -> p
    java.lang.String toQuoted() -> q
    java.lang.String toQuoted(int) -> r
    java.lang.String utf8BytesToString(com.android.dx.util.ByteArray) -> s
com.android.dx.rop.cst.CstType -> s.d0:
    com.android.dx.rop.cst.CstType SHORT_ARRAY -> u
    com.android.dx.rop.cst.CstType INT_ARRAY -> t
    com.android.dx.rop.type.Type type -> a
    com.android.dx.rop.cst.CstType VAR_HANDLE -> w
    com.android.dx.rop.cst.CstType METHOD_HANDLE -> v
    com.android.dx.rop.cst.CstType VOID -> m
    com.android.dx.rop.cst.CstType SHORT -> l
    java.util.concurrent.ConcurrentMap interns -> c
    com.android.dx.rop.cst.CstType BYTE_ARRAY -> o
    com.android.dx.rop.cst.CstType BOOLEAN_ARRAY -> n
    com.android.dx.rop.cst.CstType DOUBLE_ARRAY -> q
    com.android.dx.rop.cst.CstType CHAR_ARRAY -> p
    com.android.dx.rop.cst.CstType LONG_ARRAY -> s
    com.android.dx.rop.cst.CstType FLOAT_ARRAY -> r
    com.android.dx.rop.cst.CstType BOOLEAN -> e
    com.android.dx.rop.cst.CstType OBJECT -> d
    com.android.dx.rop.cst.CstType CHARACTER -> g
    com.android.dx.rop.cst.CstType BYTE -> f
    com.android.dx.rop.cst.CstType FLOAT -> i
    com.android.dx.rop.cst.CstType DOUBLE -> h
    com.android.dx.rop.cst.CstType INTEGER -> k
    com.android.dx.rop.cst.CstString descriptor -> b
    com.android.dx.rop.cst.CstType LONG -> j
    int compareTo0(com.android.dx.rop.cst.Constant) -> b
    boolean isCategory2() -> c
    java.lang.String typeName() -> d
    com.android.dx.rop.cst.CstType forBoxedPrimitiveType(com.android.dx.rop.type.Type) -> e
    com.android.dx.rop.type.Type getClassType() -> f
    com.android.dx.rop.type.Type getType() -> g
    java.lang.String toHuman() -> i
    com.android.dx.rop.cst.CstString getDescriptor() -> k
    java.lang.String getPackageName() -> n
    void initInterns() -> o
    com.android.dx.rop.cst.CstType intern(com.android.dx.rop.type.Type) -> p
    void internInitial(com.android.dx.rop.cst.CstType) -> q
com.android.dx.rop.cst.StdConstantPool -> s.e0:
    com.android.dx.rop.cst.Constant[] entries -> b
    com.android.dx.rop.cst.Constant getOrNull(int) -> c
    com.android.dx.rop.cst.Constant get0Ok(int) -> k
    void set(int,com.android.dx.rop.cst.Constant) -> r
    com.android.dx.rop.cst.Constant throwInvalid(int) -> s
com.android.dx.rop.cst.TypedConstant -> s.f0:
    boolean isConstant() -> h
    int getBasicFrameType() -> j
    int getBasicType() -> l
    com.android.dx.rop.type.TypeBearer getFrameType() -> m
com.android.dx.rop.cst.Zeroes -> s.g0:
    com.android.dx.rop.cst.Constant zeroFor(com.android.dx.rop.type.Type) -> a
com.android.dx.rop.type.Prototype -> t.a:
    com.android.dx.rop.type.Type returnType -> b
    java.util.concurrent.ConcurrentMap internTable -> e
    java.lang.String descriptor -> a
    com.android.dx.rop.type.StdTypeList parameterFrameTypes -> d
    com.android.dx.rop.type.StdTypeList parameterTypes -> c
    int compareTo(com.android.dx.rop.type.Prototype) -> a
    com.android.dx.rop.type.Prototype fromDescriptor(java.lang.String) -> b
    java.lang.String getDescriptor() -> c
    com.android.dx.rop.type.StdTypeList getParameterFrameTypes() -> d
    com.android.dx.rop.type.StdTypeList getParameterTypes() -> e
    com.android.dx.rop.type.Type getReturnType() -> f
    com.android.dx.rop.type.Prototype intern(java.lang.String) -> g
    com.android.dx.rop.type.Prototype intern(java.lang.String,com.android.dx.rop.type.Type,boolean,boolean) -> h
    com.android.dx.rop.type.Prototype internInts(com.android.dx.rop.type.Type,int) -> i
    com.android.dx.rop.type.Type[] makeParameterArray(java.lang.String) -> j
    com.android.dx.rop.type.Prototype putIntern(com.android.dx.rop.type.Prototype) -> k
    com.android.dx.rop.type.Prototype withFirstParameter(com.android.dx.rop.type.Type) -> l
com.android.dx.rop.type.StdTypeList -> t.b:
    com.android.dx.rop.type.StdTypeList OBJECTARR_INT -> y
    com.android.dx.rop.type.StdTypeList LONG_OBJECT -> q
    com.android.dx.rop.type.StdTypeList DOUBLE_OBJECT -> s
    com.android.dx.rop.type.StdTypeList INTARR_INT -> u
    com.android.dx.rop.type.StdTypeList FLOATARR_INT -> w
    com.android.dx.rop.type.StdTypeList THROWABLE -> j
    com.android.dx.rop.type.StdTypeList INT_BOOLEANARR_INT -> I
    com.android.dx.rop.type.StdTypeList LONG_LONG -> l
    com.android.dx.rop.type.StdTypeList INT_CHARARR_INT -> K
    com.android.dx.rop.type.StdTypeList DOUBLE_DOUBLE -> n
    com.android.dx.rop.type.StdTypeList INT_OBJECT -> p
    com.android.dx.rop.type.StdTypeList BYTEARR_INT -> A
    com.android.dx.rop.type.StdTypeList INT -> d
    com.android.dx.rop.type.StdTypeList SHORTARR_INT -> C
    com.android.dx.rop.type.StdTypeList FLOAT -> f
    com.android.dx.rop.type.StdTypeList LONG_LONGARR_INT -> E
    com.android.dx.rop.type.StdTypeList OBJECT -> h
    com.android.dx.rop.type.StdTypeList DOUBLE_DOUBLEARR_INT -> G
    com.android.dx.rop.type.StdTypeList BOOLEANARR_INT -> z
    com.android.dx.rop.type.StdTypeList FLOAT_OBJECT -> r
    com.android.dx.rop.type.StdTypeList LONG_INT -> t
    com.android.dx.rop.type.StdTypeList LONGARR_INT -> v
    com.android.dx.rop.type.StdTypeList DOUBLEARR_INT -> x
    com.android.dx.rop.type.StdTypeList INT_BYTEARR_INT -> J
    com.android.dx.rop.type.StdTypeList RETURN_ADDRESS -> i
    com.android.dx.rop.type.StdTypeList INT_SHORTARR_INT -> L
    com.android.dx.rop.type.StdTypeList INT_INT -> k
    com.android.dx.rop.type.StdTypeList FLOAT_FLOAT -> m
    com.android.dx.rop.type.StdTypeList OBJECT_OBJECT -> o
    com.android.dx.rop.type.StdTypeList CHARARR_INT -> B
    com.android.dx.rop.type.StdTypeList INT_INTARR_INT -> D
    com.android.dx.rop.type.StdTypeList EMPTY -> c
    com.android.dx.rop.type.StdTypeList FLOAT_FLOATARR_INT -> F
    com.android.dx.rop.type.StdTypeList LONG -> e
    com.android.dx.rop.type.StdTypeList OBJECT_OBJECTARR_INT -> H
    com.android.dx.rop.type.StdTypeList DOUBLE -> g
    boolean equalContents(com.android.dx.rop.type.TypeList,com.android.dx.rop.type.TypeList) -> A
    com.android.dx.rop.type.Type get(int) -> B
    int getWordCount() -> C
    int hashContents(com.android.dx.rop.type.TypeList) -> D
    com.android.dx.rop.type.StdTypeList make(com.android.dx.rop.type.Type) -> E
    com.android.dx.rop.type.StdTypeList make(com.android.dx.rop.type.Type,com.android.dx.rop.type.Type) -> F
    com.android.dx.rop.type.StdTypeList make(com.android.dx.rop.type.Type,com.android.dx.rop.type.Type,com.android.dx.rop.type.Type) -> G
    com.android.dx.rop.type.StdTypeList make(com.android.dx.rop.type.Type,com.android.dx.rop.type.Type,com.android.dx.rop.type.Type,com.android.dx.rop.type.Type) -> H
    void set(int,com.android.dx.rop.type.Type) -> I
    java.lang.String toHuman(com.android.dx.rop.type.TypeList) -> J
    com.android.dx.rop.type.StdTypeList withFirst(com.android.dx.rop.type.Type) -> K
    com.android.dx.rop.type.TypeList withAddedType(com.android.dx.rop.type.Type) -> e
    int compareContents(com.android.dx.rop.type.TypeList,com.android.dx.rop.type.TypeList) -> z
com.android.dx.rop.type.Type -> t.c:
    com.android.dx.rop.type.Type STRING -> B
    com.android.dx.rop.type.Type arrayType -> e
    com.android.dx.rop.type.Type BOOLEAN_CLASS -> D
    com.android.dx.rop.type.Type CLONEABLE -> v
    com.android.dx.rop.type.Type METHOD_TYPE -> x
    int basicType -> b
    com.android.dx.rop.type.Type OBJECT -> z
    com.android.dx.rop.type.Type CHAR_ARRAY -> O
    com.android.dx.rop.type.Type INT -> n
    com.android.dx.rop.type.Type FLOAT_ARRAY -> Q
    com.android.dx.rop.type.Type SHORT -> p
    com.android.dx.rop.type.Type LONG_ARRAY -> S
    com.android.dx.rop.type.Type KNOWN_NULL -> r
    com.android.dx.rop.type.Type SHORT_ARRAY -> U
    com.android.dx.rop.type.Type ANNOTATION -> t
    com.android.dx.rop.type.Type DOUBLE_CLASS -> G
    com.android.dx.rop.type.Type componentType -> f
    java.lang.String descriptor -> a
    com.android.dx.rop.type.Type INTEGER_CLASS -> I
    com.android.dx.rop.type.Type SHORT_CLASS -> K
    com.android.dx.rop.type.Type BYTE -> j
    com.android.dx.rop.type.Type BOOLEAN_ARRAY -> M
    com.android.dx.rop.type.Type DOUBLE -> l
    com.android.dx.rop.type.Type SERIALIZABLE -> A
    com.android.dx.rop.type.Type THROWABLE -> C
    com.android.dx.rop.type.Type BYTE_CLASS -> E
    java.util.concurrent.ConcurrentMap internTable -> h
    com.android.dx.rop.type.Type METHOD_HANDLE -> w
    com.android.dx.rop.type.Type VAR_HANDLE -> y
    int newAt -> c
    com.android.dx.rop.type.Type LONG -> o
    com.android.dx.rop.type.Type BYTE_ARRAY -> N
    com.android.dx.rop.type.Type VOID -> q
    com.android.dx.rop.type.Type DOUBLE_ARRAY -> P
    com.android.dx.rop.type.Type RETURN_ADDRESS -> s
    com.android.dx.rop.type.Type INT_ARRAY -> R
    com.android.dx.rop.type.Type CLASS -> u
    com.android.dx.rop.type.Type OBJECT_ARRAY -> T
    com.android.dx.rop.type.Type initializedType -> g
    com.android.dx.rop.type.Type CHARACTER_CLASS -> F
    com.android.dx.rop.type.Type BOOLEAN -> i
    com.android.dx.rop.type.Type FLOAT_CLASS -> H
    com.android.dx.rop.type.Type CHAR -> k
    com.android.dx.rop.type.Type LONG_CLASS -> J
    com.android.dx.rop.type.Type FLOAT -> m
    java.lang.String className -> d
    com.android.dx.rop.type.Type VOID_CLASS -> L
    boolean isUninitialized() -> A
    com.android.dx.rop.type.Type putIntern(com.android.dx.rop.type.Type) -> B
    com.android.dx.rop.type.Type asUninitialized(int) -> a
    int compareTo(com.android.dx.rop.type.Type) -> b
    com.android.dx.rop.type.Type getArrayType() -> c
    int getCategory() -> d
    java.lang.String getClassName() -> e
    com.android.dx.rop.type.Type getComponentType() -> f
    com.android.dx.rop.type.Type getType() -> g
    boolean isConstant() -> h
    java.lang.String toHuman() -> i
    int getBasicFrameType() -> j
    java.lang.String getDescriptor() -> k
    int getBasicType() -> l
    com.android.dx.rop.type.TypeBearer getFrameType() -> m
    com.android.dx.rop.type.Type getFrameType() -> n
    com.android.dx.rop.type.Type getInitializedType() -> o
    void initInterns() -> p
    com.android.dx.rop.type.Type intern(java.lang.String) -> q
    com.android.dx.rop.type.Type internClassName(java.lang.String) -> r
    com.android.dx.rop.type.Type internReturnType(java.lang.String) -> s
    boolean isArray() -> t
    boolean isArrayOrKnownNull() -> u
    boolean isCategory1() -> v
    boolean isCategory2() -> w
    boolean isIntlike() -> x
    boolean isPrimitive() -> y
    boolean isReference() -> z
com.android.dx.rop.type.TypeBearer -> t.d:
    com.android.dx.rop.type.Type getType() -> g
    boolean isConstant() -> h
    int getBasicFrameType() -> j
    int getBasicType() -> l
    com.android.dx.rop.type.TypeBearer getFrameType() -> m
com.android.dx.rop.type.TypeList -> t.e:
    boolean isMutable() -> a
    com.android.dx.rop.type.TypeList withAddedType(com.android.dx.rop.type.Type) -> e
com.android.dx.ssa.BasicRegisterMapper -> u.a:
    com.android.dx.util.IntList oldToNew -> a
    int runningCountNewRegisters -> b
    int getNewRegisterCount() -> a
    com.android.dx.rop.code.RegisterSpec map(com.android.dx.rop.code.RegisterSpec) -> b
    void addMapping(int,int,int) -> e
    int oldToNew(int) -> f
com.android.dx.ssa.ConstCollector -> u.b:
    com.android.dx.ssa.SsaMethod ssaMeth -> a
    com.android.dx.ssa.SsaMethod access$000(com.android.dx.ssa.ConstCollector) -> a
    java.util.ArrayList getConstsSortedByCountUse() -> b
    void process(com.android.dx.ssa.SsaMethod) -> c
    void run() -> d
    void updateConstUses(java.util.HashMap,int) -> e
com.android.dx.ssa.ConstCollector$1 -> u.b$a:
    java.util.HashMap val$countUses -> a
    com.android.dx.ssa.ConstCollector this$0 -> b
    int compare(com.android.dx.rop.cst.Constant,com.android.dx.rop.cst.Constant) -> a
com.android.dx.ssa.ConstCollector$2 -> u.b$b:
    com.android.dx.rop.code.RegisterSpec val$origReg -> a
    com.android.dx.rop.code.RegisterSpec val$newReg -> b
    com.android.dx.ssa.ConstCollector this$0 -> c
    int getNewRegisterCount() -> a
    com.android.dx.rop.code.RegisterSpec map(com.android.dx.rop.code.RegisterSpec) -> b
com.android.dx.ssa.DeadCodeRemover -> u.c:
    com.android.dx.ssa.SsaMethod ssaMeth -> a
    java.util.ArrayList[] useList -> d
    int regCount -> b
    java.util.BitSet worklist -> c
    boolean access$000(com.android.dx.ssa.SsaInsn) -> a
    boolean hasSideEffect(com.android.dx.ssa.SsaInsn) -> b
    boolean isCircularNoSideEffect(int,java.util.BitSet) -> c
    void process(com.android.dx.ssa.SsaMethod) -> d
    void pruneDeadInstructions() -> e
    void run() -> f
com.android.dx.ssa.DeadCodeRemover$NoSideEffectVisitor -> u.c$a:
    java.util.BitSet noSideEffectRegs -> a
    void visitPhiInsn(com.android.dx.ssa.PhiInsn) -> a
    void visitNonMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> b
    void visitMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> c
com.android.dx.ssa.DomFront -> u.d:
    com.android.dx.ssa.SsaMethod meth -> a
    com.android.dx.ssa.DomFront$DomInfo[] domInfos -> c
    java.util.ArrayList nodes -> b
    void buildDomTree() -> a
    void calcDomFronts() -> b
    com.android.dx.ssa.DomFront$DomInfo[] run() -> c
com.android.dx.ssa.DomFront$DomInfo -> u.d$a:
    com.android.dx.util.IntSet dominanceFrontiers -> a
    int idom -> b
com.android.dx.ssa.Dominators -> u.e:
    com.android.dx.ssa.SsaMethod meth -> b
    com.android.dx.ssa.Dominators$DFSInfo[] info -> d
    java.util.ArrayList vertex -> e
    boolean postdom -> a
    java.util.ArrayList blocks -> c
    com.android.dx.ssa.DomFront$DomInfo[] domInfos -> f
    java.util.ArrayList access$100(com.android.dx.ssa.Dominators) -> a
    com.android.dx.ssa.Dominators$DFSInfo[] access$200(com.android.dx.ssa.Dominators) -> b
    void compress(com.android.dx.ssa.SsaBasicBlock) -> c
    com.android.dx.ssa.SsaBasicBlock eval(com.android.dx.ssa.SsaBasicBlock) -> d
    java.util.BitSet getPreds(com.android.dx.ssa.SsaBasicBlock) -> e
    com.android.dx.ssa.Dominators make(com.android.dx.ssa.SsaMethod,com.android.dx.ssa.DomFront$DomInfo[],boolean) -> f
    void run() -> g
com.android.dx.ssa.Dominators$1 -> u.e$a:
com.android.dx.ssa.Dominators$DFSInfo -> u.e$b:
    com.android.dx.ssa.SsaBasicBlock parent -> b
    com.android.dx.ssa.SsaBasicBlock rep -> c
    com.android.dx.ssa.SsaBasicBlock ancestor -> d
    java.util.ArrayList bucket -> e
    int semidom -> a
com.android.dx.ssa.Dominators$DfsWalker -> u.e$c:
    com.android.dx.ssa.Dominators this$0 -> b
    int dfsNum -> a
    void visitBlock(com.android.dx.ssa.SsaBasicBlock,com.android.dx.ssa.SsaBasicBlock) -> a
com.android.dx.ssa.EscapeAnalysis -> u.f:
    com.android.dx.ssa.SsaMethod ssaMeth -> a
    int regCount -> b
    java.util.ArrayList latticeValues -> c
    com.android.dx.ssa.SsaMethod access$000(com.android.dx.ssa.EscapeAnalysis) -> a
    void access$100(com.android.dx.ssa.EscapeAnalysis,com.android.dx.ssa.SsaInsn) -> b
    void addEdge(com.android.dx.ssa.EscapeAnalysis$EscapeSet,com.android.dx.ssa.EscapeAnalysis$EscapeSet) -> c
    int findSetIndex(com.android.dx.rop.code.RegisterSpec) -> d
    com.android.dx.ssa.SsaInsn getInsnForMove(com.android.dx.ssa.SsaInsn) -> e
    com.android.dx.ssa.SsaInsn getMoveForInsn(com.android.dx.ssa.SsaInsn) -> f
    void insertExceptionThrow(com.android.dx.ssa.SsaInsn,com.android.dx.rop.code.RegisterSpec,java.util.HashSet) -> g
    void insertPlainInsnBefore(com.android.dx.ssa.SsaInsn,com.android.dx.rop.code.RegisterSpecList,com.android.dx.rop.code.RegisterSpec,int,com.android.dx.rop.cst.Constant) -> h
    void insertThrowingInsnBefore(com.android.dx.ssa.SsaInsn,com.android.dx.rop.code.RegisterSpecList,com.android.dx.rop.code.RegisterSpec,int,com.android.dx.rop.cst.Constant) -> i
    void movePropagate() -> j
    void process(com.android.dx.ssa.SsaMethod) -> k
    void processInsn(com.android.dx.ssa.SsaInsn) -> l
    com.android.dx.ssa.EscapeAnalysis$EscapeSet processMoveResultPseudoInsn(com.android.dx.ssa.SsaInsn) -> m
    void processPhiUse(com.android.dx.ssa.SsaInsn,com.android.dx.ssa.EscapeAnalysis$EscapeSet,java.util.ArrayList) -> n
    void processRegister(com.android.dx.rop.code.RegisterSpec,com.android.dx.ssa.EscapeAnalysis$EscapeSet) -> o
    void processUse(com.android.dx.rop.code.RegisterSpec,com.android.dx.ssa.SsaInsn,com.android.dx.ssa.EscapeAnalysis$EscapeSet,java.util.ArrayList) -> p
    void replaceDef(com.android.dx.ssa.SsaInsn,com.android.dx.ssa.SsaInsn,int,java.util.ArrayList) -> q
    void replaceNode(com.android.dx.ssa.EscapeAnalysis$EscapeSet,com.android.dx.ssa.EscapeAnalysis$EscapeSet) -> r
    void replaceUse(com.android.dx.ssa.SsaInsn,com.android.dx.ssa.SsaInsn,java.util.ArrayList,java.util.HashSet) -> s
    void run() -> t
    void scalarReplacement() -> u
com.android.dx.ssa.EscapeAnalysis$1 -> u.f$a:
    com.android.dx.rop.code.RegisterSpec val$result -> a
    com.android.dx.rop.code.RegisterSpec val$source -> b
    com.android.dx.ssa.EscapeAnalysis this$0 -> c
    int getNewRegisterCount() -> a
    com.android.dx.rop.code.RegisterSpec map(com.android.dx.rop.code.RegisterSpec) -> b
com.android.dx.ssa.EscapeAnalysis$2 -> u.f$b:
    com.android.dx.ssa.EscapeAnalysis this$0 -> a
    void visitBlock(com.android.dx.ssa.SsaBasicBlock,com.android.dx.ssa.SsaBasicBlock) -> a
com.android.dx.ssa.EscapeAnalysis$2$1 -> u.f$b$a:
    com.android.dx.ssa.EscapeAnalysis$2 this$1 -> a
    void visitPhiInsn(com.android.dx.ssa.PhiInsn) -> a
    void visitNonMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> b
    void visitMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> c
com.android.dx.ssa.EscapeAnalysis$EscapeSet -> u.f$c:
    boolean replaceableArray -> e
    java.util.BitSet regSet -> a
    java.util.ArrayList parentSets -> d
    java.util.ArrayList childSets -> c
    com.android.dx.ssa.EscapeAnalysis$EscapeState escape -> b
com.android.dx.ssa.EscapeAnalysis$EscapeState -> u.f$d:
    com.android.dx.ssa.EscapeAnalysis$EscapeState GLOBAL -> e
    com.android.dx.ssa.EscapeAnalysis$EscapeState[] $VALUES -> f
    com.android.dx.ssa.EscapeAnalysis$EscapeState TOP -> a
    com.android.dx.ssa.EscapeAnalysis$EscapeState NONE -> b
    com.android.dx.ssa.EscapeAnalysis$EscapeState METHOD -> c
    com.android.dx.ssa.EscapeAnalysis$EscapeState INTER -> d
com.android.dx.ssa.InterferenceRegisterMapper -> u.g:
    java.util.ArrayList newRegInterference -> c
    com.android.dx.ssa.back.InterferenceGraph oldRegInterference -> d
    void addMapping(int,int,int) -> e
    void addInterfence(int,int) -> g
    boolean areAnyPinned(com.android.dx.rop.code.RegisterSpecList,int,int) -> h
    boolean interferes(int,int,int) -> i
    boolean interferes(com.android.dx.rop.code.RegisterSpec,int) -> j
com.android.dx.ssa.LiteralOpUpgrader -> u.h:
    com.android.dx.ssa.SsaMethod ssaMeth -> a
    boolean access$000(com.android.dx.ssa.LiteralOpUpgrader,com.android.dx.ssa.NormalSsaInsn) -> a
    boolean access$100(com.android.dx.rop.code.RegisterSpec) -> b
    void access$200(com.android.dx.ssa.LiteralOpUpgrader,com.android.dx.ssa.NormalSsaInsn,com.android.dx.rop.code.RegisterSpecList,int,com.android.dx.rop.cst.Constant) -> c
    boolean isConstIntZeroOrKnownNull(com.android.dx.rop.code.RegisterSpec) -> d
    void process(com.android.dx.ssa.SsaMethod) -> e
    void replacePlainInsn(com.android.dx.ssa.NormalSsaInsn,com.android.dx.rop.code.RegisterSpecList,int,com.android.dx.rop.cst.Constant) -> f
    void run() -> g
    boolean tryReplacingWithConstant(com.android.dx.ssa.NormalSsaInsn) -> h
com.android.dx.ssa.LiteralOpUpgrader$1 -> u.h$a:
    com.android.dx.rop.code.TranslationAdvice val$advice -> a
    com.android.dx.ssa.LiteralOpUpgrader this$0 -> b
    void visitPhiInsn(com.android.dx.ssa.PhiInsn) -> a
    void visitNonMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> b
    void visitMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> c
com.android.dx.ssa.LocalVariableExtractor -> u.i:
    com.android.dx.ssa.SsaMethod method -> a
    java.util.ArrayList blocks -> b
    com.android.dx.ssa.LocalVariableInfo resultInfo -> c
    java.util.BitSet workSet -> d
    com.android.dx.ssa.LocalVariableInfo doit() -> a
    com.android.dx.ssa.LocalVariableInfo extract(com.android.dx.ssa.SsaMethod) -> b
    void processBlock(int) -> c
com.android.dx.ssa.LocalVariableInfo -> u.j:
    com.android.dx.rop.code.RegisterSpecSet emptySet -> c
    int regCount -> b
    java.util.HashMap insnAssignments -> e
    com.android.dx.rop.code.RegisterSpecSet[] blockStarts -> d
    void addAssignment(com.android.dx.ssa.SsaInsn,com.android.dx.rop.code.RegisterSpec) -> r
    com.android.dx.rop.code.RegisterSpecSet getStarts(int) -> s
    com.android.dx.rop.code.RegisterSpecSet getStarts0(int) -> t
    boolean mergeStarts(int,com.android.dx.rop.code.RegisterSpecSet) -> u
    com.android.dx.rop.code.RegisterSpecSet mutableCopyOfStarts(int) -> v
    void setStarts(int,com.android.dx.rop.code.RegisterSpecSet) -> w
com.android.dx.ssa.MoveParamCombiner -> u.k:
    com.android.dx.ssa.SsaMethod ssaMeth -> a
    int access$000(com.android.dx.ssa.MoveParamCombiner,com.android.dx.ssa.NormalSsaInsn) -> a
    com.android.dx.ssa.SsaMethod access$100(com.android.dx.ssa.MoveParamCombiner) -> b
    int getParamIndex(com.android.dx.ssa.NormalSsaInsn) -> c
    void process(com.android.dx.ssa.SsaMethod) -> d
    void run() -> e
com.android.dx.ssa.MoveParamCombiner$1 -> u.k$a:
    com.android.dx.rop.code.RegisterSpec[] val$paramSpecs -> a
    java.util.HashSet val$deletedInsns -> b
    com.android.dx.ssa.MoveParamCombiner this$0 -> c
    void visitPhiInsn(com.android.dx.ssa.PhiInsn) -> a
    void visitNonMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> b
    void visitMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> c
com.android.dx.ssa.MoveParamCombiner$1$1 -> u.k$a$a:
    com.android.dx.rop.code.RegisterSpec val$specB -> a
    com.android.dx.rop.code.RegisterSpec val$specA -> b
    com.android.dx.ssa.MoveParamCombiner$1 this$1 -> c
    int getNewRegisterCount() -> a
    com.android.dx.rop.code.RegisterSpec map(com.android.dx.rop.code.RegisterSpec) -> b
com.android.dx.ssa.NormalSsaInsn -> u.l:
    com.android.dx.rop.code.Insn insn -> c
    com.android.dx.rop.code.Insn toRopInsn() -> A
    void changeOneSource(int,com.android.dx.rop.code.RegisterSpec) -> B
    com.android.dx.ssa.NormalSsaInsn clone() -> C
    void setNewSources(com.android.dx.rop.code.RegisterSpecList) -> D
    void upgradeToLiteral() -> E
    void accept(com.android.dx.ssa.SsaInsn$Visitor) -> a
    boolean canThrow() -> b
    com.android.dx.ssa.SsaInsn clone() -> d
    com.android.dx.rop.code.RegisterSpec getLocalAssignment() -> f
    java.lang.String toHuman() -> i
    com.android.dx.rop.code.Rop getOpcode() -> k
    com.android.dx.rop.code.Insn getOriginalRopInsn() -> n
    com.android.dx.rop.code.RegisterSpecList getSources() -> p
    boolean hasSideEffect() -> q
    boolean isMoveException() -> r
    boolean isNormalMoveInsn() -> s
    boolean isPhiOrMove() -> t
    void mapSourceRegisters(com.android.dx.ssa.RegisterMapper) -> x
com.android.dx.ssa.Optimizer -> u.m:
    com.android.dx.rop.code.TranslationAdvice advice -> b
    boolean preserveLocals -> a
    com.android.dx.rop.code.TranslationAdvice getAdvice() -> a
    boolean getPreserveLocals() -> b
    com.android.dx.rop.code.RopMethod optimize(com.android.dx.rop.code.RopMethod,int,boolean,boolean,com.android.dx.rop.code.TranslationAdvice) -> c
    com.android.dx.rop.code.RopMethod optimize(com.android.dx.rop.code.RopMethod,int,boolean,boolean,com.android.dx.rop.code.TranslationAdvice,java.util.EnumSet) -> d
    com.android.dx.rop.code.RopMethod optimizeMinimizeRegisters(com.android.dx.rop.code.RopMethod,int,boolean,java.util.EnumSet) -> e
    void runSsaFormSteps(com.android.dx.ssa.SsaMethod,java.util.EnumSet) -> f
com.android.dx.ssa.Optimizer$OptionalStep -> u.m$a:
    com.android.dx.ssa.Optimizer$OptionalStep SCCP -> b
    com.android.dx.ssa.Optimizer$OptionalStep[] $VALUES -> f
    com.android.dx.ssa.Optimizer$OptionalStep MOVE_PARAM_COMBINER -> a
    com.android.dx.ssa.Optimizer$OptionalStep ESCAPE_ANALYSIS -> e
    com.android.dx.ssa.Optimizer$OptionalStep CONST_COLLECTOR -> d
    com.android.dx.ssa.Optimizer$OptionalStep LITERAL_UPGRADE -> c
com.android.dx.ssa.PhiInsn -> u.n:
    com.android.dx.rop.code.RegisterSpecList sources -> e
    java.util.ArrayList operands -> d
    int ropResultReg -> c
    com.android.dx.rop.code.Insn toRopInsn() -> A
    void addPhiOperand(com.android.dx.rop.code.RegisterSpec,com.android.dx.ssa.SsaBasicBlock) -> B
    void changeResultType(com.android.dx.rop.type.TypeBearer,com.android.dx.rop.code.LocalItem) -> C
    com.android.dx.ssa.PhiInsn clone() -> D
    int getRopResultReg() -> E
    int predBlockIndexForSourcesIndex(int) -> F
    java.util.List predBlocksForReg(int,com.android.dx.ssa.SsaMethod) -> G
    void removePhiRegister(com.android.dx.rop.code.RegisterSpec) -> H
    java.lang.String toHumanWithInline(java.lang.String) -> I
    void updateSourcesToDefinitions(com.android.dx.ssa.SsaMethod) -> J
    void accept(com.android.dx.ssa.SsaInsn$Visitor) -> a
    boolean canThrow() -> b
    com.android.dx.ssa.SsaInsn clone() -> d
    java.lang.String toHuman() -> i
    com.android.dx.rop.code.Rop getOpcode() -> k
    com.android.dx.rop.code.Insn getOriginalRopInsn() -> n
    com.android.dx.rop.code.RegisterSpecList getSources() -> p
    boolean hasSideEffect() -> q
    boolean isPhiOrMove() -> t
    void mapSourceRegisters(com.android.dx.ssa.RegisterMapper) -> x
com.android.dx.ssa.PhiInsn$Operand -> u.n$a:
    com.android.dx.rop.code.RegisterSpec regSpec -> a
    int blockIndex -> b
    int ropLabel -> c
com.android.dx.ssa.PhiInsn$Visitor -> u.n$b:
    void visitPhiInsn(com.android.dx.ssa.PhiInsn) -> a
com.android.dx.ssa.PhiTypeResolver -> u.o:
    com.android.dx.ssa.SsaMethod ssaMeth -> a
    java.util.BitSet worklist -> b
    boolean equalsHandlesNulls(com.android.dx.rop.code.LocalItem,com.android.dx.rop.code.LocalItem) -> a
    void process(com.android.dx.ssa.SsaMethod) -> b
    boolean resolveResultType(com.android.dx.ssa.PhiInsn) -> c
    void run() -> d
com.android.dx.ssa.RegisterMapper -> u.p:
    int getNewRegisterCount() -> a
    com.android.dx.rop.code.RegisterSpec map(com.android.dx.rop.code.RegisterSpec) -> b
    com.android.dx.rop.code.RegisterSpecList map(com.android.dx.rop.code.RegisterSpecList) -> c
    com.android.dx.rop.code.RegisterSpecSet map(com.android.dx.rop.code.RegisterSpecSet) -> d
com.android.dx.ssa.SCCP -> u.q:
    java.util.BitSet executableBlocks -> g
    com.android.dx.ssa.SsaMethod ssaMeth -> a
    int[] latticeValues -> c
    java.util.ArrayList branchWorklist -> j
    java.util.ArrayList varyingWorklist -> i
    java.util.ArrayList ssaWorklist -> h
    java.util.ArrayList cfgPhiWorklist -> f
    com.android.dx.rop.cst.Constant[] latticeConstants -> d
    java.util.ArrayList cfgWorklist -> e
    int regCount -> b
    void addBlockToWorklist(com.android.dx.ssa.SsaBasicBlock) -> a
    void addUsersToWorklist(int,int) -> b
    void process(com.android.dx.ssa.SsaMethod) -> c
    void replaceBranches() -> d
    void replaceConstants() -> e
    void run() -> f
    boolean setLatticeValueTo(int,int,com.android.dx.rop.cst.Constant) -> g
    void simulateBlock(com.android.dx.ssa.SsaBasicBlock) -> h
    void simulateBranch(com.android.dx.ssa.SsaInsn) -> i
    com.android.dx.rop.cst.Constant simulateMath(com.android.dx.ssa.SsaInsn,int) -> j
    void simulatePhi(com.android.dx.ssa.PhiInsn) -> k
    void simulatePhiBlock(com.android.dx.ssa.SsaBasicBlock) -> l
    void simulateStmt(com.android.dx.ssa.SsaInsn) -> m
com.android.dx.ssa.SetFactory -> u.r:
    com.android.dx.util.IntSet makeDomFrontSet(int) -> a
    com.android.dx.util.IntSet makeInterferenceSet(int) -> b
    com.android.dx.util.IntSet makeLivenessSet(int) -> c
com.android.dx.ssa.SsaBasicBlock -> u.s:
    java.util.Comparator LABEL_COMPARATOR -> n
    int movesFromPhisAtEnd -> j
    int movesFromPhisAtBeginning -> k
    int index -> h
    int ropLabel -> f
    com.android.dx.util.IntSet liveOut -> m
    com.android.dx.util.IntSet liveIn -> l
    int primarySuccessor -> e
    com.android.dx.util.IntList successorList -> d
    java.util.ArrayList insns -> a
    com.android.dx.ssa.SsaMethod parent -> g
    java.util.ArrayList domChildren -> i
    java.util.BitSet successors -> c
    java.util.BitSet predecessors -> b
    com.android.dx.util.IntList getRopLabelSuccessorList() -> A
    com.android.dx.util.IntList getSuccessorList() -> B
    java.util.BitSet getSuccessors() -> C
    com.android.dx.ssa.SsaBasicBlock insertNewPredecessor() -> D
    com.android.dx.ssa.SsaBasicBlock insertNewSuccessor(com.android.dx.ssa.SsaBasicBlock) -> E
    boolean isExitBlock() -> F
    com.android.dx.ssa.SsaBasicBlock newFromRop(com.android.dx.rop.code.RopMethod,int,com.android.dx.ssa.SsaMethod) -> G
    void removeAllPhiInsns() -> H
    void removeSuccessor(int) -> I
    void replaceLastInsn(com.android.dx.rop.code.Insn) -> J
    void replaceSuccessor(int,int) -> K
    void scheduleMovesFromPhis() -> L
    void scheduleUseBeforeAssigned(java.util.List) -> M
    void setRegsUsed(java.util.BitSet,com.android.dx.rop.code.RegisterSpec) -> N
    int access$000(com.android.dx.ssa.SsaBasicBlock) -> a
    void addDomChild(com.android.dx.ssa.SsaBasicBlock) -> b
    void addInsnToHead(com.android.dx.rop.code.Insn) -> c
    void addLiveIn(int) -> d
    void addLiveOut(int) -> e
    void addMoveToBeginning(com.android.dx.rop.code.RegisterSpec,com.android.dx.rop.code.RegisterSpec) -> f
    void addMoveToEnd(com.android.dx.rop.code.RegisterSpec,com.android.dx.rop.code.RegisterSpec) -> g
    void addPhiInsnForReg(int) -> h
    void addPhiInsnForReg(com.android.dx.rop.code.RegisterSpec) -> i
    boolean checkRegUsed(java.util.BitSet,com.android.dx.rop.code.RegisterSpec) -> j
    void exitBlockFixup(com.android.dx.ssa.SsaBasicBlock) -> k
    void forEachInsn(com.android.dx.ssa.SsaInsn$Visitor) -> l
    void forEachPhiInsn(com.android.dx.ssa.PhiInsn$Visitor) -> m
    int getCountPhiInsns() -> n
    java.util.ArrayList getDomChildren() -> o
    int getIndex() -> p
    java.util.ArrayList getInsns() -> q
    com.android.dx.util.IntSet getLiveOutRegs() -> r
    com.android.dx.ssa.SsaMethod getParent() -> s
    java.util.List getPhiInsns() -> t
    java.util.BitSet getPredecessors() -> u
    com.android.dx.ssa.SsaBasicBlock getPrimarySuccessor() -> v
    int getPrimarySuccessorIndex() -> w
    int getPrimarySuccessorRopLabel() -> x
    int getRopLabel() -> y
    java.lang.String getRopLabelString() -> z
com.android.dx.ssa.SsaBasicBlock$LabelComparator -> u.s$a:
    int compare(com.android.dx.ssa.SsaBasicBlock,com.android.dx.ssa.SsaBasicBlock) -> a
com.android.dx.ssa.SsaBasicBlock$Visitor -> u.s$b:
    void visitBlock(com.android.dx.ssa.SsaBasicBlock,com.android.dx.ssa.SsaBasicBlock) -> a
com.android.dx.ssa.SsaConverter -> u.t:
    com.android.dx.ssa.SsaMethod convertToSsaMethod(com.android.dx.rop.code.RopMethod,int,boolean) -> a
    void edgeSplit(com.android.dx.ssa.SsaMethod) -> b
    void edgeSplitMoveExceptionsAndResults(com.android.dx.ssa.SsaMethod) -> c
    void edgeSplitPredecessors(com.android.dx.ssa.SsaMethod) -> d
    void edgeSplitSuccessors(com.android.dx.ssa.SsaMethod) -> e
    boolean needsNewSuccessor(com.android.dx.ssa.SsaBasicBlock,com.android.dx.ssa.SsaBasicBlock) -> f
    boolean nodeNeedsUniquePredecessor(com.android.dx.ssa.SsaBasicBlock) -> g
    void placePhiFunctions(com.android.dx.ssa.SsaMethod,com.android.dx.ssa.LocalVariableInfo,int) -> h
    void updateSsaMethod(com.android.dx.ssa.SsaMethod,int) -> i
com.android.dx.ssa.SsaInsn -> u.u:
    com.android.dx.rop.code.RegisterSpec result -> b
    com.android.dx.ssa.SsaBasicBlock block -> a
    com.android.dx.rop.code.Insn toRopInsn() -> A
    void accept(com.android.dx.ssa.SsaInsn$Visitor) -> a
    boolean canThrow() -> b
    void changeResultReg(int) -> c
    com.android.dx.ssa.SsaInsn clone() -> d
    com.android.dx.ssa.SsaBasicBlock getBlock() -> e
    com.android.dx.rop.code.RegisterSpec getLocalAssignment() -> f
    com.android.dx.rop.code.Rop getOpcode() -> k
    com.android.dx.rop.code.Insn getOriginalRopInsn() -> n
    com.android.dx.rop.code.RegisterSpec getResult() -> o
    com.android.dx.rop.code.RegisterSpecList getSources() -> p
    boolean hasSideEffect() -> q
    boolean isMoveException() -> r
    boolean isNormalMoveInsn() -> s
    boolean isPhiOrMove() -> t
    boolean isResultReg(int) -> u
    com.android.dx.ssa.SsaInsn makeFromRop(com.android.dx.rop.code.Insn,com.android.dx.ssa.SsaBasicBlock) -> v
    void mapRegisters(com.android.dx.ssa.RegisterMapper) -> w
    void mapSourceRegisters(com.android.dx.ssa.RegisterMapper) -> x
    void setResult(com.android.dx.rop.code.RegisterSpec) -> y
    void setResultLocal(com.android.dx.rop.code.LocalItem) -> z
com.android.dx.ssa.SsaInsn$Visitor -> u.u$a:
    void visitPhiInsn(com.android.dx.ssa.PhiInsn) -> a
    void visitNonMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> b
    void visitMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> c
com.android.dx.ssa.SsaMethod -> u.v:
    boolean backMode -> m
    com.android.dx.ssa.SsaInsn[] definitionList -> j
    java.util.ArrayList[] useList -> k
    boolean isStatic -> i
    int paramWidth -> h
    int borrowedSpareRegisters -> f
    int maxLabel -> g
    int registerCount -> d
    int spareRegisterBase -> e
    java.util.List[] unmodifiableUseList -> l
    int entryBlockIndex -> b
    int exitBlockIndex -> c
    java.util.ArrayList blocks -> a
    com.android.dx.ssa.SsaBasicBlock makeNewGotoBlock() -> A
    int makeNewSsaReg() -> B
    void mapRegisters(com.android.dx.ssa.RegisterMapper) -> C
    com.android.dx.ssa.SsaMethod newFromRopMethod(com.android.dx.rop.code.RopMethod,int,boolean) -> D
    void onInsnAdded(com.android.dx.ssa.SsaInsn) -> E
    void onInsnRemoved(com.android.dx.ssa.SsaInsn) -> F
    void onInsnsChanged() -> G
    void onSourceChanged(com.android.dx.ssa.SsaInsn,com.android.dx.rop.code.RegisterSpec,com.android.dx.rop.code.RegisterSpec) -> H
    void onSourcesChanged(com.android.dx.ssa.SsaInsn,com.android.dx.rop.code.RegisterSpecList) -> I
    void removeFromUseList(com.android.dx.ssa.SsaInsn,com.android.dx.rop.code.RegisterSpecList) -> J
    void returnSpareRegisters() -> K
    void setBackMode() -> L
    void setNewRegCount(int) -> M
    void updateOneDefinition(com.android.dx.ssa.SsaInsn,com.android.dx.rop.code.RegisterSpec) -> N
    com.android.dx.ssa.SsaInsn[] access$000(com.android.dx.ssa.SsaMethod) -> a
    java.util.ArrayList[] access$100(com.android.dx.ssa.SsaMethod) -> b
    java.util.BitSet bitSetFromLabelList(com.android.dx.rop.code.BasicBlockList,com.android.dx.util.IntList) -> c
    int blockIndexToRopLabel(int) -> d
    int borrowSpareRegister(int) -> e
    void buildUseList() -> f
    java.util.BitSet computeReachability() -> g
    void convertRopToSsaBlocks(com.android.dx.rop.code.RopMethod) -> h
    void deleteInsns(java.util.Set) -> i
    void forEachBlockDepthFirst(boolean,com.android.dx.ssa.SsaBasicBlock$Visitor) -> j
    void forEachBlockDepthFirstDom(com.android.dx.ssa.SsaBasicBlock$Visitor) -> k
    void forEachInsn(com.android.dx.ssa.SsaInsn$Visitor) -> l
    java.util.ArrayList getBlocks() -> m
    com.android.dx.ssa.SsaInsn getDefinitionForRegister(int) -> n
    com.android.dx.ssa.SsaBasicBlock getEntryBlock() -> o
    int getEntryBlockIndex() -> p
    com.android.dx.ssa.SsaBasicBlock getExitBlock() -> q
    int getExitBlockIndex() -> r
    com.android.dx.ssa.SsaInsn getGoto(com.android.dx.ssa.SsaBasicBlock) -> s
    int getParamWidth() -> t
    int getRegCount() -> u
    java.util.ArrayList[] getUseListCopy() -> v
    java.util.List getUseListForRegister(int) -> w
    com.android.dx.util.IntList indexListFromLabelList(com.android.dx.rop.code.BasicBlockList,com.android.dx.util.IntList) -> x
    boolean isRegALocal(com.android.dx.rop.code.RegisterSpec) -> y
    void makeExitBlock() -> z
com.android.dx.ssa.SsaMethod$1 -> u.v$a:
    com.android.dx.ssa.SsaMethod this$0 -> a
    void visitPhiInsn(com.android.dx.ssa.PhiInsn) -> a
    void visitNonMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> b
    void visitMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> c
com.android.dx.ssa.SsaMethod$2 -> u.v$b:
    com.android.dx.ssa.SsaMethod this$0 -> a
    void visitPhiInsn(com.android.dx.ssa.PhiInsn) -> a
    void visitNonMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> b
    void visitMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> c
    void addToUses(com.android.dx.ssa.SsaInsn) -> d
com.android.dx.ssa.SsaRenamer -> u.w:
    com.android.dx.ssa.SsaMethod ssaMeth -> a
    com.android.dx.rop.code.RegisterSpec[][] startsForBlocks -> e
    java.util.ArrayList ssaRegToLocalItems -> f
    int threshold -> d
    int nextSsaReg -> b
    int ropRegCount -> c
    com.android.dx.rop.code.RegisterSpec[][] access$000(com.android.dx.ssa.SsaRenamer) -> a
    int access$100(com.android.dx.ssa.SsaRenamer) -> b
    int access$108(com.android.dx.ssa.SsaRenamer) -> c
    com.android.dx.ssa.SsaMethod access$1100(com.android.dx.ssa.SsaRenamer) -> d
    com.android.dx.rop.code.RegisterSpec[] access$300(com.android.dx.rop.code.RegisterSpec[]) -> e
    void access$400(com.android.dx.ssa.SsaRenamer,com.android.dx.rop.code.RegisterSpec) -> f
    com.android.dx.rop.code.LocalItem access$500(com.android.dx.ssa.SsaRenamer,int) -> g
    boolean access$600(java.lang.Object,java.lang.Object) -> h
    int access$700(com.android.dx.ssa.SsaRenamer) -> i
    boolean access$800(com.android.dx.ssa.SsaRenamer,int) -> j
    boolean access$900(com.android.dx.ssa.SsaRenamer,int) -> k
    com.android.dx.rop.code.RegisterSpec[] dupArray(com.android.dx.rop.code.RegisterSpec[]) -> l
    boolean equalsHandlesNulls(java.lang.Object,java.lang.Object) -> m
    com.android.dx.rop.code.LocalItem getLocalForNewReg(int) -> n
    boolean isBelowThresholdRegister(int) -> o
    boolean isVersionZeroRegister(int) -> p
    void setNameForSsaReg(com.android.dx.rop.code.RegisterSpec) -> q
com.android.dx.ssa.SsaRenamer$1 -> u.w$a:
    com.android.dx.ssa.SsaRenamer this$0 -> a
    void visitBlock(com.android.dx.ssa.SsaBasicBlock,com.android.dx.ssa.SsaBasicBlock) -> a
com.android.dx.ssa.SsaRenamer$BlockRenamer -> u.w$b:
    com.android.dx.rop.code.RegisterSpec[] currentMapping -> b
    java.util.HashSet movesToKeep -> c
    java.util.HashMap insnsToReplace -> d
    com.android.dx.ssa.SsaBasicBlock block -> a
    com.android.dx.ssa.SsaRenamer$BlockRenamer$RenamingMapper mapper -> e
    com.android.dx.ssa.SsaRenamer this$0 -> f
    void visitPhiInsn(com.android.dx.ssa.PhiInsn) -> a
    void visitNonMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> b
    void visitMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> c
    com.android.dx.ssa.SsaBasicBlock access$1000(com.android.dx.ssa.SsaRenamer$BlockRenamer) -> d
    com.android.dx.rop.code.RegisterSpec[] access$200(com.android.dx.ssa.SsaRenamer$BlockRenamer) -> e
    void addMapping(int,com.android.dx.rop.code.RegisterSpec) -> f
    void process() -> g
    void processResultReg(com.android.dx.ssa.SsaInsn) -> h
    void updateSuccessorPhis() -> i
com.android.dx.ssa.SsaRenamer$BlockRenamer$1 -> u.w$b$a:
    com.android.dx.ssa.SsaRenamer$BlockRenamer this$1 -> a
    void visitPhiInsn(com.android.dx.ssa.PhiInsn) -> a
com.android.dx.ssa.SsaRenamer$BlockRenamer$RenamingMapper -> u.w$b$b:
    com.android.dx.ssa.SsaRenamer$BlockRenamer this$1 -> a
    int getNewRegisterCount() -> a
    com.android.dx.rop.code.RegisterSpec map(com.android.dx.rop.code.RegisterSpec) -> b
com.android.dx.ssa.back.FirstFitLocalCombiningAllocator -> v.a:
    java.util.BitSet ssaRegsMapped -> g
    java.util.Map localVariables -> c
    java.util.BitSet usedRopRegs -> k
    java.util.BitSet reservedRopRegs -> j
    int paramRangeEnd -> i
    boolean minimizeRegisters -> l
    java.util.ArrayList phiInsns -> f
    java.util.ArrayList invokeRangeInsns -> e
    java.util.ArrayList moveResultPseudoInsns -> d
    com.android.dx.ssa.InterferenceRegisterMapper mapper -> h
    void handleLocalAssociatedParams() -> A
    void handleNormalUnassociated() -> B
    void handlePhiInsns() -> C
    void handleUnassociatedParameters() -> D
    boolean isEven(int) -> E
    void markReserved(int,int) -> F
    void processPhiInsn(com.android.dx.ssa.PhiInsn) -> G
    boolean rangeContainsReserved(int,int) -> H
    boolean spansParamRange(int,int) -> I
    com.android.dx.rop.code.RegisterSpecList ssaSetToSpecs(com.android.dx.util.IntSet) -> J
    boolean tryMapReg(com.android.dx.rop.code.RegisterSpec,int,int) -> K
    boolean tryMapRegs(java.util.ArrayList,int,int,boolean) -> L
    com.android.dx.ssa.RegisterMapper allocateRegisters() -> a
    boolean wantsParamsMovedHigh() -> d
    boolean access$100(int) -> e
    java.util.Map access$200(com.android.dx.ssa.back.FirstFitLocalCombiningAllocator) -> f
    java.util.ArrayList access$300(com.android.dx.ssa.back.FirstFitLocalCombiningAllocator) -> g
    java.util.ArrayList access$400(com.android.dx.ssa.back.FirstFitLocalCombiningAllocator) -> h
    java.util.ArrayList access$500(com.android.dx.ssa.back.FirstFitLocalCombiningAllocator) -> i
    void addMapping(com.android.dx.rop.code.RegisterSpec,int) -> j
    void adjustAndMapSourceRangeRange(com.android.dx.ssa.NormalSsaInsn) -> k
    void analyzeInstructions() -> l
    boolean canMapReg(com.android.dx.rop.code.RegisterSpec,int) -> m
    boolean canMapRegs(java.util.ArrayList,int) -> n
    int findAnyFittingRange(com.android.dx.ssa.NormalSsaInsn,int,int[],java.util.BitSet) -> o
    int findNextUnreservedRopReg(int,int) -> p
    int findNextUnreservedRopReg(int,int,com.android.dx.ssa.back.FirstFitLocalCombiningAllocator$Alignment) -> q
    int findRangeAndAdjust(com.android.dx.ssa.NormalSsaInsn) -> r
    int findRopRegForLocal(int,int) -> s
    int fitPlanForRange(int,com.android.dx.ssa.NormalSsaInsn,int[],java.util.BitSet) -> t
    com.android.dx.ssa.back.FirstFitLocalCombiningAllocator$Alignment getAlignment(int) -> u
    com.android.dx.rop.code.LocalItem getLocalItemForReg(int) -> v
    int getParameterIndexForReg(int) -> w
    void handleCheckCastResults() -> x
    void handleInvokeRangeInsns() -> y
    void handleLocalAssociatedOther() -> z
com.android.dx.ssa.back.FirstFitLocalCombiningAllocator$1 -> v.a$a:
    com.android.dx.ssa.back.FirstFitLocalCombiningAllocator this$0 -> a
    void visitPhiInsn(com.android.dx.ssa.PhiInsn) -> a
    void visitNonMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> b
    void visitMoveInsn(com.android.dx.ssa.NormalSsaInsn) -> c
    void processInsn(com.android.dx.ssa.SsaInsn) -> d
com.android.dx.ssa.back.FirstFitLocalCombiningAllocator$Alignment -> v.a$b:
    com.android.dx.ssa.back.FirstFitLocalCombiningAllocator$Alignment[] $VALUES -> d
    com.android.dx.ssa.back.FirstFitLocalCombiningAllocator$Alignment UNSPECIFIED -> c
    com.android.dx.ssa.back.FirstFitLocalCombiningAllocator$Alignment ODD -> b
    com.android.dx.ssa.back.FirstFitLocalCombiningAllocator$Alignment EVEN -> a
    int nextClearBit(java.util.BitSet,int) -> a
com.android.dx.ssa.back.FirstFitLocalCombiningAllocator$Alignment$1 -> v.a$b$a:
    int nextClearBit(java.util.BitSet,int) -> a
com.android.dx.ssa.back.FirstFitLocalCombiningAllocator$Alignment$2 -> v.a$b$b:
    int nextClearBit(java.util.BitSet,int) -> a
com.android.dx.ssa.back.FirstFitLocalCombiningAllocator$Alignment$3 -> v.a$b$c:
    int nextClearBit(java.util.BitSet,int) -> a
com.android.dx.ssa.back.FirstFitLocalCombiningAllocator$Multiset -> v.a$c:
    int[] count -> b
    int[] reg -> a
    int size -> c
    void add(int) -> a
    int getAndRemoveHighestCount() -> b
    int getSize() -> c
com.android.dx.ssa.back.IdenticalBlockCombiner -> v.b:
    com.android.dx.rop.code.RopMethod ropMethod -> a
    com.android.dx.rop.code.BasicBlockList blocks -> b
    com.android.dx.rop.code.BasicBlockList newBlocks -> c
    void combineBlocks(int,com.android.dx.util.IntList) -> a
    boolean compareInsns(com.android.dx.rop.code.BasicBlock,com.android.dx.rop.code.BasicBlock) -> b
    com.android.dx.rop.code.RopMethod process() -> c
    void replaceSucc(com.android.dx.rop.code.BasicBlock,int,int) -> d
com.android.dx.ssa.back.InterferenceGraph -> v.c:
    java.util.ArrayList interference -> a
    void add(int,int) -> a
    void ensureCapacity(int) -> b
    void mergeInterferenceSet(int,com.android.dx.util.IntSet) -> c
com.android.dx.ssa.back.LivenessAnalyzer -> v.d:
    com.android.dx.ssa.SsaBasicBlock blockN -> f
    com.android.dx.ssa.SsaMethod ssaMeth -> d
    com.android.dx.ssa.back.InterferenceGraph interference -> e
    int statementIndex -> g
    java.util.BitSet visitedBlocks -> a
    java.util.BitSet liveOutBlocks -> b
    int regV -> c
    com.android.dx.ssa.back.LivenessAnalyzer$NextFunction nextFunction -> h
    void coInterferePhiRegisters(com.android.dx.ssa.back.InterferenceGraph,com.android.dx.rop.code.RegisterSpec,com.android.dx.rop.code.RegisterSpecList) -> a
    void coInterferePhis(com.android.dx.ssa.SsaMethod,com.android.dx.ssa.back.InterferenceGraph) -> b
    com.android.dx.ssa.back.InterferenceGraph constructInterferenceGraph(com.android.dx.ssa.SsaMethod) -> c
    void handleTailRecursion() -> d
    void liveInAtStatement() -> e
    void liveOutAtBlock() -> f
    void liveOutAtStatement() -> g
    void run() -> h
com.android.dx.ssa.back.LivenessAnalyzer$1 -> v.d$a:
    int[] $SwitchMap$com$android$dx$ssa$back$LivenessAnalyzer$NextFunction -> a
com.android.dx.ssa.back.LivenessAnalyzer$NextFunction -> v.d$b:
    com.android.dx.ssa.back.LivenessAnalyzer$NextFunction LIVE_IN_AT_STATEMENT -> a
    com.android.dx.ssa.back.LivenessAnalyzer$NextFunction[] $VALUES -> e
    com.android.dx.ssa.back.LivenessAnalyzer$NextFunction LIVE_OUT_AT_STATEMENT -> b
    com.android.dx.ssa.back.LivenessAnalyzer$NextFunction LIVE_OUT_AT_BLOCK -> c
    com.android.dx.ssa.back.LivenessAnalyzer$NextFunction DONE -> d
com.android.dx.ssa.back.RegisterAllocator -> v.e:
    com.android.dx.ssa.SsaMethod ssaMeth -> a
    com.android.dx.ssa.back.InterferenceGraph interference -> b
    com.android.dx.ssa.RegisterMapper allocateRegisters() -> a
    com.android.dx.rop.code.RegisterSpec getDefinitionSpecForSsaReg(int) -> b
    com.android.dx.rop.code.RegisterSpec insertMoveBefore(com.android.dx.ssa.SsaInsn,com.android.dx.rop.code.RegisterSpec) -> c
    boolean wantsParamsMovedHigh() -> d
com.android.dx.ssa.back.SsaToRop -> v.f:
    com.android.dx.ssa.SsaMethod ssaMeth -> a
    boolean minimizeRegisters -> b
    com.android.dx.ssa.back.InterferenceGraph interference -> c
    com.android.dx.rop.code.RopMethod convert() -> a
    com.android.dx.rop.code.BasicBlock convertBasicBlock(com.android.dx.ssa.SsaBasicBlock) -> b
    com.android.dx.rop.code.BasicBlockList convertBasicBlocks() -> c
    com.android.dx.rop.code.InsnList convertInsns(java.util.ArrayList) -> d
    com.android.dx.rop.code.RopMethod convertToRopMethod(com.android.dx.ssa.SsaMethod,boolean) -> e
    void moveParametersToHighRegisters() -> f
    void removeEmptyGotos() -> g
    void removePhiFunctions() -> h
    void verifyValidExitPredecessor(com.android.dx.ssa.SsaBasicBlock) -> i
com.android.dx.ssa.back.SsaToRop$1 -> v.f$a:
    com.android.dx.ssa.back.SsaToRop this$0 -> b
    java.util.ArrayList val$blocks -> a
    void visitBlock(com.android.dx.ssa.SsaBasicBlock,com.android.dx.ssa.SsaBasicBlock) -> a
com.android.dx.ssa.back.SsaToRop$PhiVisitor -> v.f$b:
    java.util.ArrayList blocks -> a
    void visitPhiInsn(com.android.dx.ssa.PhiInsn) -> a
com.android.dx.util.AnnotatedOutput -> w.a:
    void annotate(java.lang.String) -> a
    boolean isVerbose() -> c
    int getAnnotationWidth() -> e
    void endAnnotation() -> g
    boolean annotates() -> h
    void annotate(int,java.lang.String) -> i
com.android.dx.util.BitIntSet -> w.b:
    int[] bits -> a
    void merge(com.android.dx.util.IntSet) -> a
    boolean has(int) -> b
    int elements() -> c
    void ensureCapacity(int) -> d
com.android.dx.util.BitIntSet$1 -> w.b$a:
    com.android.dx.util.BitIntSet this$0 -> b
    int idx -> a
com.android.dx.util.Bits -> w.c:
    boolean anyInRange(int[],int,int) -> a
    int bitCount(int[]) -> b
    void clear(int[],int) -> c
    int findFirst(int,int) -> d
    int findFirst(int[],int) -> e
    boolean get(int[],int) -> f
    int getMax(int[]) -> g
    boolean isEmpty(int[]) -> h
    int[] makeBitSet(int) -> i
    void or(int[],int[]) -> j
    void set(int[],int) -> k
    void set(int[],int,boolean) -> l
com.android.dx.util.ByteArray -> w.d:
    byte[] bytes -> a
    int start -> b
    int size -> c
    int access$000(com.android.dx.util.ByteArray) -> a
    int access$100(com.android.dx.util.ByteArray,int) -> b
    byte[] access$200(com.android.dx.util.ByteArray) -> c
    int access$300(com.android.dx.util.ByteArray) -> d
    void checkOffsets(int,int) -> e
    int getByte(int) -> f
    int getByte0(int) -> g
    void getBytes(byte[],int) -> h
    int getInt(int) -> i
    long getLong(int) -> j
    int getShort(int) -> k
    int getUnsignedByte(int) -> l
    int getUnsignedByte0(int) -> m
    int getUnsignedShort(int) -> n
    com.android.dx.util.ByteArray$MyDataInputStream makeDataInputStream() -> o
    com.android.dx.util.ByteArray$MyInputStream makeInputStream() -> p
    int size() -> q
    com.android.dx.util.ByteArray slice(int,int) -> r
com.android.dx.util.ByteArray$MyDataInputStream -> w.d$a:
    com.android.dx.util.ByteArray$MyInputStream wrapped -> a
com.android.dx.util.ByteArray$MyInputStream -> w.d$b:
    int mark -> b
    com.android.dx.util.ByteArray this$0 -> c
    int cursor -> a
com.android.dx.util.ByteArrayAnnotatedOutput -> w.e:
    byte[] data -> b
    int annotationWidth -> f
    int hexCols -> g
    java.util.ArrayList annotations -> e
    boolean stretchy -> a
    int cursor -> c
    boolean verbose -> d
    void annotate(java.lang.String) -> a
    void write(com.android.dx.util.ByteArray) -> b
    boolean isVerbose() -> c
    int writeUleb128(int) -> d
    int getAnnotationWidth() -> e
    int getCursor() -> f
    void endAnnotation() -> g
    boolean annotates() -> h
    void annotate(int,java.lang.String) -> i
    void writeZeroes(int) -> j
    void assertCursor(int) -> k
    void alignTo(int) -> l
    void enableAnnotations(int,boolean) -> m
    void ensureCapacity(int) -> n
    void finishAnnotating() -> o
    byte[] getArray() -> p
    void throwBounds() -> q
    byte[] toByteArray() -> r
    void write(byte[],int,int) -> s
    void writeAnnotationsTo(java.io.Writer) -> t
    int writeSleb128(int) -> u
com.android.dx.util.ByteArrayAnnotatedOutput$Annotation -> w.e$a:
    int end -> b
    java.lang.String text -> c
    int start -> a
    int getEnd() -> a
    int getStart() -> b
    java.lang.String getText() -> c
    void setEnd(int) -> d
    void setEndIfUnset(int) -> e
com.android.dx.util.FixedSizeList -> w.f:
    java.lang.Object[] arr -> b
    java.lang.String toHuman() -> i
    java.lang.Object get0(int) -> r
    java.lang.Object getOrNull0(int) -> s
    void set0(int,java.lang.Object) -> t
    void shrinkToFit() -> u
    java.lang.Object throwIndex(int) -> v
    java.lang.String toHuman(java.lang.String,java.lang.String,java.lang.String) -> w
    java.lang.String toString(java.lang.String,java.lang.String,java.lang.String) -> x
    java.lang.String toString0(java.lang.String,java.lang.String,java.lang.String,boolean) -> y
com.android.dx.util.Hex -> w.g:
    java.lang.String dump(byte[],int,int,int,int,int) -> a
    java.lang.String s1(int) -> b
    java.lang.String s2(int) -> c
    java.lang.String s4(int) -> d
    java.lang.String s8(long) -> e
    java.lang.String u1(int) -> f
    java.lang.String u2(int) -> g
    java.lang.String u2or4(int) -> h
    java.lang.String u3(int) -> i
    java.lang.String u4(int) -> j
    java.lang.String u8(long) -> k
    java.lang.String uNibble(int) -> l
com.android.dx.util.IndentingWriter -> w.h:
    boolean collectingIndent -> e
    int indent -> f
    java.lang.String prefix -> a
    int column -> d
    int width -> b
    int maxIndent -> c
    void bol() -> a
com.android.dx.util.IntIterator -> w.i:
com.android.dx.util.IntList -> w.j:
    int[] values -> b
    com.android.dx.util.IntList EMPTY -> e
    int size -> c
    boolean sorted -> d
    com.android.dx.util.IntList mutableCopy() -> A
    int pop() -> B
    void removeIndex(int) -> C
    void set(int,int) -> D
    void shrink(int) -> E
    void sort() -> F
    int top() -> G
    void add(int) -> r
    int binarysearch(int) -> s
    boolean contains(int) -> t
    int get(int) -> u
    void growIfNeeded() -> v
    int indexOf(int) -> w
    void insert(int,int) -> x
    com.android.dx.util.IntList makeImmutable(int) -> y
    com.android.dx.util.IntList makeImmutable(int,int) -> z
com.android.dx.util.IntSet -> w.k:
    void merge(com.android.dx.util.IntSet) -> a
    boolean has(int) -> b
    int elements() -> c
com.android.dx.util.LabeledItem -> w.l:
    int getLabel() -> a
com.android.dx.util.LabeledList -> w.m:
    com.android.dx.util.IntList labelToIndex -> c
    int getMaxLabel() -> A
    int indexOfLabel(int) -> B
    void rebuildLabelToIndex() -> C
    void removeLabel(int) -> D
    void set(int,com.android.dx.util.LabeledItem) -> E
    void shrinkToFit() -> u
    void addLabelIndex(int,int) -> z
com.android.dx.util.ListIntSet -> w.n:
    com.android.dx.util.IntList ints -> a
    void merge(com.android.dx.util.IntSet) -> a
    boolean has(int) -> b
    int elements() -> c
com.android.dx.util.ListIntSet$1 -> w.n$a:
    com.android.dx.util.ListIntSet this$0 -> b
    int idx -> a
com.android.dx.util.MutabilityControl -> w.o:
    boolean mutable -> a
    boolean isMutable() -> a
    boolean isImmutable() -> n
    void setImmutable() -> o
    void throwIfImmutable() -> p
    void throwIfMutable() -> q
com.android.dx.util.MutabilityException -> w.p:
com.android.dx.util.Output -> w.q:
    void write(com.android.dx.util.ByteArray) -> b
    int writeUleb128(int) -> d
    int getCursor() -> f
    void writeZeroes(int) -> j
    void assertCursor(int) -> k
    void alignTo(int) -> l
com.android.dx.util.ToHuman -> w.r:
    java.lang.String toHuman() -> i
com.android.dx.util.TwoColumnOutput -> w.s:
    java.lang.StringBuffer leftBuf -> c
    java.lang.StringBuffer rightBuf -> d
    java.io.Writer out -> a
    int leftWidth -> b
    com.android.dx.util.IndentingWriter leftColumn -> e
    com.android.dx.util.IndentingWriter rightColumn -> f
    void appendNewlineIfNecessary(java.lang.StringBuffer,java.io.Writer) -> a
    void flush() -> b
    void flushLeft() -> c
    void flushRight() -> d
    java.io.Writer getLeft() -> e
    java.io.Writer getRight() -> f
    void outputFullLines() -> g
    java.lang.String toString(java.lang.String,int,java.lang.String,java.lang.String,int) -> h
    void writeSpaces(java.io.Writer,int) -> i
com.android.dx.util.Warning -> w.t:
com.faendir.rhino_android.AndroidContextFactory -> x.a:
    java.io.File cacheDirectory -> a
    com.faendir.rhino_android.BaseAndroidClassLoader createClassLoader(java.lang.ClassLoader) -> a
com.faendir.rhino_android.BaseAndroidClassLoader -> x.b:
    com.android.dex.Dex getLastDex() -> a
    java.lang.Class loadClass(com.android.dex.Dex,java.lang.String) -> b
    void reset() -> c
com.faendir.rhino_android.BaseAndroidClassLoader$FatalLoadingException -> x.b$a:
com.faendir.rhino_android.FileAndroidClassLoader -> x.c:
    java.io.File dexFile -> a
    int instanceCounter -> b
    com.android.dex.Dex getLastDex() -> a
    java.lang.Class loadClass(com.android.dex.Dex,java.lang.String) -> b
    void reset() -> c
com.faendir.rhino_android.InMemoryAndroidClassLoader -> x.d:
    com.android.dex.Dex last -> a
    com.android.dex.Dex getLastDex() -> a
    java.lang.Class loadClass(com.android.dex.Dex,java.lang.String) -> b
    void reset() -> c
com.faendir.rhino_android.NoSecurityController -> x.e:
com.faendir.rhino_android.RhinoAndroidHelper -> x.f:
    java.io.File cacheDirectory -> a
    org.mozilla.javascript.Context enterContext() -> a
    com.faendir.rhino_android.AndroidContextFactory getContextFactory() -> b
com.huangyx.ca.AccessibilitySvc -> com.huangyx.ca.AccessibilitySvc:
    com.huangyx.ca.AccessibilitySvc$ServiceLifeCycleListener mLifeCycleListener -> b
    java.lang.ref.WeakReference instance -> a
    com.huangyx.ca.AccessibilitySvc getInstance() -> a
    void goToAccessibilitySetting(android.content.Context) -> b
    void notifyKeyEvent(android.view.KeyEvent) -> c
    void setLifeCycleListener(com.huangyx.ca.AccessibilitySvc$ServiceLifeCycleListener) -> d
com.huangyx.ca.AccessibilitySvc$ServiceLifeCycleListener -> com.huangyx.ca.AccessibilitySvc$a:
    void onCreate() -> b
    void onDestroy() -> e
com.huangyx.ca.AdProvider -> com.huangyx.ca.a:
    com.huangyx.ca.AdProvider$ADListener mADListener -> a
    java.lang.String mMessage -> i
    java.lang.ref.WeakReference mActivity -> j
    com.huangyx.ca.AdProvider sInstance -> m
    long mPresentTime -> f
    com.huangyx.ca.AdProvider$Listener mListener -> k
    int mPresentDuration -> g
    com.huangyx.ca.AdProvider$OnCompleteListener mOnCompleteListener -> l
    boolean mDispatchWhenResume -> e
    boolean mAutoSkip -> h
    boolean mPaid -> b
    boolean mCompleted -> c
    boolean mPaused -> d
    int access$002(com.huangyx.ca.AdProvider,int) -> a
    long access$100(com.huangyx.ca.AdProvider) -> b
    boolean access$200(com.huangyx.ca.AdProvider) -> c
    boolean access$302(com.huangyx.ca.AdProvider,boolean) -> d
    void access$400(com.huangyx.ca.AdProvider,boolean,java.lang.String) -> e
    com.huangyx.ca.AdProvider$Listener access$500(com.huangyx.ca.AdProvider) -> f
    void dispatchComplete(boolean,java.lang.String) -> g
    void dispatchCompleteCheckSkip(boolean,java.lang.String) -> h
    com.huangyx.ca.AdProvider getInstance() -> i
    boolean isCompleted() -> j
    void pause() -> k
    void prepare(android.app.Activity,android.view.ViewGroup,android.view.View,com.huangyx.ca.AdProvider$Listener) -> l
    void release() -> m
    void reportError(int,java.lang.String) -> n
    void resume() -> o
    void runAfterComplete(com.huangyx.ca.AdProvider$OnCompleteListener) -> p
com.huangyx.ca.AdProvider$ADListener -> com.huangyx.ca.a$a:
    com.huangyx.ca.AdProvider this$0 -> a
    void onADDismissed() -> a
com.huangyx.ca.AdProvider$Listener -> com.huangyx.ca.a$b:
    void onComplete() -> a
com.huangyx.ca.AdProvider$OnCompleteListener -> com.huangyx.ca.a$c:
    void onComplete(com.huangyx.ca.AdProvider,boolean,java.lang.String) -> d
com.huangyx.ca.AddLibraryActivity -> com.huangyx.ca.AddLibraryActivity:
    void processIntent() -> a
com.huangyx.ca.BugReportActivity -> com.huangyx.ca.BugReportActivity:
    void $r8$lambda$AtAp1q1AD-QiILMMJSyPNNEPVp0(com.huangyx.ca.BugReportActivity,android.content.DialogInterface,int) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$Lmj_FoyZhlINXmQK6AVlNSCahtg(com.huangyx.ca.BugReportActivity,int,android.content.DialogInterface,int) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$p8V4cDJ6g4Igbfy8p-WTqCKYPWk(com.huangyx.ca.BugReportActivity,java.lang.String,android.content.DialogInterface,int) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.Intent createIntent(android.content.Context,java.lang.String,int) -> d
    void lambda$onCreate$0(java.lang.String,android.content.DialogInterface,int) -> e
    void lambda$onCreate$1(android.content.DialogInterface,int) -> f
    void lambda$onCreate$2(int,android.content.DialogInterface,int) -> g
    void setClipText(java.lang.String) -> h
com.huangyx.ca.BugReportActivity$$ExternalSyntheticLambda0 -> y.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String com.huangyx.ca.BugReportActivity$$InternalSyntheticLambda$1$c08fc94f718cffb8de80a438b2fde459e4a82a3b866149b80a4998cb1aa0af1f$0.f$1 -> b
    com.huangyx.ca.BugReportActivity com.huangyx.ca.BugReportActivity$$InternalSyntheticLambda$1$c08fc94f718cffb8de80a438b2fde459e4a82a3b866149b80a4998cb1aa0af1f$0.f$0 -> a
    void com.huangyx.ca.BugReportActivity$$InternalSyntheticLambda$1$c08fc94f718cffb8de80a438b2fde459e4a82a3b866149b80a4998cb1aa0af1f$0.<init>(com.huangyx.ca.BugReportActivity,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.huangyx.ca.BugReportActivity$$InternalSyntheticLambda$1$c08fc94f718cffb8de80a438b2fde459e4a82a3b866149b80a4998cb1aa0af1f$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.huangyx.ca.BugReportActivity$$ExternalSyntheticLambda1 -> y.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.huangyx.ca.BugReportActivity com.huangyx.ca.BugReportActivity$$InternalSyntheticLambda$1$c08fc94f718cffb8de80a438b2fde459e4a82a3b866149b80a4998cb1aa0af1f$1.f$0 -> a
    void com.huangyx.ca.BugReportActivity$$InternalSyntheticLambda$1$c08fc94f718cffb8de80a438b2fde459e4a82a3b866149b80a4998cb1aa0af1f$1.<init>(com.huangyx.ca.BugReportActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.huangyx.ca.BugReportActivity$$InternalSyntheticLambda$1$c08fc94f718cffb8de80a438b2fde459e4a82a3b866149b80a4998cb1aa0af1f$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.huangyx.ca.BugReportActivity$$ExternalSyntheticLambda2 -> y.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int com.huangyx.ca.BugReportActivity$$InternalSyntheticLambda$1$c08fc94f718cffb8de80a438b2fde459e4a82a3b866149b80a4998cb1aa0af1f$2.f$1 -> b
    com.huangyx.ca.BugReportActivity com.huangyx.ca.BugReportActivity$$InternalSyntheticLambda$1$c08fc94f718cffb8de80a438b2fde459e4a82a3b866149b80a4998cb1aa0af1f$2.f$0 -> a
    void com.huangyx.ca.BugReportActivity$$InternalSyntheticLambda$1$c08fc94f718cffb8de80a438b2fde459e4a82a3b866149b80a4998cb1aa0af1f$2.<init>(com.huangyx.ca.BugReportActivity,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.huangyx.ca.BugReportActivity$$InternalSyntheticLambda$1$c08fc94f718cffb8de80a438b2fde459e4a82a3b866149b80a4998cb1aa0af1f$2.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.huangyx.ca.EditCommandActivity -> com.huangyx.ca.EditCommandActivity:
    void processIntent() -> a
com.huangyx.ca.ForegroundTaskActivity -> com.huangyx.ca.ForegroundTaskActivity:
    com.huangyx.ca.ForegroundTaskActivity$Delegee mDelegee -> a
    boolean mModal -> b
com.huangyx.ca.ForegroundTaskActivity$$ExternalSyntheticLambda0 -> y.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.huangyx.ca.ForegroundTaskActivity com.huangyx.ca.ForegroundTaskActivity$$InternalSyntheticLambda$1$ecbc9c1b7b4d98ceab6424359903358bd5b1b3237bfe8fb953925f30739e231b$0.f$0 -> a
    void com.huangyx.ca.ForegroundTaskActivity$$InternalSyntheticLambda$1$ecbc9c1b7b4d98ceab6424359903358bd5b1b3237bfe8fb953925f30739e231b$0.<init>(com.huangyx.ca.ForegroundTaskActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.huangyx.ca.ForegroundTaskActivity$$InternalSyntheticLambda$1$ecbc9c1b7b4d98ceab6424359903358bd5b1b3237bfe8fb953925f30739e231b$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.huangyx.ca.GameBridgeService -> com.huangyx.ca.GameBridgeService:
    com.huangyx.ca.GameBridgeService$Callback mCallback -> c
    android.os.Handler mHandler -> a
    java.util.List mQueue -> d
    java.lang.ref.WeakReference instance -> b
    boolean isConnected() -> a
    void removeCallback() -> b
    void runMain() -> c
    void setCallback(com.huangyx.ca.GameBridgeService$Callback) -> d
com.huangyx.ca.GameBridgeService$Callback -> com.huangyx.ca.GameBridgeService$a:
com.huangyx.ca.MCAdapter -> com.huangyx.ca.MCAdapter:
    android.content.Context mContext -> a
    android.os.Messenger mRemote -> f
    android.os.Messenger mClient -> g
    java.lang.String newVer -> i
    int mPID -> j
    android.os.Handler mHandler -> b
    boolean mConnected -> e
    int version -> d
    android.os.Bundle mInfo -> h
    java.lang.String clientName -> c
    void $r8$lambda$d1YvmW2tBo9cAFltLT0LoFHlN4M(com.huangyx.ca.MCAdapter,java.lang.String) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    boolean access$000(com.huangyx.ca.MCAdapter) -> b
    android.os.Handler access$100(com.huangyx.ca.MCAdapter) -> c
    void lambda$toast$0(java.lang.String) -> d
com.huangyx.ca.MCAdapter$$ExternalSyntheticLambda0 -> y.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.huangyx.ca.MCAdapter com.huangyx.ca.MCAdapter$$InternalSyntheticLambda$1$076d79d77af9dbac6b3d74035820012ddd054393d130c23b0c5394ae40afeca5$0.f$0 -> a
    java.lang.String com.huangyx.ca.MCAdapter$$InternalSyntheticLambda$1$076d79d77af9dbac6b3d74035820012ddd054393d130c23b0c5394ae40afeca5$0.f$1 -> b
    void com.huangyx.ca.MCAdapter$$InternalSyntheticLambda$1$076d79d77af9dbac6b3d74035820012ddd054393d130c23b0c5394ae40afeca5$0.<init>(com.huangyx.ca.MCAdapter,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.huangyx.ca.MCAdapter$$InternalSyntheticLambda$1$076d79d77af9dbac6b3d74035820012ddd054393d130c23b0c5394ae40afeca5$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.huangyx.ca.MCAdapter$ConnectCommand -> com.huangyx.ca.MCAdapter$a:
    com.huangyx.ca.MCAdapter this$0 -> a
com.huangyx.ca.MainActivity -> com.huangyx.ca.MainActivity:
    void processIntent() -> a
com.huangyx.ca.PermissionRequestActivity -> com.huangyx.ca.PermissionRequestActivity:
    com.huangyx.ca.PermissionRequestActivity$Callback mCallback -> a
    void $r8$lambda$9bpPkVjHk7SmbwTEIf8cD7Lx-rQ(com.huangyx.ca.PermissionRequestActivity,java.lang.String[],int) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    void lambda$requestPermissionsCompat$0(java.lang.String[],int) -> b
com.huangyx.ca.PermissionRequestActivity$$ExternalSyntheticLambda0 -> y.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.huangyx.ca.PermissionRequestActivity com.huangyx.ca.PermissionRequestActivity$$InternalSyntheticLambda$1$0242cd09dedd6faa09fa15e1edd0320e743d26039222d93fe276e25eeb40675e$0.f$0 -> a
    int com.huangyx.ca.PermissionRequestActivity$$InternalSyntheticLambda$1$0242cd09dedd6faa09fa15e1edd0320e743d26039222d93fe276e25eeb40675e$0.f$2 -> c
    java.lang.String[] com.huangyx.ca.PermissionRequestActivity$$InternalSyntheticLambda$1$0242cd09dedd6faa09fa15e1edd0320e743d26039222d93fe276e25eeb40675e$0.f$1 -> b
    void com.huangyx.ca.PermissionRequestActivity$$InternalSyntheticLambda$1$0242cd09dedd6faa09fa15e1edd0320e743d26039222d93fe276e25eeb40675e$0.<init>(com.huangyx.ca.PermissionRequestActivity,java.lang.String[],int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.huangyx.ca.PermissionRequestActivity$$InternalSyntheticLambda$1$0242cd09dedd6faa09fa15e1edd0320e743d26039222d93fe276e25eeb40675e$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.huangyx.ca.PermissionRequestActivity$$ExternalSyntheticLambda1 -> y.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.huangyx.ca.PermissionRequestActivity com.huangyx.ca.PermissionRequestActivity$$InternalSyntheticLambda$1$77063ad75118df5b6bc6fd891f95612f522a3a043beba866691d7df6e9425f94$0.f$0 -> a
    void com.huangyx.ca.PermissionRequestActivity$$InternalSyntheticLambda$1$77063ad75118df5b6bc6fd891f95612f522a3a043beba866691d7df6e9425f94$0.<init>(com.huangyx.ca.PermissionRequestActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.huangyx.ca.PermissionRequestActivity$$InternalSyntheticLambda$1$77063ad75118df5b6bc6fd891f95612f522a3a043beba866691d7df6e9425f94$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.huangyx.ca.Preference -> y.h:
    com.huangyx.ca.Preference sInstance -> b
    android.content.SharedPreferences mPreferences -> a
    java.lang.String getDebugSource() -> a
    com.huangyx.ca.Preference getInstance(android.content.Context) -> b
    java.lang.String getUserId() -> c
com.huangyx.ca.ReturnDataActivity -> com.huangyx.ca.ReturnDataActivity:
    android.content.Intent createIntent(android.content.Context,android.content.Intent,int) -> a
com.huangyx.ca.ScriptFileStream -> y.i:
    java.io.InputStream fromAsset(android.content.Context,java.lang.String) -> a
    java.io.InputStream fromFile(android.content.Context,java.lang.String,java.lang.String,byte[],int) -> b
    byte[] getStringHash(java.lang.String) -> c
    java.lang.Object readICode(byte[],byte[]) -> d
    java.lang.Object readScript(java.lang.String,byte[]) -> e
    byte[] writeICode(java.lang.Object,byte[]) -> f
    void writeScript(java.lang.String,byte[],java.lang.Object) -> g
com.huangyx.ca.ScriptFileStream$ICodeInputStream -> y.i$a:
    java.lang.Object readScript(byte[]) -> a
com.huangyx.ca.ScriptFileStream$ICodeOutputStream -> y.i$b:
    void writeScript(byte[],java.lang.Object) -> a
com.huangyx.ca.ScriptInterface -> com.huangyx.ca.ScriptInterface:
    java.lang.Thread mUiThread -> e
    android.os.Handler mUiHandler -> f
    com.huangyx.ca.ScriptInterface$Bridge mBridge -> h
    com.huangyx.ca.SplashActivity mBindActivity -> c
    android.content.Context mContext -> b
    com.huangyx.ca.ScriptInterface$CallbackProxy mCallbackProxy -> i
    java.lang.String mOfflineReason -> k
    boolean mOnlineMode -> j
    com.huangyx.ca.ScriptManager mManager -> a
    com.huangyx.ca.ScriptService mBindService -> d
    com.huangyx.ca.Preference mPreference -> g
    com.huangyx.ca.ScriptInterface$Bridge access$000(com.huangyx.ca.ScriptInterface) -> a
    boolean access$100(com.huangyx.ca.ScriptInterface) -> b
    boolean access$102(com.huangyx.ca.ScriptInterface,boolean) -> c
    java.lang.String access$202(com.huangyx.ca.ScriptInterface,java.lang.String) -> d
    com.huangyx.ca.ScriptManager access$300(com.huangyx.ca.ScriptInterface) -> e
com.huangyx.ca.ScriptInterface$$ExternalSyntheticApiModelOutline0 -> y.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.ComponentName com.huangyx.ca.ScriptInterface$$InternalSyntheticApiModelOutline$1$3f5d38c5af4dea02746e35908d1844db88d6f9c319cbadae830a718249274e8c$0.m(android.content.Context,android.content.Intent) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.huangyx.ca.ScriptInterface$CallbackProxy -> com.huangyx.ca.ScriptInterface$a:
    com.huangyx.ca.ScriptInterface this$0 -> a
    void onClick(com.huangyx.ca.ScriptTileService$TileConfig) -> a
    void onCreate() -> b
    void onReady(com.huangyx.ca.ScriptTileService$TileConfig) -> c
    void onComplete(com.huangyx.ca.AdProvider,boolean,java.lang.String) -> d
    void onDestroy() -> e
com.huangyx.ca.ScriptManager -> y.k:
    java.lang.String cacheDir -> g
    java.lang.ref.WeakReference instance -> l
    org.mozilla.javascript.Scriptable scope -> b
    java.lang.String debugFile -> f
    android.os.Handler handler -> c
    com.huangyx.ca.ScriptInterface scriptInterface -> e
    boolean running -> i
    java.lang.String sourceName -> j
    org.mozilla.javascript.Context cx -> a
    org.mozilla.javascript.Script compiledScript -> k
    com.huangyx.ca.ScriptManager$Hotfix hotfix -> h
    android.content.Context bindContext -> d
    org.mozilla.javascript.Context initContext() -> A
    org.mozilla.javascript.Scriptable initScope(org.mozilla.javascript.Context) -> B
    com.huangyx.ca.ScriptInterface initScriptInterface() -> C
    boolean isRunning() -> D
    void prepareScript(android.content.Context,java.lang.String,boolean) -> E
    void setCacheDir(java.lang.String) -> F
    void setHotfix(java.lang.String,java.lang.String,byte[],int) -> G
    void startScript() -> H
    void writeScriptCache(java.lang.String,java.lang.String,java.lang.String,byte[]) -> I
    com.huangyx.ca.ScriptInterface access$000(com.huangyx.ca.ScriptManager) -> a
    com.huangyx.ca.ScriptInterface access$002(com.huangyx.ca.ScriptManager,com.huangyx.ca.ScriptInterface) -> b
    org.mozilla.javascript.Context access$100(com.huangyx.ca.ScriptManager) -> c
    org.mozilla.javascript.Context access$102(com.huangyx.ca.ScriptManager,org.mozilla.javascript.Context) -> d
    org.mozilla.javascript.Scriptable access$200(com.huangyx.ca.ScriptManager) -> e
    org.mozilla.javascript.Scriptable access$202(com.huangyx.ca.ScriptManager,org.mozilla.javascript.Scriptable) -> f
    android.os.Handler access$300(com.huangyx.ca.ScriptManager) -> g
    android.os.Handler access$302(com.huangyx.ca.ScriptManager,android.os.Handler) -> h
    org.mozilla.javascript.Script access$400(com.huangyx.ca.ScriptManager) -> i
    org.mozilla.javascript.Script access$402(com.huangyx.ca.ScriptManager,org.mozilla.javascript.Script) -> j
    android.content.Context access$500(com.huangyx.ca.ScriptManager) -> k
    java.lang.String access$602(com.huangyx.ca.ScriptManager,java.lang.String) -> l
    org.mozilla.javascript.Script cachedCompileScript(java.lang.String,java.lang.String,java.io.File) -> m
    void callScriptHook(java.lang.String,java.lang.Object[]) -> n
    byte[] compileICode(java.lang.String,java.lang.String,byte[]) -> o
    com.huangyx.ca.ScriptManager createDebuggable(java.lang.String) -> p
    void endScript() -> q
    void endScript(boolean) -> r
    java.lang.Object executeICode(byte[],byte[],org.mozilla.javascript.Scriptable) -> s
    java.lang.Object executeScriptCache(java.lang.String,byte[],org.mozilla.javascript.Scriptable) -> t
    android.content.Context getBindContext() -> u
    org.mozilla.javascript.Script getCompiledScript() -> v
    com.huangyx.ca.ScriptManager getInstance() -> w
    com.huangyx.ca.ScriptInterface getScriptInterface() -> x
    java.io.Reader getScriptReader() -> y
    boolean hasInstance() -> z
com.huangyx.ca.ScriptManager$ExitCommand -> y.k$a:
    com.huangyx.ca.ScriptManager this$0 -> b
    boolean callUnload -> a
com.huangyx.ca.ScriptManager$Hotfix -> y.k$b:
    java.lang.String coreFile -> a
    int versionCode -> d
    com.huangyx.ca.ScriptManager this$0 -> e
    java.lang.String signFile -> b
    byte[] verify -> c
    java.io.InputStream getInputStream() -> a
com.huangyx.ca.ScriptManager$PrepareCommand -> y.k$c:
    com.huangyx.ca.ScriptManager this$0 -> b
    boolean runAfterPrepared -> a
com.huangyx.ca.ScriptManager$StartCommand -> y.k$d:
    com.huangyx.ca.ScriptManager this$0 -> a
com.huangyx.ca.ScriptService -> com.huangyx.ca.ScriptService:
    android.content.Intent mLastIntent -> b
    com.huangyx.ca.ScriptManager mManager -> a
    java.lang.ref.WeakReference sInstance -> c
    void checkHotfix() -> a
    android.app.Notification createNotification() -> b
    android.app.Notification$Builder createNotificationBuilder() -> c
    android.content.Intent getLastIntent() -> d
com.huangyx.ca.ScriptService$$ExternalSyntheticApiModelOutline0 -> y.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.huangyx.ca.ScriptService$$InternalSyntheticApiModelOutline$1$a1fe5134c3fc9fbb05aa55d2efb56e20f72310624c2d2047a2fccbce8651892f$0.m(android.app.NotificationManager,android.app.NotificationChannel) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.huangyx.ca.ScriptTileService -> com.huangyx.ca.ScriptTileService:
    android.os.Handler mHandler -> a
    long sLastLaunch -> g
    boolean sPending -> e
    java.lang.ref.WeakReference sInstance -> c
    boolean sPendingLaunch -> f
    com.huangyx.ca.ScriptTileService$TileListener sListener -> d
    boolean mListening -> b
    com.huangyx.ca.ScriptTileService$TileListener access$000() -> a
    android.os.Handler access$100(com.huangyx.ca.ScriptTileService) -> b
    void access$200(com.huangyx.ca.ScriptTileService,com.huangyx.ca.ScriptTileService$TileConfig) -> c
    boolean access$302(boolean) -> d
    boolean access$400() -> e
    boolean access$402(boolean) -> f
    long access$502(long) -> g
    com.huangyx.ca.ScriptTileService getInstance() -> h
    void notifyUpdate() -> i
    void postCommand(int) -> j
    void setTileListener(com.huangyx.ca.ScriptTileService$TileListener) -> k
    void updateTileDefault(com.huangyx.ca.ScriptTileService$TileConfig) -> l
com.huangyx.ca.ScriptTileService$StartAppCommand -> com.huangyx.ca.ScriptTileService$a:
    com.huangyx.ca.ScriptTileService this$0 -> a
com.huangyx.ca.ScriptTileService$TileListener -> com.huangyx.ca.ScriptTileService$b:
    void onClick(com.huangyx.ca.ScriptTileService$TileConfig) -> a
    void onReady(com.huangyx.ca.ScriptTileService$TileConfig) -> c
com.huangyx.ca.ScriptTileService$UpdateTileCommand -> com.huangyx.ca.ScriptTileService$c:
    com.huangyx.ca.ScriptTileService this$0 -> c
    com.huangyx.ca.ScriptTileService$TileConfig mConfig -> b
    int mType -> a
    com.huangyx.ca.ScriptTileService$TileConfig createTileConfig() -> a
    void updateTile(com.huangyx.ca.ScriptTileService$TileConfig) -> b
com.huangyx.ca.ScriptTileService$UpdateTileCommand$$ExternalSyntheticApiModelOutline0 -> y.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.huangyx.ca.ScriptTileService$UpdateTileCommand$$InternalSyntheticApiModelOutline$1$63666196b8eb59c68d3a81933eb9f5d746dd6b884810d64a93ba6f7b631f7b7a$0.m(android.service.quicksettings.Tile,java.lang.CharSequence) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.huangyx.ca.ScriptTileService$UpdateTileCommand$$ExternalSyntheticApiModelOutline1 -> y.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence com.huangyx.ca.ScriptTileService$UpdateTileCommand$$InternalSyntheticApiModelOutline$1$b133f9f9c949b7e66cde0bacd757a935f0b22f74e2362b09ac5ef737dbba023c$0.m(android.service.quicksettings.Tile) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.huangyx.ca.SplashActivity -> com.huangyx.ca.SplashActivity:
    android.widget.TextView mLoadingTitleView -> a
    android.widget.TextView mAdSkipView -> c
    android.widget.TextView mAdSecondsView -> d
    com.huangyx.ca.AdProvider mProvider -> e
    android.widget.FrameLayout mAdContainer -> b
    android.widget.TextView access$000(com.huangyx.ca.SplashActivity) -> a
    android.widget.TextView access$100(com.huangyx.ca.SplashActivity) -> b
    android.widget.TextView access$200(com.huangyx.ca.SplashActivity) -> c
    android.widget.FrameLayout access$300(com.huangyx.ca.SplashActivity) -> d
    void setLoadingTitle(java.lang.String) -> e
com.huangyx.ca.SplashActivity$AdListener -> com.huangyx.ca.SplashActivity$a:
    com.huangyx.ca.SplashActivity this$0 -> a
    void onComplete() -> a
com.huangyx.ca.SplashActivity$SetLoadingTitleTask -> com.huangyx.ca.SplashActivity$b:
    com.huangyx.ca.SplashActivity this$0 -> b
    java.lang.String title -> a
com.huangyx.ca.UnsafeFileProvider -> com.huangyx.ca.UnsafeFileProvider:
    java.util.Set mFiles -> a
    java.io.File getFileForUri(android.net.Uri) -> a
    android.net.Uri getUriForFile(java.io.File) -> b
    int modeToMode(java.lang.String) -> c
com.huangyx.ca.UriActionActivity -> com.huangyx.ca.UriActionActivity:
    void processIntent() -> a
com.huangyx.ca.XApplication -> com.huangyx.ca.XApplication:
    java.lang.String getPackageVersion(android.content.Context) -> a
    void reportError(android.content.Context,java.lang.Thread,java.lang.Throwable) -> b
com.huangyx.ca.XApplication$ErrorCatcher -> com.huangyx.ca.XApplication$a:
    com.huangyx.ca.XApplication this$0 -> a
com.huangyx.ca.script.RhinoFrameLayout -> com.huangyx.ca.script.RhinoFrameLayout:
    com.huangyx.ca.script.RhinoFrameLayout$Callback mCallback -> a
com.huangyx.ca.script.RhinoFrameLayout$1 -> com.huangyx.ca.script.RhinoFrameLayout$a:
com.huangyx.ca.script.RhinoFrameLayout$DefaultCallback -> com.huangyx.ca.script.RhinoFrameLayout$b:
com.huangyx.ca.script.RhinoFrameLayout$RadiusProvider -> com.huangyx.ca.script.RhinoFrameLayout$c:
    float radius -> a
    int direction -> b
com.huangyx.ca.script.RhinoWebSocketClientHelper -> com.huangyx.ca.script.RhinoWebSocketClientHelper:
    com.huangyx.ca.script.RhinoWebSocketClientHelper$DelegateInterface delegate -> x
com.huangyx.ca.script.RhinoWebSocketServerHelper -> com.huangyx.ca.script.RhinoWebSocketServerHelper:
    com.huangyx.ca.script.RhinoWebSocketServerHelper$DelegateInterface delegate -> z
com.huangyx.ca.script.RhinoWebView$ChromeClientDelegetor -> com.huangyx.ca.script.RhinoWebView$a:
    com.huangyx.ca.script.RhinoWebView$Delegee delegee -> a
    android.webkit.WebView parent -> b
com.huangyx.ca.script.RhinoWebView$IDelegator -> com.huangyx.ca.script.RhinoWebView$b:
    com.huangyx.ca.script.RhinoWebView$Delegee delegee -> a
    android.webkit.WebView parent -> b
com.huangyx.ca.script.RhinoWebView$WebViewClientDelegator -> com.huangyx.ca.script.RhinoWebView$c:
    com.huangyx.ca.script.RhinoWebView$Delegee delegee -> a
    android.webkit.WebView parent -> b
dalvik.system.InMemoryDexClassLoader -> dalvik.system.InMemoryDexClassLoader:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(java.nio.ByteBuffer,java.lang.ClassLoader) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
javax.lang.model.SourceVersion -> z.a:
    javax.lang.model.SourceVersion latestSupported() -> a
    int ordinal() -> b
org.java_websocket.AbstractWebSocket -> org.java_websocket.AbstractWebSocket:
    java.util.concurrent.ScheduledExecutorService connectionLostCheckerService -> e
    java.lang.Object syncConnectionLost -> i
    org.slf4j.Logger log -> b
    long connectionLostTimeout -> g
    java.util.concurrent.ScheduledFuture connectionLostCheckerFuture -> f
    boolean websocketRunning -> h
    boolean tcpNoDelay -> c
    boolean reuseAddr -> d
    java.lang.Object access$000(org.java_websocket.AbstractWebSocket) -> a
    long access$100(org.java_websocket.AbstractWebSocket) -> b
    void access$200(org.java_websocket.AbstractWebSocket,org.java_websocket.WebSocket,long) -> c
    void cancelConnectionLostTimer() -> d
    void executeConnectionLostDetection(org.java_websocket.WebSocket,long) -> e
    void restartConnectionLostTimer() -> f
    void startConnectionLostTimer() -> g
    void stopConnectionLostTimer() -> h
org.java_websocket.AbstractWebSocket$1 -> org.java_websocket.AbstractWebSocket$a:
    org.java_websocket.AbstractWebSocket this$0 -> b
    java.util.ArrayList connections -> a
org.java_websocket.AbstractWrappedByteChannel -> org.java_websocket.AbstractWrappedByteChannel:
    java.nio.channels.ByteChannel channel -> a
org.java_websocket.SSLSocketChannel -> org.java_websocket.SSLSocketChannel:
    org.slf4j.Logger log -> a
    java.util.concurrent.ExecutorService executor -> h
    java.nio.ByteBuffer peerNetData -> g
    java.nio.ByteBuffer peerAppData -> f
    java.nio.ByteBuffer myNetData -> e
    java.nio.channels.SocketChannel socketChannel -> b
    java.nio.ByteBuffer myAppData -> d
    javax.net.ssl.SSLEngine engine -> c
    void closeConnection() -> a
    boolean doHandshake() -> b
    java.nio.ByteBuffer enlargeApplicationBuffer(java.nio.ByteBuffer) -> c
    java.nio.ByteBuffer enlargeBuffer(java.nio.ByteBuffer,int) -> d
    java.nio.ByteBuffer enlargePacketBuffer(java.nio.ByteBuffer) -> e
    java.nio.ByteBuffer handleBufferUnderflow(java.nio.ByteBuffer) -> f
    void handleEndOfStream() -> g
org.java_websocket.SSLSocketChannel$1 -> org.java_websocket.SSLSocketChannel$a:
    int[] $SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus -> b
    int[] $SwitchMap$javax$net$ssl$SSLEngineResult$Status -> a
org.java_websocket.SSLSocketChannel2 -> org.java_websocket.SSLSocketChannel2:
    java.nio.ByteBuffer emptybuffer -> n
    org.slf4j.Logger log -> a
    int bufferallocations -> l
    javax.net.ssl.SSLEngineResult readEngineResult -> j
    javax.net.ssl.SSLEngineResult writeEngineResult -> k
    byte[] saveCryptData -> m
    java.nio.ByteBuffer inCrypt -> f
    java.nio.ByteBuffer outCrypt -> e
    java.nio.ByteBuffer inData -> d
    java.nio.channels.SelectionKey selectionKey -> h
    javax.net.ssl.SSLEngine sslEngine -> i
    java.util.List tasks -> c
    java.util.concurrent.ExecutorService exec -> b
    java.nio.channels.SocketChannel socketChannel -> g
    void consumeDelegatedTasks() -> a
    void consumeFutureUninterruptible(java.util.concurrent.Future) -> b
    void createBuffers(javax.net.ssl.SSLSession) -> c
    boolean isHandShakeComplete() -> d
    void processHandshake() -> e
    int readRemaining(java.nio.ByteBuffer) -> f
    void saveCryptedData() -> g
    int transfereTo(java.nio.ByteBuffer,java.nio.ByteBuffer) -> h
    void tryRestoreCryptedData() -> i
    java.nio.ByteBuffer unwrap() -> j
    java.nio.ByteBuffer wrap(java.nio.ByteBuffer) -> k
org.java_websocket.WebSocketAdapter -> org.java_websocket.WebSocketAdapter:
    org.java_websocket.framing.PingFrame pingFrame -> a
org.java_websocket.WebSocketImpl -> org.java_websocket.WebSocketImpl:
    org.slf4j.Logger log -> a
    org.java_websocket.drafts.Draft draft -> i
    java.nio.ByteBuffer tmpHandshakeBytes -> k
    org.java_websocket.WebSocketListener wsl -> b
    java.nio.channels.SelectionKey key -> c
    java.nio.channels.ByteChannel channel -> d
    java.lang.String closemessage -> m
    java.lang.Boolean closedremotely -> o
    java.lang.Object synchronizeWriteObject -> r
    java.lang.Object attachment -> s
    java.lang.String resourceDescriptor -> p
    org.java_websocket.enums.Role role -> j
    boolean flushandclosestate -> f
    long lastPong -> q
    java.util.List knownDrafts -> h
    java.lang.Integer closecode -> n
    org.java_websocket.handshake.ClientHandshake handshakerequest -> l
    org.java_websocket.server.WebSocketServer$WebSocketWorker workerThread -> e
    org.java_websocket.enums.ReadyState readyState -> g
    void closeConnection(int,boolean) -> a
    void closeConnectionDueToInternalServerError(java.lang.RuntimeException) -> b
    void closeConnectionDueToWrongHandshake(org.java_websocket.exceptions.InvalidDataException) -> c
    void decodeFrames(java.nio.ByteBuffer) -> d
    boolean decodeHandshake(java.nio.ByteBuffer) -> e
    java.nio.ByteBuffer generateHttpResponseDueToError(int) -> f
    long getLastPong() -> g
    void open(org.java_websocket.handshake.Handshakedata) -> h
    void send(java.util.Collection) -> i
    void write(java.nio.ByteBuffer) -> j
    void write(java.util.List) -> k
org.java_websocket.client.WebSocketClient -> org.java_websocket.client.WebSocketClient:
    java.util.Map headers -> s
    java.lang.Thread connectReadThread -> q
    java.net.Proxy proxy -> o
    java.lang.Thread writeThread -> p
    org.java_websocket.client.DnsResolver dnsResolver -> w
    java.util.concurrent.CountDownLatch connectLatch -> t
    java.util.concurrent.CountDownLatch closeLatch -> u
    java.net.URI uri -> j
    java.io.OutputStream ostream -> n
    java.net.Socket socket -> l
    int connectTimeout -> v
    org.java_websocket.drafts.Draft draft -> r
    org.java_websocket.WebSocketImpl engine -> k
    javax.net.SocketFactory socketFactory -> m
    void access$000(org.java_websocket.client.WebSocketClient,java.io.IOException) -> i
    java.lang.Thread access$102(org.java_websocket.client.WebSocketClient,java.lang.Thread) -> j
    org.java_websocket.WebSocketImpl access$200(org.java_websocket.client.WebSocketClient) -> k
    java.io.OutputStream access$300(org.java_websocket.client.WebSocketClient) -> l
    java.net.Socket access$400(org.java_websocket.client.WebSocketClient) -> m
    void handleIOException(java.io.IOException) -> n
    void onSetSSLParameters(javax.net.ssl.SSLParameters) -> o
    boolean prepareSocket() -> p
    void reset() -> q
    void sendHandshake() -> r
    void upgradeSocketToSSL() -> s
org.java_websocket.client.WebSocketClient$$ExternalSyntheticApiModelOutline0 -> a0.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void org.java_websocket.client.WebSocketClient$$InternalSyntheticApiModelOutline$1$50a21547bb8297c371e006e94e712b2154d044f63693926dad937b60688f4ef3$0.m(javax.net.ssl.SSLParameters,java.lang.String) -> a
      # {"id":"com.android.tools.r8.synthesized"}
org.java_websocket.client.WebSocketClient$1 -> org.java_websocket.client.WebSocketClient$a:
    org.java_websocket.client.WebSocketClient this$0 -> a
org.java_websocket.client.WebSocketClient$WebsocketWriteThread -> org.java_websocket.client.WebSocketClient$b:
    org.java_websocket.client.WebSocketClient webSocketClient -> a
    org.java_websocket.client.WebSocketClient this$0 -> b
    void closeSocket() -> a
    void runWriteData() -> b
org.java_websocket.drafts.Draft -> org.java_websocket.drafts.Draft:
    org.java_websocket.enums.Opcode continuousFrameType -> b
    org.java_websocket.enums.Role role -> a
    boolean basicAccept(org.java_websocket.handshake.Handshakedata) -> a
    int readVersion(org.java_websocket.handshake.Handshakedata) -> b
    org.java_websocket.handshake.HandshakeBuilder translateHandshakeHttpClient(java.lang.String[],java.lang.String) -> c
    org.java_websocket.handshake.HandshakeBuilder translateHandshakeHttpServer(java.lang.String[],java.lang.String) -> d
org.java_websocket.drafts.Draft_6455 -> org.java_websocket.drafts.Draft_6455:
    org.java_websocket.extensions.IExtension currentDecodingExtension -> g
    int maxFrameSize -> n
    org.java_websocket.protocols.IProtocol protocol -> h
    java.nio.ByteBuffer incompleteframe -> l
    java.security.SecureRandom reuseableRandom -> m
    org.slf4j.Logger log -> c
    java.util.List knownExtensions -> f
    java.util.List knownProtocols -> i
    org.java_websocket.framing.Framedata currentContinuousFrame -> j
    org.java_websocket.extensions.IExtension negotiatedExtension -> d
    org.java_websocket.extensions.IExtension defaultExtension -> e
    java.util.List byteBufferList -> k
    org.java_websocket.framing.Framedata translateSingleFrame(java.nio.ByteBuffer) -> A
    void translateSingleFrameCheckLengthLimit(long) -> B
    void translateSingleFrameCheckPacketSize(int,int) -> C
    org.java_websocket.drafts.Draft_6455$TranslatedPayloadMetaData translateSingleFramePayloadLength(java.nio.ByteBuffer,org.java_websocket.enums.Opcode,int,int,int) -> D
    void addToBufferList(java.nio.ByteBuffer) -> e
    void checkBufferLimit() -> f
    void clearBufferList() -> g
    org.java_websocket.enums.HandshakeState containsRequestedProtocol(java.lang.String) -> h
    java.nio.ByteBuffer createByteBufferFromFramedata(org.java_websocket.framing.Framedata) -> i
    byte fromOpcode(org.java_websocket.enums.Opcode) -> j
    java.lang.String generateFinalKey(java.lang.String) -> k
    long getByteBufferListSize() -> l
    byte getMaskByte(boolean) -> m
    java.nio.ByteBuffer getPayloadFromByteBufferList() -> n
    byte getRSVByte(int) -> o
    java.lang.String getServerTime() -> p
    int getSizeBytes(java.nio.ByteBuffer) -> q
    void logRuntimeException(org.java_websocket.WebSocketImpl,java.lang.RuntimeException) -> r
    void processFrameBinary(org.java_websocket.WebSocketImpl,org.java_websocket.framing.Framedata) -> s
    void processFrameClosing(org.java_websocket.WebSocketImpl,org.java_websocket.framing.Framedata) -> t
    void processFrameContinuousAndNonFin(org.java_websocket.WebSocketImpl,org.java_websocket.framing.Framedata,org.java_websocket.enums.Opcode) -> u
    void processFrameIsFin(org.java_websocket.WebSocketImpl,org.java_websocket.framing.Framedata) -> v
    void processFrameIsNotFin(org.java_websocket.framing.Framedata) -> w
    void processFrameText(org.java_websocket.WebSocketImpl,org.java_websocket.framing.Framedata) -> x
    byte[] toByteArray(long,int) -> y
    org.java_websocket.enums.Opcode toOpcode(byte) -> z
org.java_websocket.drafts.Draft_6455$TranslatedPayloadMetaData -> org.java_websocket.drafts.Draft_6455$a:
    int realPackageSize -> b
    org.java_websocket.drafts.Draft_6455 this$0 -> c
    int payloadLength -> a
    int access$000(org.java_websocket.drafts.Draft_6455$TranslatedPayloadMetaData) -> a
    int access$100(org.java_websocket.drafts.Draft_6455$TranslatedPayloadMetaData) -> b
    int getPayloadLength() -> c
    int getRealPackageSize() -> d
org.java_websocket.enums.CloseHandshakeType -> org.java_websocket.enums.CloseHandshakeType:
    org.java_websocket.enums.CloseHandshakeType[] $VALUES -> a
org.java_websocket.enums.HandshakeState -> org.java_websocket.enums.HandshakeState:
    org.java_websocket.enums.HandshakeState[] $VALUES -> a
org.java_websocket.enums.Opcode -> org.java_websocket.enums.Opcode:
    org.java_websocket.enums.Opcode[] $VALUES -> a
org.java_websocket.enums.ReadyState -> org.java_websocket.enums.ReadyState:
    org.java_websocket.enums.ReadyState[] $VALUES -> a
org.java_websocket.enums.Role -> org.java_websocket.enums.Role:
    org.java_websocket.enums.Role[] $VALUES -> a
org.java_websocket.exceptions.IncompleteException -> org.java_websocket.exceptions.IncompleteException:
    int preferredSize -> a
org.java_websocket.exceptions.IncompleteHandshakeException -> org.java_websocket.exceptions.IncompleteHandshakeException:
    int preferredSize -> a
org.java_websocket.exceptions.InvalidDataException -> org.java_websocket.exceptions.InvalidDataException:
    int closecode -> a
org.java_websocket.exceptions.InvalidEncodingException -> org.java_websocket.exceptions.InvalidEncodingException:
    java.io.UnsupportedEncodingException encodingException -> a
org.java_websocket.exceptions.LimitExceededException -> org.java_websocket.exceptions.LimitExceededException:
    int limit -> b
org.java_websocket.exceptions.WrappedIOException -> org.java_websocket.exceptions.WrappedIOException:
    org.java_websocket.WebSocket connection -> a
    java.io.IOException ioException -> b
org.java_websocket.extensions.ExtensionRequestData -> org.java_websocket.extensions.ExtensionRequestData:
    java.util.Map extensionParameters -> a
    java.lang.String extensionName -> b
org.java_websocket.extensions.permessage_deflate.PerMessageDeflateExtension -> org.java_websocket.extensions.permessage_deflate.PerMessageDeflateExtension:
    java.util.zip.Deflater deflater -> f
    java.util.Map requestedParameters -> d
    byte[] TAIL_BYTES -> g
    boolean serverNoContextTakeover -> b
    boolean clientNoContextTakeover -> c
    java.util.zip.Inflater inflater -> e
    int threshold -> a
    void decompress(byte[],java.io.ByteArrayOutputStream) -> a
    boolean endsWithTail(byte[]) -> b
org.java_websocket.framing.CloseFrame -> org.java_websocket.framing.CloseFrame:
    java.lang.String reason -> i
    int code -> h
    void updatePayload() -> a
    void validateUtf8(java.nio.ByteBuffer,int) -> b
org.java_websocket.framing.FramedataImpl1 -> org.java_websocket.framing.FramedataImpl1:
    org.java_websocket.enums.Opcode optcode -> b
    boolean rsv1 -> e
    boolean rsv2 -> f
    boolean rsv3 -> g
    java.nio.ByteBuffer unmaskedpayload -> c
    boolean fin -> a
    boolean transferemasked -> d
org.java_websocket.framing.FramedataImpl1$1 -> org.java_websocket.framing.FramedataImpl1$a:
    int[] $SwitchMap$org$java_websocket$enums$Opcode -> a
org.java_websocket.handshake.HandshakeImpl1Client -> org.java_websocket.handshake.HandshakeImpl1Client:
    java.lang.String resourceDescriptor -> c
org.java_websocket.handshake.HandshakeImpl1Server -> org.java_websocket.handshake.HandshakeImpl1Server:
    short httpstatus -> c
    java.lang.String httpstatusmessage -> d
org.java_websocket.handshake.HandshakedataImpl1 -> org.java_websocket.handshake.HandshakedataImpl1:
    byte[] content -> a
    java.util.TreeMap map -> b
org.java_websocket.protocols.Protocol -> org.java_websocket.protocols.Protocol:
    java.util.regex.Pattern patternComma -> c
    java.util.regex.Pattern patternSpace -> b
    java.lang.String providedProtocol -> a
org.java_websocket.server.CustomSSLWebSocketServerFactory -> org.java_websocket.server.CustomSSLWebSocketServerFactory:
    java.lang.String[] enabledCiphersuites -> d
    java.lang.String[] enabledProtocols -> c
org.java_websocket.server.DefaultSSLWebSocketServerFactory -> org.java_websocket.server.DefaultSSLWebSocketServerFactory:
    javax.net.ssl.SSLContext sslcontext -> a
    java.util.concurrent.ExecutorService exec -> b
org.java_websocket.server.SSLParametersWebSocketServerFactory -> org.java_websocket.server.SSLParametersWebSocketServerFactory:
    javax.net.ssl.SSLParameters sslParameters -> c
org.java_websocket.server.WebSocketServer -> org.java_websocket.server.WebSocketServer:
    java.util.List decoders -> r
    java.util.List drafts -> o
    java.util.concurrent.atomic.AtomicInteger queuesize -> v
    java.lang.Thread selectorthread -> p
    java.util.List iqueue -> s
    java.util.Collection connections -> k
    java.nio.channels.ServerSocketChannel server -> m
    int maxPendingConnections -> x
    int AVAILABLE_PROCESSORS -> y
    java.util.concurrent.atomic.AtomicBoolean isclosed -> q
    java.net.InetSocketAddress address -> l
    java.nio.channels.Selector selector -> n
    org.java_websocket.WebSocketServerFactory wsf -> w
    int queueinvokes -> u
    org.slf4j.Logger log -> j
    java.util.concurrent.BlockingQueue buffers -> t
    void pushBuffer(java.nio.ByteBuffer) -> A
    void queue(org.java_websocket.WebSocketImpl) -> B
    void releaseBuffers(org.java_websocket.WebSocket) -> C
    boolean removeConnection(org.java_websocket.WebSocket) -> D
    java.nio.ByteBuffer takeBuffer() -> E
    org.slf4j.Logger access$000(org.java_websocket.server.WebSocketServer) -> i
    void access$100(org.java_websocket.server.WebSocketServer,org.java_websocket.WebSocket,java.lang.Exception) -> j
    void access$200(org.java_websocket.server.WebSocketServer,java.nio.ByteBuffer) -> k
    boolean addConnection(org.java_websocket.WebSocket) -> l
    void allocateBuffers(org.java_websocket.WebSocket) -> m
    void doAccept(java.nio.channels.SelectionKey,java.util.Iterator) -> n
    void doAdditionalRead() -> o
    void doBroadcast(java.lang.Object,java.util.Collection) -> p
    boolean doEnsureSingleThread() -> q
    boolean doRead(java.nio.channels.SelectionKey,java.util.Iterator) -> r
    void doServerShutdown() -> s
    boolean doSetupSelectorAndServerThread() -> t
    void doWrite(java.nio.channels.SelectionKey) -> u
    void fillFrames(org.java_websocket.drafts.Draft,java.util.Map,java.lang.String,java.nio.ByteBuffer) -> v
    java.net.Socket getSocket(org.java_websocket.WebSocket) -> w
    void handleFatal(org.java_websocket.WebSocket,java.lang.Exception) -> x
    void handleIOException(java.nio.channels.SelectionKey,org.java_websocket.WebSocket,java.io.IOException) -> y
    boolean onConnect(java.nio.channels.SelectionKey) -> z
org.java_websocket.server.WebSocketServer$WebSocketWorker -> org.java_websocket.server.WebSocketServer$WebSocketWorker:
    org.java_websocket.server.WebSocketServer this$0 -> b
    java.util.concurrent.BlockingQueue iqueue -> a
    void doDecode(org.java_websocket.WebSocketImpl,java.nio.ByteBuffer) -> a
org.java_websocket.server.WebSocketServer$WebSocketWorker$1 -> org.java_websocket.server.WebSocketServer$WebSocketWorker$a:
    org.java_websocket.server.WebSocketServer$WebSocketWorker this$1 -> b
    org.java_websocket.server.WebSocketServer val$this$0 -> a
org.java_websocket.util.Base64 -> org.java_websocket.util.Base64:
    byte[] _STANDARD_DECODABET -> b
    byte[] _STANDARD_ALPHABET -> a
    byte[] _URL_SAFE_DECODABET -> d
    byte[] _URL_SAFE_ALPHABET -> c
    byte[] _ORDERED_DECODABET -> f
    byte[] _ORDERED_ALPHABET -> e
    byte[] access$000(int) -> a
    byte[] access$100(byte[],byte[],int,int) -> b
    int access$200(byte[],int,byte[],int,int) -> c
    int decode4to3(byte[],int,byte[],int,int) -> d
    byte[] encode3to4(byte[],int,int,byte[],int,int) -> e
    byte[] encode3to4(byte[],byte[],int,int) -> f
    byte[] getAlphabet(int) -> g
    byte[] getDecodabet(int) -> h
org.java_websocket.util.Base64$OutputStream -> org.java_websocket.util.Base64$OutputStream:
    int options -> i
    boolean breakLines -> f
    byte[] b4 -> g
    int bufferLength -> d
    byte[] decodabet -> j
    int lineLength -> e
    boolean suspendEncoding -> h
    boolean encode -> a
    int position -> b
    byte[] buffer -> c
org.java_websocket.util.Charsetfunctions -> org.java_websocket.util.Charsetfunctions:
    java.nio.charset.CodingErrorAction codingErrorAction -> a
    int[] utf8d -> b
org.java_websocket.util.NamedThreadFactory -> org.java_websocket.util.NamedThreadFactory:
    java.util.concurrent.atomic.AtomicInteger threadNumber -> b
    java.lang.String threadPrefix -> c
    java.util.concurrent.ThreadFactory defaultThreadFactory -> a
org.mozilla.javascript.Context -> org.mozilla.javascript.Context:
    java.lang.Object $r8$lambda$FBfUmmX3GbL3akcaT52xTgeMGSk(org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Context) -> a
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.Context$$ExternalSyntheticLambda0 -> org.mozilla.javascript.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object[] org.mozilla.javascript.Context$$InternalSyntheticLambda$1$df14a0811db25223ac95655842a1cde72523a9eca3e692d64cfc8659d3ae241c$0.f$3 -> d
    org.mozilla.javascript.Scriptable org.mozilla.javascript.Context$$InternalSyntheticLambda$1$df14a0811db25223ac95655842a1cde72523a9eca3e692d64cfc8659d3ae241c$0.f$1 -> b
    org.mozilla.javascript.Scriptable org.mozilla.javascript.Context$$InternalSyntheticLambda$1$df14a0811db25223ac95655842a1cde72523a9eca3e692d64cfc8659d3ae241c$0.f$2 -> c
    org.mozilla.javascript.Callable org.mozilla.javascript.Context$$InternalSyntheticLambda$1$df14a0811db25223ac95655842a1cde72523a9eca3e692d64cfc8659d3ae241c$0.f$0 -> a
    void org.mozilla.javascript.Context$$InternalSyntheticLambda$1$df14a0811db25223ac95655842a1cde72523a9eca3e692d64cfc8659d3ae241c$0.<init>(org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.Context$$InternalSyntheticLambda$1$df14a0811db25223ac95655842a1cde72523a9eca3e692d64cfc8659d3ae241c$0.run(org.mozilla.javascript.Context) -> run
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.EqualObjectGraphs -> org.mozilla.javascript.EqualObjectGraphs:
    int $r8$lambda$8Bh3bczntrX7D8FwHeSh9zg2uxg(java.lang.Object,java.lang.Object) -> a
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.EqualObjectGraphs$$ExternalSyntheticLambda0 -> org.mozilla.javascript.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.EqualObjectGraphs$$InternalSyntheticLambda$1$37332c66c2d9bae7e7425b93a1796a9f5e37ccb1b99fd1288f7d7614a8fb8e7a$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    int org.mozilla.javascript.EqualObjectGraphs$$InternalSyntheticLambda$1$37332c66c2d9bae7e7425b93a1796a9f5e37ccb1b99fd1288f7d7614a8fb8e7a$0.compare(java.lang.Object,java.lang.Object) -> compare
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.Hashtable$$ExternalSyntheticLambda0 -> org.mozilla.javascript.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.Hashtable$$InternalSyntheticLambda$1$7bf5e540c12694618eb2eddcf3c3ab83c9d9615868deb3a7b12c10d753bc2474$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.Hashtable$$InternalSyntheticLambda$1$7bf5e540c12694618eb2eddcf3c3ab83c9d9615868deb3a7b12c10d753bc2474$0.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Consumer org.mozilla.javascript.Hashtable$$InternalSyntheticLambda$1$7bf5e540c12694618eb2eddcf3c3ab83c9d9615868deb3a7b12c10d753bc2474$0.andThen(java.util.function.Consumer) -> andThen
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.InterfaceAdapter -> org.mozilla.javascript.InterfaceAdapter:
    java.lang.Object $r8$lambda$SfNYed_5bcd5vQPGPa9tMFbmvPI(org.mozilla.javascript.InterfaceAdapter,java.lang.Object,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.reflect.Method,java.lang.Object[],org.mozilla.javascript.Context) -> a
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.InterfaceAdapter$$ExternalSyntheticLambda0 -> org.mozilla.javascript.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.Scriptable org.mozilla.javascript.InterfaceAdapter$$InternalSyntheticLambda$1$5675458d3980ff33aaf1b6ece3e532d670d87c8a709c37e4655c26ac212777d7$0.f$2 -> c
    java.lang.Object org.mozilla.javascript.InterfaceAdapter$$InternalSyntheticLambda$1$5675458d3980ff33aaf1b6ece3e532d670d87c8a709c37e4655c26ac212777d7$0.f$3 -> d
    java.lang.Object org.mozilla.javascript.InterfaceAdapter$$InternalSyntheticLambda$1$5675458d3980ff33aaf1b6ece3e532d670d87c8a709c37e4655c26ac212777d7$0.f$1 -> b
    java.lang.reflect.Method org.mozilla.javascript.InterfaceAdapter$$InternalSyntheticLambda$1$5675458d3980ff33aaf1b6ece3e532d670d87c8a709c37e4655c26ac212777d7$0.f$4 -> e
    java.lang.Object[] org.mozilla.javascript.InterfaceAdapter$$InternalSyntheticLambda$1$5675458d3980ff33aaf1b6ece3e532d670d87c8a709c37e4655c26ac212777d7$0.f$5 -> f
    org.mozilla.javascript.InterfaceAdapter org.mozilla.javascript.InterfaceAdapter$$InternalSyntheticLambda$1$5675458d3980ff33aaf1b6ece3e532d670d87c8a709c37e4655c26ac212777d7$0.f$0 -> a
    void org.mozilla.javascript.InterfaceAdapter$$InternalSyntheticLambda$1$5675458d3980ff33aaf1b6ece3e532d670d87c8a709c37e4655c26ac212777d7$0.<init>(org.mozilla.javascript.InterfaceAdapter,java.lang.Object,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.InterfaceAdapter$$InternalSyntheticLambda$1$5675458d3980ff33aaf1b6ece3e532d670d87c8a709c37e4655c26ac212777d7$0.run(org.mozilla.javascript.Context) -> run
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.Interpreter$CallFrame -> org.mozilla.javascript.Interpreter$CallFrame:
    java.lang.Boolean $r8$lambda$7J5USje4ODl0iavEbJ5_1cPxuhg(org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object,org.mozilla.javascript.EqualObjectGraphs) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$jLvmDhQ_YxdZ4SAl4rQ0-Nk9h1U(org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> b
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.Interpreter$CallFrame$$ExternalSyntheticLambda0 -> org.mozilla.javascript.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.Interpreter$CallFrame org.mozilla.javascript.Interpreter$CallFrame$$InternalSyntheticLambda$1$2d7ea556fd921cd83ca54213beefc2ab01d0884d64dfcb251799e23486d1890a$0.f$0 -> a
    java.lang.Object org.mozilla.javascript.Interpreter$CallFrame$$InternalSyntheticLambda$1$2d7ea556fd921cd83ca54213beefc2ab01d0884d64dfcb251799e23486d1890a$0.f$1 -> b
    void org.mozilla.javascript.Interpreter$CallFrame$$InternalSyntheticLambda$1$2d7ea556fd921cd83ca54213beefc2ab01d0884d64dfcb251799e23486d1890a$0.<init>(org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.Interpreter$CallFrame$$InternalSyntheticLambda$1$2d7ea556fd921cd83ca54213beefc2ab01d0884d64dfcb251799e23486d1890a$0.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.Interpreter$CallFrame$$ExternalSyntheticLambda1 -> org.mozilla.javascript.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.Interpreter$CallFrame org.mozilla.javascript.Interpreter$CallFrame$$InternalSyntheticLambda$1$3042bd0067e949ae44195fcbad976c3df1af78ab5a8abcc509b9966b281ba9c2$0.f$0 -> a
    java.lang.Object org.mozilla.javascript.Interpreter$CallFrame$$InternalSyntheticLambda$1$3042bd0067e949ae44195fcbad976c3df1af78ab5a8abcc509b9966b281ba9c2$0.f$1 -> b
    void org.mozilla.javascript.Interpreter$CallFrame$$InternalSyntheticLambda$1$3042bd0067e949ae44195fcbad976c3df1af78ab5a8abcc509b9966b281ba9c2$0.<init>(org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Function org.mozilla.javascript.Interpreter$CallFrame$$InternalSyntheticLambda$1$3042bd0067e949ae44195fcbad976c3df1af78ab5a8abcc509b9966b281ba9c2$0.andThen(java.util.function.Function) -> andThen
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.Interpreter$CallFrame$$InternalSyntheticLambda$1$3042bd0067e949ae44195fcbad976c3df1af78ab5a8abcc509b9966b281ba9c2$0.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Function org.mozilla.javascript.Interpreter$CallFrame$$InternalSyntheticLambda$1$3042bd0067e949ae44195fcbad976c3df1af78ab5a8abcc509b9966b281ba9c2$0.compose(java.util.function.Function) -> compose
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.JavaAdapter -> org.mozilla.javascript.JavaAdapter:
    java.lang.Object $r8$lambda$RhoMg7_DFZ5Wj5W_0fBedu9o0sQ(org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Function,java.lang.Object[],long,org.mozilla.javascript.Context) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.ScriptableObject $r8$lambda$jD16HtgOAwsZhTZ4dDuKKJahxQc(org.mozilla.javascript.Script,org.mozilla.javascript.Context) -> b
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.JavaAdapter$$ExternalSyntheticApiModelOutline0 -> org.mozilla.javascript.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean org.mozilla.javascript.JavaAdapter$$InternalSyntheticApiModelOutline$1$6407d44b5f70500a955b1604eb4bf9dce8582e2672e424e487fa96a9566c2278$0.m(java.lang.reflect.Method) -> a
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.JavaAdapter$$ExternalSyntheticLambda1 -> org.mozilla.javascript.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.Scriptable org.mozilla.javascript.JavaAdapter$$InternalSyntheticLambda$1$4dad214e3ac5609cf2639b51bc707ca45fe0b763008893f7e49e45be2acd12f1$0.f$0 -> a
    java.lang.Object[] org.mozilla.javascript.JavaAdapter$$InternalSyntheticLambda$1$4dad214e3ac5609cf2639b51bc707ca45fe0b763008893f7e49e45be2acd12f1$0.f$3 -> d
    org.mozilla.javascript.Scriptable org.mozilla.javascript.JavaAdapter$$InternalSyntheticLambda$1$4dad214e3ac5609cf2639b51bc707ca45fe0b763008893f7e49e45be2acd12f1$0.f$1 -> b
    org.mozilla.javascript.Function org.mozilla.javascript.JavaAdapter$$InternalSyntheticLambda$1$4dad214e3ac5609cf2639b51bc707ca45fe0b763008893f7e49e45be2acd12f1$0.f$2 -> c
    long org.mozilla.javascript.JavaAdapter$$InternalSyntheticLambda$1$4dad214e3ac5609cf2639b51bc707ca45fe0b763008893f7e49e45be2acd12f1$0.f$4 -> e
    void org.mozilla.javascript.JavaAdapter$$InternalSyntheticLambda$1$4dad214e3ac5609cf2639b51bc707ca45fe0b763008893f7e49e45be2acd12f1$0.<init>(org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Function,java.lang.Object[],long) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.JavaAdapter$$InternalSyntheticLambda$1$4dad214e3ac5609cf2639b51bc707ca45fe0b763008893f7e49e45be2acd12f1$0.run(org.mozilla.javascript.Context) -> run
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.JavaAdapter$$ExternalSyntheticLambda2 -> org.mozilla.javascript.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.Script org.mozilla.javascript.JavaAdapter$$InternalSyntheticLambda$1$f955f25ede46c0ffe85f888b634a56e860cc96f45f7883023acce2ae895cb223$0.f$0 -> a
    void org.mozilla.javascript.JavaAdapter$$InternalSyntheticLambda$1$f955f25ede46c0ffe85f888b634a56e860cc96f45f7883023acce2ae895cb223$0.<init>(org.mozilla.javascript.Script) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.JavaAdapter$$InternalSyntheticLambda$1$f955f25ede46c0ffe85f888b634a56e860cc96f45f7883023acce2ae895cb223$0.run(org.mozilla.javascript.Context) -> run
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.JavaToJSONConverters -> org.mozilla.javascript.JavaToJSONConverters:
    java.lang.Object $r8$lambda$FjbI0pddcNU2tqR0KNGP-AGIElo(java.lang.Object) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$SqlCy71zzpnDqapbJl3Rjqi4BIM(java.lang.Object) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$VGef0wz4DfEIOD2Cp83cHoc_VRU(java.lang.Object) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$jbF3gLpW1P0d34OVpNZ2fvQLsug(java.lang.Object) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$u_lJtkQe6kcBicYLr5Om_gK3P-4(java.lang.Object) -> e
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.JavaToJSONConverters$$ExternalSyntheticLambda0 -> org.mozilla.javascript.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Function org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$0.andThen(java.util.function.Function) -> andThen
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$0.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Function org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$0.compose(java.util.function.Function) -> compose
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.JavaToJSONConverters$$ExternalSyntheticLambda1 -> org.mozilla.javascript.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Function org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$1.andThen(java.util.function.Function) -> andThen
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$1.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Function org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$1.compose(java.util.function.Function) -> compose
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.JavaToJSONConverters$$ExternalSyntheticLambda2 -> org.mozilla.javascript.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$2.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Function org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$2.andThen(java.util.function.Function) -> andThen
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$2.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Function org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$2.compose(java.util.function.Function) -> compose
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.JavaToJSONConverters$$ExternalSyntheticLambda3 -> org.mozilla.javascript.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$3.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Function org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$3.andThen(java.util.function.Function) -> andThen
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$3.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Function org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$3.compose(java.util.function.Function) -> compose
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.JavaToJSONConverters$$ExternalSyntheticLambda4 -> org.mozilla.javascript.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$4.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Function org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$4.andThen(java.util.function.Function) -> andThen
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$4.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Function org.mozilla.javascript.JavaToJSONConverters$$InternalSyntheticLambda$1$d1e2807bdc736dc4af5b4ef580ba0e95f6b48dce13eb1359cc407efd9431450a$4.compose(java.util.function.Function) -> compose
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeArray$2 -> org.mozilla.javascript.NativeArray$2:
    void forEachRemaining($-vivified-$.java.util.function.Consumer) -> forEachRemaining
      # {"id":"com.android.tools.r8.synthesized"}
    void forEachRemaining(java.util.function.Consumer) -> forEachRemaining
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeError$$ExternalSyntheticLambda0 -> org.mozilla.javascript.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.NativeError org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$3ea039beea7d2298e15e736a45bda4ae4d4c8dc1dd1225a1f47ff4a1dcad32f8$0.f$0 -> a
    void org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$3ea039beea7d2298e15e736a45bda4ae4d4c8dc1dd1225a1f47ff4a1dcad32f8$0.<init>(org.mozilla.javascript.NativeError) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$3ea039beea7d2298e15e736a45bda4ae4d4c8dc1dd1225a1f47ff4a1dcad32f8$0.get() -> get
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeError$$ExternalSyntheticLambda1 -> org.mozilla.javascript.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.NativeError org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$3ea039beea7d2298e15e736a45bda4ae4d4c8dc1dd1225a1f47ff4a1dcad32f8$1.f$0 -> a
    void org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$3ea039beea7d2298e15e736a45bda4ae4d4c8dc1dd1225a1f47ff4a1dcad32f8$1.<init>(org.mozilla.javascript.NativeError) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$3ea039beea7d2298e15e736a45bda4ae4d4c8dc1dd1225a1f47ff4a1dcad32f8$1.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Consumer org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$3ea039beea7d2298e15e736a45bda4ae4d4c8dc1dd1225a1f47ff4a1dcad32f8$1.andThen(java.util.function.Consumer) -> andThen
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeError$$ExternalSyntheticLambda2 -> org.mozilla.javascript.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.NativeError$ProtoProps org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$8afa924aa406c1f9c419b8e7deff6573fb7b3819a4b05f59bcd084dafd4a32e1$0.f$0 -> a
    void org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$8afa924aa406c1f9c419b8e7deff6573fb7b3819a4b05f59bcd084dafd4a32e1$0.<init>(org.mozilla.javascript.NativeError$ProtoProps) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$8afa924aa406c1f9c419b8e7deff6573fb7b3819a4b05f59bcd084dafd4a32e1$0.get() -> get
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeError$$ExternalSyntheticLambda3 -> org.mozilla.javascript.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.NativeError$ProtoProps org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$8afa924aa406c1f9c419b8e7deff6573fb7b3819a4b05f59bcd084dafd4a32e1$1.f$0 -> a
    void org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$8afa924aa406c1f9c419b8e7deff6573fb7b3819a4b05f59bcd084dafd4a32e1$1.<init>(org.mozilla.javascript.NativeError$ProtoProps) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$8afa924aa406c1f9c419b8e7deff6573fb7b3819a4b05f59bcd084dafd4a32e1$1.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Consumer org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$8afa924aa406c1f9c419b8e7deff6573fb7b3819a4b05f59bcd084dafd4a32e1$1.andThen(java.util.function.Consumer) -> andThen
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeError$$ExternalSyntheticLambda4 -> org.mozilla.javascript.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.NativeError$ProtoProps org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$8afa924aa406c1f9c419b8e7deff6573fb7b3819a4b05f59bcd084dafd4a32e1$2.f$0 -> a
    void org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$8afa924aa406c1f9c419b8e7deff6573fb7b3819a4b05f59bcd084dafd4a32e1$2.<init>(org.mozilla.javascript.NativeError$ProtoProps) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$8afa924aa406c1f9c419b8e7deff6573fb7b3819a4b05f59bcd084dafd4a32e1$2.get() -> get
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeError$$ExternalSyntheticLambda5 -> org.mozilla.javascript.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.NativeError$ProtoProps org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$8afa924aa406c1f9c419b8e7deff6573fb7b3819a4b05f59bcd084dafd4a32e1$3.f$0 -> a
    void org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$8afa924aa406c1f9c419b8e7deff6573fb7b3819a4b05f59bcd084dafd4a32e1$3.<init>(org.mozilla.javascript.NativeError$ProtoProps) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$8afa924aa406c1f9c419b8e7deff6573fb7b3819a4b05f59bcd084dafd4a32e1$3.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Consumer org.mozilla.javascript.NativeError$$InternalSyntheticLambda$1$8afa924aa406c1f9c419b8e7deff6573fb7b3819a4b05f59bcd084dafd4a32e1$3.andThen(java.util.function.Consumer) -> andThen
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeJavaMap -> org.mozilla.javascript.NativeJavaMap:
    java.lang.Object $r8$lambda$hsmT9LeISrBrbQk4N73eVg4U-Po(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> b
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeJavaMap$$ExternalSyntheticLambda0 -> org.mozilla.javascript.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativeJavaMap$$InternalSyntheticLambda$1$5cb9205d006c24c2936d79addc6eb27f0d16ce8c2c90be090a3fc566734ca6bc$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativeJavaMap$$InternalSyntheticLambda$1$5cb9205d006c24c2936d79addc6eb27f0d16ce8c2c90be090a3fc566734ca6bc$0.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeJavaObject -> org.mozilla.javascript.NativeJavaObject:
    java.lang.Object $r8$lambda$NAaEZkEbV-nb2fue3csihzMNDT0(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> a
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeJavaObject$$ExternalSyntheticLambda0 -> org.mozilla.javascript.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativeJavaObject$$InternalSyntheticLambda$1$aab11e0bcf7563b63d6daf82fc132544a97ae6b47a68715d72a95f07edb8884d$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativeJavaObject$$InternalSyntheticLambda$1$aab11e0bcf7563b63d6daf82fc132544a97ae6b47a68715d72a95f07edb8884d$0.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeMap -> org.mozilla.javascript.NativeMap:
    void $r8$lambda$RyXKVkLW3M1-5-CcSW5Km54HQ0Y(org.mozilla.javascript.Callable,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.ScriptableObject,java.lang.Object,java.lang.Object) -> a
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeMap$$ExternalSyntheticLambda0 -> org.mozilla.javascript.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.Context org.mozilla.javascript.NativeMap$$InternalSyntheticLambda$1$70cd93a250e8817875782f3cde6f083861b4f1dd7e6810f5265b608bd5a63b4e$0.f$1 -> b
    org.mozilla.javascript.Scriptable org.mozilla.javascript.NativeMap$$InternalSyntheticLambda$1$70cd93a250e8817875782f3cde6f083861b4f1dd7e6810f5265b608bd5a63b4e$0.f$2 -> c
    org.mozilla.javascript.Callable org.mozilla.javascript.NativeMap$$InternalSyntheticLambda$1$70cd93a250e8817875782f3cde6f083861b4f1dd7e6810f5265b608bd5a63b4e$0.f$0 -> a
    org.mozilla.javascript.ScriptableObject org.mozilla.javascript.NativeMap$$InternalSyntheticLambda$1$70cd93a250e8817875782f3cde6f083861b4f1dd7e6810f5265b608bd5a63b4e$0.f$3 -> d
    void org.mozilla.javascript.NativeMap$$InternalSyntheticLambda$1$70cd93a250e8817875782f3cde6f083861b4f1dd7e6810f5265b608bd5a63b4e$0.<init>(org.mozilla.javascript.Callable,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.ScriptableObject) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativeMap$$InternalSyntheticLambda$1$70cd93a250e8817875782f3cde6f083861b4f1dd7e6810f5265b608bd5a63b4e$0.accept(java.lang.Object,java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.BiConsumer org.mozilla.javascript.NativeMap$$InternalSyntheticLambda$1$70cd93a250e8817875782f3cde6f083861b4f1dd7e6810f5265b608bd5a63b4e$0.andThen(java.util.function.BiConsumer) -> andThen
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeObject -> org.mozilla.javascript.NativeObject:
    void $r8$lambda$wgOWfC0JyLO8BkBYX0YQH4omlFc(org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object) -> a
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeObject$$ExternalSyntheticLambda0 -> org.mozilla.javascript.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.Scriptable org.mozilla.javascript.NativeObject$$InternalSyntheticLambda$1$4d49a935037e0917095856810505add74cba1abc9ba2fbb9d957f69e3758c688$0.f$0 -> a
    void org.mozilla.javascript.NativeObject$$InternalSyntheticLambda$1$4d49a935037e0917095856810505add74cba1abc9ba2fbb9d957f69e3758c688$0.<init>(org.mozilla.javascript.Scriptable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativeObject$$InternalSyntheticLambda$1$4d49a935037e0917095856810505add74cba1abc9ba2fbb9d957f69e3758c688$0.accept(java.lang.Object,java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.function.BiConsumer org.mozilla.javascript.NativeObject$$InternalSyntheticLambda$1$4d49a935037e0917095856810505add74cba1abc9ba2fbb9d957f69e3758c688$0.andThen(java.util.function.BiConsumer) -> andThen
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeObject$EntrySet$1 -> org.mozilla.javascript.NativeObject$EntrySet$1:
    void forEachRemaining($-vivified-$.java.util.function.Consumer) -> forEachRemaining
      # {"id":"com.android.tools.r8.synthesized"}
    void forEachRemaining(java.util.function.Consumer) -> forEachRemaining
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeObject$KeySet$1 -> org.mozilla.javascript.NativeObject$KeySet$1:
    void forEachRemaining($-vivified-$.java.util.function.Consumer) -> forEachRemaining
      # {"id":"com.android.tools.r8.synthesized"}
    void forEachRemaining(java.util.function.Consumer) -> forEachRemaining
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativeObject$ValueCollection$1 -> org.mozilla.javascript.NativeObject$ValueCollection$1:
    void forEachRemaining($-vivified-$.java.util.function.Consumer) -> forEachRemaining
      # {"id":"com.android.tools.r8.synthesized"}
    void forEachRemaining(java.util.function.Consumer) -> forEachRemaining
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise -> org.mozilla.javascript.NativePromise:
    java.lang.Object $r8$lambda$-U-oRH9hcw_6d4tJW9fyf-rAVGk(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$4cmLR5U_iGUr2ZKJnsVkPpcaE8w(org.mozilla.javascript.NativePromise,org.mozilla.javascript.NativePromise$Reaction,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$F8ogdNuOFAPWGJfPexwuUuA3poE(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$JKETssVbDfH02KvizN5LWfYocq0(org.mozilla.javascript.LambdaConstructor,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.Scriptable $r8$lambda$Ozk8NaD2HnRKY25CIXqSMI603bo(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> e
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$SNfO6YuFdWyOxtyv8jiLYz8Jv7I(org.mozilla.javascript.NativePromise$Reaction,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object) -> f
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$_0j0jIyOTOcaG7o8wdlZ-H5B7Sw(org.mozilla.javascript.NativePromise,org.mozilla.javascript.NativePromise$Reaction,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> g
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$blF_WkEKtW4Zh4y1BhKkwQxHaaw(org.mozilla.javascript.NativePromise$Reaction,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object) -> h
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$gcpshBOwcR6zvrlVK8jXHe1IF4Y(java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> i
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$jBb9VSIT-3QWfofmtHUQgJNCpS4(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> j
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$jUFcJukVVWk8ZM7YypZQq7IjP-o(org.mozilla.javascript.LambdaConstructor,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> k
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$kTbLBSJ_DbL55mvQp0VH4ypBFcs(org.mozilla.javascript.Scriptable,org.mozilla.javascript.Callable,java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> l
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$mYBHE6WSfXfLVDM6h_gABd_JLpg(java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$pB9gHkI4NzkYBjeJAng9azsQhXo(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> n
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$pVHTzCrccq-fnX6g3HUj7F-b1Ng(org.mozilla.javascript.LambdaConstructor,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> o
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$rHCmy9o6pHZxbcJi4duV36Pb0U0(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> p
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$wr3sD32_T5mlkwC8510gVCvE9Cg(org.mozilla.javascript.Scriptable,org.mozilla.javascript.Callable,java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> q
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda0 -> org.mozilla.javascript.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.Scriptable org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$1404c7d30212bca247489b0519403addc17112b235dc98bb42d921cc9c16ba35$0.f$0 -> a
    org.mozilla.javascript.Callable org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$1404c7d30212bca247489b0519403addc17112b235dc98bb42d921cc9c16ba35$0.f$1 -> b
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$1404c7d30212bca247489b0519403addc17112b235dc98bb42d921cc9c16ba35$0.f$2 -> c
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$1404c7d30212bca247489b0519403addc17112b235dc98bb42d921cc9c16ba35$0.<init>(org.mozilla.javascript.Scriptable,org.mozilla.javascript.Callable,java.lang.Object) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$1404c7d30212bca247489b0519403addc17112b235dc98bb42d921cc9c16ba35$0.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda1 -> org.mozilla.javascript.g0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$317ae27d2b05ab5c2f570942946a930c84d5d17bf6b9829ca7971257a0221c0d$0.f$0 -> a
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$317ae27d2b05ab5c2f570942946a930c84d5d17bf6b9829ca7971257a0221c0d$0.<init>(java.lang.Object) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$317ae27d2b05ab5c2f570942946a930c84d5d17bf6b9829ca7971257a0221c0d$0.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda10 -> org.mozilla.javascript.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.LambdaConstructor org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$5.f$0 -> a
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$5.<init>(org.mozilla.javascript.LambdaConstructor) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$5.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda11 -> org.mozilla.javascript.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.LambdaConstructor org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$6.f$0 -> a
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$6.<init>(org.mozilla.javascript.LambdaConstructor) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$6.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda12 -> org.mozilla.javascript.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$7.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$7.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda13 -> org.mozilla.javascript.c0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.LambdaConstructor org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$8.f$0 -> a
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$8.<init>(org.mozilla.javascript.LambdaConstructor) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$8.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda14 -> org.mozilla.javascript.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.Scriptable org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$b79bf69f97aa19258bb7cf0d235fa2337764e1fd279c049af564611d59dcb037$0.f$0 -> a
    org.mozilla.javascript.Callable org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$b79bf69f97aa19258bb7cf0d235fa2337764e1fd279c049af564611d59dcb037$0.f$1 -> b
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$b79bf69f97aa19258bb7cf0d235fa2337764e1fd279c049af564611d59dcb037$0.f$2 -> c
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$b79bf69f97aa19258bb7cf0d235fa2337764e1fd279c049af564611d59dcb037$0.<init>(org.mozilla.javascript.Scriptable,org.mozilla.javascript.Callable,java.lang.Object) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$b79bf69f97aa19258bb7cf0d235fa2337764e1fd279c049af564611d59dcb037$0.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda15 -> org.mozilla.javascript.e0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.Context org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$f5623a40e687d3749cc41a3d13a48965e995efa0c32f9ae039316ecb04ae4cff$0.f$2 -> c
    org.mozilla.javascript.NativePromise$Reaction org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$f5623a40e687d3749cc41a3d13a48965e995efa0c32f9ae039316ecb04ae4cff$0.f$1 -> b
    org.mozilla.javascript.NativePromise org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$f5623a40e687d3749cc41a3d13a48965e995efa0c32f9ae039316ecb04ae4cff$0.f$0 -> a
    org.mozilla.javascript.Scriptable org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$f5623a40e687d3749cc41a3d13a48965e995efa0c32f9ae039316ecb04ae4cff$0.f$3 -> d
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$f5623a40e687d3749cc41a3d13a48965e995efa0c32f9ae039316ecb04ae4cff$0.<init>(org.mozilla.javascript.NativePromise,org.mozilla.javascript.NativePromise$Reaction,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$f5623a40e687d3749cc41a3d13a48965e995efa0c32f9ae039316ecb04ae4cff$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda16 -> org.mozilla.javascript.f0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.Context org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$f5623a40e687d3749cc41a3d13a48965e995efa0c32f9ae039316ecb04ae4cff$1.f$2 -> c
    org.mozilla.javascript.NativePromise$Reaction org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$f5623a40e687d3749cc41a3d13a48965e995efa0c32f9ae039316ecb04ae4cff$1.f$1 -> b
    org.mozilla.javascript.NativePromise org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$f5623a40e687d3749cc41a3d13a48965e995efa0c32f9ae039316ecb04ae4cff$1.f$0 -> a
    org.mozilla.javascript.Scriptable org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$f5623a40e687d3749cc41a3d13a48965e995efa0c32f9ae039316ecb04ae4cff$1.f$3 -> d
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$f5623a40e687d3749cc41a3d13a48965e995efa0c32f9ae039316ecb04ae4cff$1.<init>(org.mozilla.javascript.NativePromise,org.mozilla.javascript.NativePromise$Reaction,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$f5623a40e687d3749cc41a3d13a48965e995efa0c32f9ae039316ecb04ae4cff$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda2 -> org.mozilla.javascript.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.NativePromise$Reaction org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$86528ac88415f1b7618a3f35b860ffcbb19236a32235717472d217cde8e48c65$0.f$0 -> a
    org.mozilla.javascript.Context org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$86528ac88415f1b7618a3f35b860ffcbb19236a32235717472d217cde8e48c65$0.f$1 -> b
    org.mozilla.javascript.Scriptable org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$86528ac88415f1b7618a3f35b860ffcbb19236a32235717472d217cde8e48c65$0.f$2 -> c
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$86528ac88415f1b7618a3f35b860ffcbb19236a32235717472d217cde8e48c65$0.f$3 -> d
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$86528ac88415f1b7618a3f35b860ffcbb19236a32235717472d217cde8e48c65$0.<init>(org.mozilla.javascript.NativePromise$Reaction,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$86528ac88415f1b7618a3f35b860ffcbb19236a32235717472d217cde8e48c65$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda3 -> org.mozilla.javascript.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.NativePromise$Reaction org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$9bb4c6df1c0245b825a454367761bbd88ee12f0cca79098eedefe2168804f8c8$0.f$0 -> a
    org.mozilla.javascript.Context org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$9bb4c6df1c0245b825a454367761bbd88ee12f0cca79098eedefe2168804f8c8$0.f$1 -> b
    org.mozilla.javascript.Scriptable org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$9bb4c6df1c0245b825a454367761bbd88ee12f0cca79098eedefe2168804f8c8$0.f$2 -> c
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$9bb4c6df1c0245b825a454367761bbd88ee12f0cca79098eedefe2168804f8c8$0.f$3 -> d
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$9bb4c6df1c0245b825a454367761bbd88ee12f0cca79098eedefe2168804f8c8$0.<init>(org.mozilla.javascript.NativePromise$Reaction,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$9bb4c6df1c0245b825a454367761bbd88ee12f0cca79098eedefe2168804f8c8$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda4 -> org.mozilla.javascript.j0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$a74045b5231408b52c1258fd2081c722a01ff3a46b18611fe76c278af2aed953$0.f$0 -> a
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$a74045b5231408b52c1258fd2081c722a01ff3a46b18611fe76c278af2aed953$0.<init>(java.lang.Object) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$a74045b5231408b52c1258fd2081c722a01ff3a46b18611fe76c278af2aed953$0.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda5 -> org.mozilla.javascript.k0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.Scriptable org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$0.construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> construct
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda6 -> org.mozilla.javascript.l0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$1.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda7 -> org.mozilla.javascript.m0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$2.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$2.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda8 -> org.mozilla.javascript.n0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$3.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$3.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$$ExternalSyntheticLambda9 -> org.mozilla.javascript.o0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$4.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$$InternalSyntheticLambda$1$aeba7557acd1721016a0a8b03520f570887c51a976a95eb187e36b703fbbdd24$4.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$Capability -> org.mozilla.javascript.NativePromise$Capability:
    java.lang.Object $r8$lambda$NE9v873U4ndRTAwsMqXqeBObgNw(org.mozilla.javascript.NativePromise$Capability,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> a
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$Capability$$ExternalSyntheticLambda0 -> org.mozilla.javascript.p0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.NativePromise$Capability org.mozilla.javascript.NativePromise$Capability$$InternalSyntheticLambda$1$fa5cfc26a7a237cccb1a72a4d2d67fabbb671b3bb1bc5a1812cb86105bd39203$0.f$0 -> a
    void org.mozilla.javascript.NativePromise$Capability$$InternalSyntheticLambda$1$fa5cfc26a7a237cccb1a72a4d2d67fabbb671b3bb1bc5a1812cb86105bd39203$0.<init>(org.mozilla.javascript.NativePromise$Capability) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$Capability$$InternalSyntheticLambda$1$fa5cfc26a7a237cccb1a72a4d2d67fabbb671b3bb1bc5a1812cb86105bd39203$0.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$PromiseAllResolver -> org.mozilla.javascript.NativePromise$PromiseAllResolver:
    java.lang.Object $r8$lambda$4cgAZ8rJbYdHMQYqMNp4koHdEug(org.mozilla.javascript.NativePromise$PromiseAllResolver,org.mozilla.javascript.NativePromise$PromiseElementResolver,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> a
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$PromiseAllResolver$$ExternalSyntheticLambda0 -> org.mozilla.javascript.q0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.NativePromise$PromiseElementResolver org.mozilla.javascript.NativePromise$PromiseAllResolver$$InternalSyntheticLambda$1$9491a3768ecd1d6485eabc895a523408d990f2e8bd1b0123cd801d83821709bd$0.f$1 -> b
    org.mozilla.javascript.NativePromise$PromiseAllResolver org.mozilla.javascript.NativePromise$PromiseAllResolver$$InternalSyntheticLambda$1$9491a3768ecd1d6485eabc895a523408d990f2e8bd1b0123cd801d83821709bd$0.f$0 -> a
    void org.mozilla.javascript.NativePromise$PromiseAllResolver$$InternalSyntheticLambda$1$9491a3768ecd1d6485eabc895a523408d990f2e8bd1b0123cd801d83821709bd$0.<init>(org.mozilla.javascript.NativePromise$PromiseAllResolver,org.mozilla.javascript.NativePromise$PromiseElementResolver) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$PromiseAllResolver$$InternalSyntheticLambda$1$9491a3768ecd1d6485eabc895a523408d990f2e8bd1b0123cd801d83821709bd$0.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$ResolvingFunctions -> org.mozilla.javascript.NativePromise$ResolvingFunctions:
    java.lang.Object $r8$lambda$3Lar65Hl6DhdZxTC3TnJdW90KKc(org.mozilla.javascript.NativePromise$ResolvingFunctions,org.mozilla.javascript.NativePromise,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$RBkOdXKU3eWlPDIhmbG3FJlEteE(org.mozilla.javascript.NativePromise,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$ldNJytokOTbf6Hj-geYIOUDnSqk(org.mozilla.javascript.NativePromise$ResolvingFunctions,org.mozilla.javascript.NativePromise,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> c
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$ResolvingFunctions$$ExternalSyntheticLambda0 -> org.mozilla.javascript.r0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.NativePromise org.mozilla.javascript.NativePromise$ResolvingFunctions$$InternalSyntheticLambda$1$0012ec605c511d7eb7aeeebbc6e8d34badbaee00e0b2293ae3c8e0d34675dded$0.f$0 -> a
    org.mozilla.javascript.Context org.mozilla.javascript.NativePromise$ResolvingFunctions$$InternalSyntheticLambda$1$0012ec605c511d7eb7aeeebbc6e8d34badbaee00e0b2293ae3c8e0d34675dded$0.f$1 -> b
    org.mozilla.javascript.Scriptable org.mozilla.javascript.NativePromise$ResolvingFunctions$$InternalSyntheticLambda$1$0012ec605c511d7eb7aeeebbc6e8d34badbaee00e0b2293ae3c8e0d34675dded$0.f$2 -> c
    java.lang.Object org.mozilla.javascript.NativePromise$ResolvingFunctions$$InternalSyntheticLambda$1$0012ec605c511d7eb7aeeebbc6e8d34badbaee00e0b2293ae3c8e0d34675dded$0.f$3 -> d
    java.lang.Object org.mozilla.javascript.NativePromise$ResolvingFunctions$$InternalSyntheticLambda$1$0012ec605c511d7eb7aeeebbc6e8d34badbaee00e0b2293ae3c8e0d34675dded$0.f$4 -> e
    void org.mozilla.javascript.NativePromise$ResolvingFunctions$$InternalSyntheticLambda$1$0012ec605c511d7eb7aeeebbc6e8d34badbaee00e0b2293ae3c8e0d34675dded$0.<init>(org.mozilla.javascript.NativePromise,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void org.mozilla.javascript.NativePromise$ResolvingFunctions$$InternalSyntheticLambda$1$0012ec605c511d7eb7aeeebbc6e8d34badbaee00e0b2293ae3c8e0d34675dded$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$ResolvingFunctions$$ExternalSyntheticLambda1 -> org.mozilla.javascript.s0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.NativePromise$ResolvingFunctions org.mozilla.javascript.NativePromise$ResolvingFunctions$$InternalSyntheticLambda$1$61546c5a48f223a918c300d7b9bf3f78377c06dd58a37e9cad1bb3ffdd9a352e$0.f$0 -> a
    org.mozilla.javascript.NativePromise org.mozilla.javascript.NativePromise$ResolvingFunctions$$InternalSyntheticLambda$1$61546c5a48f223a918c300d7b9bf3f78377c06dd58a37e9cad1bb3ffdd9a352e$0.f$1 -> b
    void org.mozilla.javascript.NativePromise$ResolvingFunctions$$InternalSyntheticLambda$1$61546c5a48f223a918c300d7b9bf3f78377c06dd58a37e9cad1bb3ffdd9a352e$0.<init>(org.mozilla.javascript.NativePromise$ResolvingFunctions,org.mozilla.javascript.NativePromise) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$ResolvingFunctions$$InternalSyntheticLambda$1$61546c5a48f223a918c300d7b9bf3f78377c06dd58a37e9cad1bb3ffdd9a352e$0.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.NativePromise$ResolvingFunctions$$ExternalSyntheticLambda2 -> org.mozilla.javascript.t0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.NativePromise$ResolvingFunctions org.mozilla.javascript.NativePromise$ResolvingFunctions$$InternalSyntheticLambda$1$61546c5a48f223a918c300d7b9bf3f78377c06dd58a37e9cad1bb3ffdd9a352e$1.f$0 -> a
    org.mozilla.javascript.NativePromise org.mozilla.javascript.NativePromise$ResolvingFunctions$$InternalSyntheticLambda$1$61546c5a48f223a918c300d7b9bf3f78377c06dd58a37e9cad1bb3ffdd9a352e$1.f$1 -> b
    void org.mozilla.javascript.NativePromise$ResolvingFunctions$$InternalSyntheticLambda$1$61546c5a48f223a918c300d7b9bf3f78377c06dd58a37e9cad1bb3ffdd9a352e$1.<init>(org.mozilla.javascript.NativePromise$ResolvingFunctions,org.mozilla.javascript.NativePromise) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.NativePromise$ResolvingFunctions$$InternalSyntheticLambda$1$61546c5a48f223a918c300d7b9bf3f78377c06dd58a37e9cad1bb3ffdd9a352e$1.call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.Node$NodeIterator -> org.mozilla.javascript.Node$NodeIterator:
    void forEachRemaining($-vivified-$.java.util.function.Consumer) -> forEachRemaining
      # {"id":"com.android.tools.r8.synthesized"}
    void forEachRemaining(java.util.function.Consumer) -> forEachRemaining
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.ScriptRuntime$$ExternalSyntheticApiModelOutline0 -> org.mozilla.javascript.u0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int org.mozilla.javascript.ScriptRuntime$$InternalSyntheticApiModelOutline$1$68a705844f32e60954f489be1cf48dd308204720cb668a5ee905a18de3546c7c$0.m(java.math.BigInteger) -> a
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.optimizer.OptRuntime -> org.mozilla.javascript.optimizer.OptRuntime:
    java.lang.Object $r8$lambda$nkcl7ufBnCixh_eNHP8jiz3N5n8(java.lang.String[],org.mozilla.javascript.Script,org.mozilla.javascript.Context) -> a
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.optimizer.OptRuntime$$ExternalSyntheticLambda0 -> org.mozilla.javascript.optimizer.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.mozilla.javascript.Script org.mozilla.javascript.optimizer.OptRuntime$$InternalSyntheticLambda$1$6d5dee980102a157712dadcdceaf703b4c83973657175a04bc13b34610f7207f$0.f$1 -> b
    java.lang.String[] org.mozilla.javascript.optimizer.OptRuntime$$InternalSyntheticLambda$1$6d5dee980102a157712dadcdceaf703b4c83973657175a04bc13b34610f7207f$0.f$0 -> a
    void org.mozilla.javascript.optimizer.OptRuntime$$InternalSyntheticLambda$1$6d5dee980102a157712dadcdceaf703b4c83973657175a04bc13b34610f7207f$0.<init>(java.lang.String[],org.mozilla.javascript.Script) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object org.mozilla.javascript.optimizer.OptRuntime$$InternalSyntheticLambda$1$6d5dee980102a157712dadcdceaf703b4c83973657175a04bc13b34610f7207f$0.run(org.mozilla.javascript.Context) -> run
      # {"id":"com.android.tools.r8.synthesized"}
org.mozilla.javascript.typedarrays.NativeTypedArrayIterator -> org.mozilla.javascript.typedarrays.NativeTypedArrayIterator:
    void forEachRemaining($-vivified-$.java.util.function.Consumer) -> forEachRemaining
      # {"id":"com.android.tools.r8.synthesized"}
    void forEachRemaining(java.util.function.Consumer) -> forEachRemaining
      # {"id":"com.android.tools.r8.synthesized"}
org.slf4j.ILoggerFactory -> b0.a:
    org.slf4j.Logger getLogger(java.lang.String) -> a
org.slf4j.Logger -> b0.b:
    void error(java.lang.String,java.lang.Object) -> a
    void error(java.lang.String) -> b
    void trace(java.lang.String,java.lang.Throwable) -> c
    void trace(java.lang.String,java.lang.Object) -> d
    void error(java.lang.String,java.lang.Throwable) -> e
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> f
    void trace(java.lang.String) -> g
    boolean isTraceEnabled() -> h
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> i
org.slf4j.LoggerFactory -> b0.c:
    java.lang.String STATIC_LOGGER_BINDER_PATH -> f
    org.slf4j.helpers.NOPLoggerFactory NOP_FALLBACK_FACTORY -> c
    java.lang.String[] API_COMPATIBILITY_LIST -> e
    org.slf4j.helpers.SubstituteLoggerFactory SUBST_FACTORY -> b
    int INITIALIZATION_STATE -> a
    boolean DETECT_LOGGER_NAME_MISMATCH -> d
    void bind() -> a
    void emitReplayOrSubstituionWarning(org.slf4j.event.SubstituteLoggingEvent,int) -> b
    void emitReplayWarning(int) -> c
    void emitSubstitutionWarning() -> d
    void failedBinding(java.lang.Throwable) -> e
    java.util.Set findPossibleStaticLoggerBinderPathSet() -> f
    void fixSubstituteLoggers() -> g
    org.slf4j.ILoggerFactory getILoggerFactory() -> h
    org.slf4j.Logger getLogger(java.lang.Class) -> i
    org.slf4j.Logger getLogger(java.lang.String) -> j
    boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set) -> k
    boolean isAndroid() -> l
    boolean messageContainsOrgSlf4jImplStaticLoggerBinder(java.lang.String) -> m
    boolean nonMatchingClasses(java.lang.Class,java.lang.Class) -> n
    void performInitialization() -> o
    void replayEvents() -> p
    void replaySingleEvent(org.slf4j.event.SubstituteLoggingEvent) -> q
    void reportActualBinding(java.util.Set) -> r
    void reportMultipleBindingAmbiguity(java.util.Set) -> s
    void versionSanityCheck() -> t
org.slf4j.Marker -> b0.d:
org.slf4j.event.EventRecodingLogger -> c0.a:
    java.util.Queue eventQueue -> c
    org.slf4j.helpers.SubstituteLogger logger -> b
    java.lang.String name -> a
    void error(java.lang.String,java.lang.Object) -> a
    void error(java.lang.String) -> b
    void trace(java.lang.String,java.lang.Throwable) -> c
    void trace(java.lang.String,java.lang.Object) -> d
    void error(java.lang.String,java.lang.Throwable) -> e
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> f
    void trace(java.lang.String) -> g
    boolean isTraceEnabled() -> h
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> i
    void recordEvent(org.slf4j.event.Level,org.slf4j.Marker,java.lang.String,java.lang.Object[],java.lang.Throwable) -> j
    void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> k
org.slf4j.event.Level -> c0.b:
    org.slf4j.event.Level ERROR -> c
    org.slf4j.event.Level TRACE -> g
    org.slf4j.event.Level[] $VALUES -> h
    org.slf4j.event.Level DEBUG -> f
    org.slf4j.event.Level INFO -> e
    org.slf4j.event.Level WARN -> d
    java.lang.String levelStr -> b
    int levelInt -> a
org.slf4j.event.LoggingEvent -> c0.c:
org.slf4j.event.SubstituteLoggingEvent -> c0.d:
    java.lang.String message -> f
    org.slf4j.helpers.SubstituteLogger logger -> d
    org.slf4j.event.Level level -> a
    long timeStamp -> h
    org.slf4j.Marker marker -> b
    java.lang.String loggerName -> c
    java.lang.String threadName -> e
    java.lang.Object[] argArray -> g
    java.lang.Throwable throwable -> i
    org.slf4j.helpers.SubstituteLogger getLogger() -> a
    void setArgumentArray(java.lang.Object[]) -> b
    void setLevel(org.slf4j.event.Level) -> c
    void setLogger(org.slf4j.helpers.SubstituteLogger) -> d
    void setLoggerName(java.lang.String) -> e
    void setMarker(org.slf4j.Marker) -> f
    void setMessage(java.lang.String) -> g
    void setThreadName(java.lang.String) -> h
    void setThrowable(java.lang.Throwable) -> i
    void setTimeStamp(long) -> j
org.slf4j.helpers.MarkerIgnoringBase -> d0.a:
org.slf4j.helpers.NOPLogger -> d0.b:
    org.slf4j.helpers.NOPLogger NOP_LOGGER -> a
    void error(java.lang.String,java.lang.Object) -> a
    void error(java.lang.String) -> b
    void trace(java.lang.String,java.lang.Throwable) -> c
    void trace(java.lang.String,java.lang.Object) -> d
    void error(java.lang.String,java.lang.Throwable) -> e
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> f
    void trace(java.lang.String) -> g
    boolean isTraceEnabled() -> h
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> i
org.slf4j.helpers.NOPLoggerFactory -> d0.c:
    org.slf4j.Logger getLogger(java.lang.String) -> a
org.slf4j.helpers.NamedLoggerBase -> d0.d:
org.slf4j.helpers.SubstituteLogger -> d0.e:
    java.util.Queue eventQueue -> f
    org.slf4j.Logger _delegate -> b
    java.lang.reflect.Method logMethodCache -> d
    org.slf4j.event.EventRecodingLogger eventRecodingLogger -> e
    java.lang.String name -> a
    boolean createdPostInitialization -> g
    java.lang.Boolean delegateEventAware -> c
    void error(java.lang.String,java.lang.Object) -> a
    void error(java.lang.String) -> b
    void trace(java.lang.String,java.lang.Throwable) -> c
    void trace(java.lang.String,java.lang.Object) -> d
    void error(java.lang.String,java.lang.Throwable) -> e
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> f
    void trace(java.lang.String) -> g
    boolean isTraceEnabled() -> h
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> i
    org.slf4j.Logger delegate() -> j
    org.slf4j.Logger getEventRecordingLogger() -> k
    boolean isDelegateEventAware() -> l
    boolean isDelegateNOP() -> m
    boolean isDelegateNull() -> n
    void log(org.slf4j.event.LoggingEvent) -> o
    void setDelegate(org.slf4j.Logger) -> p
org.slf4j.helpers.SubstituteLoggerFactory -> d0.f:
    java.util.Map loggers -> b
    java.util.concurrent.LinkedBlockingQueue eventQueue -> c
    boolean postInitialization -> a
    org.slf4j.Logger getLogger(java.lang.String) -> a
    void clear() -> b
    java.util.concurrent.LinkedBlockingQueue getEventQueue() -> c
    java.util.List getLoggers() -> d
    void postInitialization() -> e
org.slf4j.helpers.Util -> d0.g:
    boolean SECURITY_MANAGER_CREATION_ALREADY_ATTEMPTED -> b
    org.slf4j.helpers.Util$ClassContextSecurityManager SECURITY_MANAGER -> a
    java.lang.Class getCallingClass() -> a
    org.slf4j.helpers.Util$ClassContextSecurityManager getSecurityManager() -> b
    void report(java.lang.String) -> c
    void report(java.lang.String,java.lang.Throwable) -> d
    org.slf4j.helpers.Util$ClassContextSecurityManager safeCreateSecurityManager() -> e
    boolean safeGetBooleanSystemProperty(java.lang.String) -> f
    java.lang.String safeGetSystemProperty(java.lang.String) -> g
org.slf4j.helpers.Util$1 -> d0.g$a:
org.slf4j.helpers.Util$ClassContextSecurityManager -> d0.g$b:
